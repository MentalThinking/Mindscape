<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Mudlet Standard Stuff</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Challenger Deep</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Prompt</name>
				<script>-- Find extraneous info and pass to the prompt event.
local fire, invis, date

if overridePrompt == true then
	overridePrompt = nil
	raiseEvent("misc prompt")
	return
end

if isGod() then
	fire = line:match("f%[(.)%]")
	invis = line:match("v%[(%w+)%]")
	date = line:match("d%[(.+)%]")
	raiseEvent("prompt", fire, invis, date)
else
	date = line:match("d%[(.+)%]")
	raiseEvent("prompt", date)
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return isPrompt()</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Deathsight</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Kill Location</name>
					<script>local room = matches[2]
local area = matches[3]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You divine the location of this death as (.+) in (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Kill Assists</name>
					<script>local assists = matches[2]
assists = assists:split(",")

for i,v in ipairs(assists) do
	assists[i] = v:trim()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>They were assisted by: (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Deathsight Messages</name>
					<script>cd.Gag()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
					<colorTriggerBgColor>#800000</colorTriggerBgColor>
					<regexCodeList>
						<string>ANSI_COLORS_F{009}_B{001}</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>6</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Cosmetic</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>News</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>News - Header</name>
						<script>erase()
newsBoard = matches[2]:title()
newsPostNumber = matches[3]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) NEWS \#(\d+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>News - Date</name>
						<script>erase()
cecho("&lt;a_darkgrey&gt;  " .. newsBoard .. "  &lt;a_darkcyan&gt;Date &lt;a_darkgrey&gt;\| &lt;a_grey&gt;" ..
	string.format("%d/%d/%d at %d/%d",
		matches[2], matches[3], matches[4], matches[5], matches[6]
	)
)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Date\: (\d+)\/(\d+)\/(\d+) at (\d+):(\d+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>News - Additional Info</name>
						<script>erase()

if matches[2] == "From" then
	cecho("&lt;a_cyan&gt;" .. newsPostNumber:jright(2 + newsBoard:len()) .. "  &lt;a_darkcyan&gt;" .. matches[2] .. " &lt;a_darkgrey&gt;\| &lt;a_grey&gt;" .. matches[3])
else
	cecho(string.space(4 + newsBoard:len()) .. "&lt;a_darkcyan&gt;" .. matches[2] .. " &lt;a_darkgrey&gt;\| &lt;a_grey&gt;" .. matches[3])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(From|To  |Subj)\: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>News - Footer</name>
						<script>erase()
cecho(string.space(4 + newsBoard:len()) .. "&lt;a_darkcyan&gt;On   &lt;a_darkgrey&gt;\| &lt;a_grey&gt;" ..
	string.format("%s %d%s, %d MA",
		matches[4], matches[2], matches[3], matches[5]
	)
)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Penned by my hand on the (\d+)(st|nd|rd|th) of (.+), in the year (\d+) (?:\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>XP Gain</name>
					<script>local cXP = cd.player.XP.current
local mXP = cd.player.XP.max
local gXP = tonumber(matches[2])
local pXP = math.round((gXP * 100) / mXP, 3)
local type = matches[3]

rewrite("&lt;gold&gt;+%s &lt;a_darkgrey&gt;XP. [&lt;a_brown&gt;%s%%&lt;a_darkgrey&gt;]" % {pNum(gXP), pXP})
raiseEvent("ui.update", "stats")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Experience Gained\: (\d+) \((.+)\) \[total\: \d+\]$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>MORE Replacers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No MORE</name>
						<script>erase()

cecho(string.space(10) .. "&lt;a_darkcyan&gt;\&lt;&lt;a_cyan&gt;EOF&lt;a_darkcyan&gt;\&gt; &lt;a_darkgreen&gt;You have reached the end of the document. &lt;a_darkgrey&gt;100% shown.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>An unseen presence whispers in your ear, "There is no more, friend."</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Type MORE</name>
						<script>local amt = matches[2]
local width = math.round((tonumber(amt) * 30) / 100)

erase()

cecho(string.space(40 - ((amt:len() + 46) / 2)))
cecho("&lt;a_darkcyan&gt;\&lt;&lt;a_cyan&gt;MORE&lt;a_darkcyan&gt;\&gt; &lt;a_green&gt;" .. string.rep("\|", width) .. "&lt;a_darkgreen&gt;" .. string.rep("-", 30 - width) .. " &lt;a_darkgrey&gt;" .. amt .. "% shown.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Type more to continue reading\. \((\d+)\% shown\)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quests</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Acquired Quest</name>
						<script>local quest = matches[2]
local q = matches[2]:gsub("_", " ")
q = q:title()

erase()

cecho("&lt;a_blue&gt;(&lt;gold&gt;!&lt;a_blue&gt;)&lt;a_darkgrey&gt;: Acquired a new quest, &lt;a_brown&gt;\"")
fg("a_yellow")
echoLink(q .. ".", [[send("QUEST ]] .. quest .. [[")]], "View the quest's information.", true)
cecho("&lt;a_brown&gt;\"")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have received a quest! Check out QUEST (.+) for more information\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Completed Quest</name>
						<script>local quest = matches[2]
quest = quest:gsub("_", " ")
quest = quest:title()

erase()

cecho("&lt;a_blue&gt;(&lt;gold&gt;!&lt;a_blue&gt;)&lt;a_darkgrey&gt;: &lt;a_brown&gt;\"&lt;a_yellow&gt;" .. quest .. "&lt;a_brown&gt;\" &lt;a_darkgrey&gt;completed!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have completed the (.+) quest!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chapel Garden</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Candle Quest - Torch Attendant</name>
							<script>send("path find 26564", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A chapel attendant says, "The torches will soon burn out and my storage is empty.If you could go fetch some for me I would be very grateful."</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Candle Quest - Torch Pickup</name>
							<script>send("path find 26588", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You pick up a couple of unused torches.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Candle Quest - Clean the Orb</name>
							<script>send("clean 24926", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A monk gardener says, "You could clean that orb over there. It looks a little dusty to me."</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Candle Quest - Rake Monk</name>
							<script>rakeMonkVnum = cd.room.num
send("path find 26564", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A monk gardener says, "Do you think you could fetch me a new rake? I will give you a candle for that arch if you do."</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Candle Quest - Got the Rake</name>
							<script>if rakeMonkVnum then
	send("path find " .. rakeMonkVnum, false)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You pick up a garden rake.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ylem</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ylem Mist (in Gauntlet)</name>
						<script>local c = {
	["red"] = "medium_violet_red",
	["green"] = "spring_green",
	["blue"] = "deep_sky_blue",
	["yellow"] = "gold",
	["white"] = "navajo_white",
}

erase()
cecho(string.space(2 + (2 - matches[2]:len())) .. "&lt;a_white&gt;" .. matches[2] .. " &lt;a_darkgrey&gt;| &lt;" .. c[matches[3]] .. "&gt;" .. matches[3]:title() .. " &lt;a_grey&gt;mist.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\- (\w+) coalescences of (\w+) mist\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Misc</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mind Hallucinate</name>
						<script>local recipient = mindHallucinateText:match("^(%w+) .*$")
local text = mindHallucinateText:match("^%w+ (.*)$")

cecho("\n&lt;grey&gt;" .. recipient .. ": &lt;dim_grey&gt;" .. text)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You project the hallucination into the mind of \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scent - Header</name>
						<script>erase()

sysLine("You pick up the following scents:")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You use Racial Scent.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scent - Entry</name>
						<script>local name = matches[2]
local room = matches[3]

erase()
cecho("  &lt;a_darkcyan&gt;- &lt;a_grey&gt;" .. name:jleft(14) .. "&lt;a_brown&gt;" .. room)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You pick up the faint scent of (\w+) at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pack Quarry Kill</name>
						<script>erase()

cecho("&lt;dark_goldenrod&gt;[&lt;gold&gt;+&lt;dark_goldenrod&gt;] &lt;a_darkgrey&gt;You fill with pride as you tear apart your quarry for &lt;white&gt;Viru Ambor&lt;a_darkgrey&gt;.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You fill with pride as you tear apart your quarry.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mind Sense - Header</name>
						<script>erase()

sysLine(matches[1])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You seek out all mental presences within your reach:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mind Sense - Entry</name>
						<script>local name = matches[2]
local room = matches[3]

erase()
cecho("  &lt;a_darkcyan&gt;- &lt;a_grey&gt;" .. name:jleft(14) .. "&lt;a_brown&gt;" .. room)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense (\w+) at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mind Sense - Empty</name>
						<script>erase()
cecho("  &lt;a_darkcyan&gt;- &lt;a_grey&gt;No one.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You find yourself alone.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Classleads - New Report</name>
						<script>local name, num, skill = matches[2], matches[3], matches[4]

rewrite("&lt;a_darkgrey&gt;[&lt;a_grey&gt;%s&lt;a_darkgrey&gt;] &lt;a_brown&gt;New report: &lt;a_grey&gt;%s&lt;a_darkgrey&gt;, by &lt;a_grey&gt;%s&lt;a_darkgrey&gt;." % {num, skill, name})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Classleads\)\: (\w+) has submitted classlead report #(\d+) for (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm Sources Header</name>
						<script>worm_sources_skipline = true
enableTrigger("Worm Sources Entry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>| From                                | To                                  |</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm Sources Footer</name>
						<script>if worm_sources_skipline == true then
  worm_sources_skipline = nil
  return
end

disableTrigger("Worm Sources Entry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>+-------------------------------------+-------------------------------------+</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm Sources Entry</name>
						<script>wormWarpEntry(matches[2], matches[3])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\| (.+) \| (.+) \|$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Esteem View Entry</name>
						<script>local year, month, day = matches[2], matches[3], matches[4]
local hour, minute, second = matches[5], matches[6], matches[7]

local name = matches[8]
local esteem = matches[9]

local buffer_len = name:len() + year:len() + month:len() + day:len() + hour:len() + minute:len() + second:len() + 13
local time_string = "&lt;a_grey&gt;%s&lt;a_darkgrey&gt;/&lt;a_grey&gt;%s&lt;a_darkgrey&gt;/&lt;a_grey&gt;%s %s&lt;a_darkgrey&gt;:&lt;a_grey&gt;%s&lt;a_darkgrey&gt;:&lt;a_grey&gt;%s" % {
  month, day, year, hour, minute, second
}

rewrite("\n&lt;a_brown&gt;--&lt;a_grey&gt; %s &lt;a_brown&gt;%s %s &lt;a_brown&gt;--\n&lt;a_grey&gt;%s" % {
  name, string.rep("-", cd.sys.wrapWidth - buffer_len), time_string, esteem
})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\d+)\/(\d+)\/(\d+) (\d+)\:(\d+)\:(\d+) \- (\w+) expressed esteem for\: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ideas</name>
						<script>local idea_id = multimatches[1][2]
local section = multimatches[1][3]:trim()
local support = tonumber(multimatches[1][4])

local year = multimatches[2][2]
local month = multimatches[2][3]
local day = multimatches[2][4]
local hour = multimatches[2][5]
local minute = multimatches[2][6]
local second = multimatches[2][7]

local idea = multimatches[2][8]

deleteLine()
moveCursor(0, getLineNumber() - 1)
deleteLine()

local support_color = "a_grey"
if support &gt;= 1 then
  support_color = "a_green"
  support = "+" .. support
elseif support &lt; 0 then
  support_color = "a_red"
end

local section_string = ""
if section ~= "unassigned" then
  section_string = " &lt;a_darkgrey&gt;(&lt;a_darkgreen&gt;%s&lt;a_darkgrey&gt;)" % {section}
end

cecho("\n&lt;a_grey&gt;Idea &lt;a_darkcyan&gt;%s &lt;a_darkgrey&gt;[&lt;%s&gt;%s&lt;a_darkgrey&gt;]%s&lt;a_grey&gt;, submitted &lt;a_darkcyan&gt;%s&lt;a_darkgrey&gt;/&lt;a_darkcyan&gt;%s&lt;a_darkgrey&gt;/&lt;a_darkcyan&gt;%s\n&lt;a_brown&gt;%s" % {
  idea_id, support_color, support, section_string,
  month, day, year,
  idea
})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Idea #(\d+)\s+Section\: (.+)\s+Support\: ([\d\-]+)$</string>
							<string>^(\d+)/(\d+)/(\d+) (\d+)\:(\d+)\:(\d+)\: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Player Login - Remote</name>
					<script>local player = matches[2]
local login_string = "&lt;a_darkcyan&gt;[ &lt;a_cyan&gt;%s &lt;a_darkgrey&gt;logged in. &lt;a_darkcyan&gt;]" % {player}

erase()
cecho(login_string)
chat:cecho(login_string .. "\n")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sense (.+) in the realm\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Player Logout - Remote</name>
					<script>local player = matches[2]
local logout_string = "&lt;a_darkcyan&gt;[ %s &lt;a_darkgrey&gt;logged &lt;a_darkred&gt;out&lt;a_darkgrey&gt;. &lt;a_darkcyan&gt;]" % {player}

erase()
cecho(logout_string)
chat:cecho(logout_string .. "\n")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sense (.+) has left the realm\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grove Whisper</name>
					<script>local msg = matches[2]

erase()
cecho("&lt;sea_green&gt;The wind whistles through the trees and you hear, \"&lt;spring_green&gt;" .. msg .. "&lt;sea_green&gt;\"")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The wind whistles through the trees and you hear, "(.+)"$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Level Up!</name>
					<script>local level = matches[2]
local hp_raise = matches[3]
local mp_raise = matches[4]
local lessons = matches[5]

local level_blurbs = {
	"You realize that all your life you have been coasting along as if you were in a dream. Suddenly, facing the trials of the last few days, you have come alive.",
	"You realize that you are catching on to the secret of success. It's just a matter of concentration.",
	"You've done things the hard way. But without taking risks, taking responsibility for failure... how could you have understood?",
	"Everything you do is just a bit easier, more instinctive, more satisfying. It is as though you had suddenly developed keen senses and instincts.",
	"You've learned a lot about Aetolia... and about yourself. It's hard to believe how ignorant you were, but now you have so much more to learn.",
	"You resolve to continue pushing yourself. Perhaps there's more to you than you thought.",
	"The secret does seem to be hard work, yes, but it's also a kind of blind passion, an inspiration.",
	"So that's how it works. You plod along, putting one foot before the other, look up, and suddenly, there you are. Right where you wanted to be all along.",
	"You woke today with a new sense of purpose. You're no longer afraid of failure. Failure is just an opportunity to learn something new.",
	"Being smart doesn't hurt. And a little luck now and then is nice. But the key is patience and hard work.",
	"You can't believe how easy it is. You just have to go... a little crazy. And then, suddenly, it all makes sense, and everything you do turns to gold.",
	"It's the most amazing thing. Yesterday it was hard, and today it is easy. Just a good night's sleep, and yesterday's mysteries are today's masteries.",
	"Today you wake up, full of energy and ideas, and you know, somehow, that overnight everything has changed. What a difference a day makes.",
	"Now you just stay at your peak as long as you can. There's no one stronger in Sapience, but there's always someone younger... a new challenger.",
	"You've been trying too hard, thinking too much. Relax. Trust your instincts. Just be yourself. Do the little things, and the big things take care of themselves.",
	"Life isn't over. You can still get smarter, or cleverer, or more experienced, or meaner... but your body and soul just aren't going to get any younger.",
	"With the life you've been living, the punishment your body has taken... there are limits, and maybe you've reached them. Is this what it's like to grow old?",
	"You're really good. Maybe the best. And that's why it's so hard to get better. But you just keep trying, because that's the way you are.",
	"By superhuman effort, you can avoid slipping backwards for a while. But one day, you'll lose a step, or drop a beat, or miss a detail... and you'll be gone forever.",
	"The results of hard work and dedication always look like luck. But you know you've earned every ounce of your success.",
}

erase()
echo("\n")
cecho("  &lt;dark_goldenrod&gt;\-\-+ &lt;light_goldenrod&gt;Level up! &lt;goldenrod&gt;You have gained level %s." % cd.player.level)

local blurb = '"%s"' % level_blurbs[math.random(#level_blurbs)]
cecho("\n&lt;a_darkgrey&gt;%s" % blurb:wrap2(cd.sys.wrapWidth - 4, 2))
echo("\n")
cecho("\n  &lt;a_green&gt;+%s &lt;a_grey&gt;health." % hp_raise)
cecho("\n  &lt;a_green&gt;+%s &lt;a_grey&gt;mana." % mp_raise)
cecho("\n  &lt;a_yellow&gt;+%s  &lt;a_grey&gt;lessons." % lessons)
echo("\n\n")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\[LEVEL UP\]\: You have reached the illustrious level of (.+)\. You have gained \+(\d+) max health, \+(\d+) max mana and (\d+) lessons\.$</string>
						<string>^\[LEVEL UP\]\: You have reached the illustrious level of (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Balance Queues</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Equilibrium Queue</name>
						<script>raiseEvent("queue.eq", matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\[Equilibrium Queue\]\: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Balance Queue</name>
						<script>raiseEvent("queue.bal", matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\[Balance Queue\]\: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>EqBal Queue</name>
						<script>raiseEvent("queue.eqbal", matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\[EqBal Queue\]\: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Queueing</name>
						<script>cd.Gag()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You will execute the following command when you next regain equilibrium and balance\: .+$</string>
							<string>^You will execute the following command when you recover (?:balance|equilibrium) next\: .+$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Object Display</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Object Weight (Single Unit)</name>
						<script>local token = matches[2]
local weight, unit = tonumber(matches[3]), matches[4]
local new_weight, new_unit

if unit == "ounce" then
	new_weight = weight * 28.35
else
	new_weight = weight * 453.59
end

if new_weight &lt;= 500 then
	new_unit = "gram"
else
	new_unit = "kilogram"
	new_weight = new_weight / 1000
end

new_weight = math.round(new_weight, 2)

if weight &gt; 1 then unit = unit .. "s" end
if new_weight &gt; 1 then new_unit = new_unit .. "s" end

erase()
cecho("&lt;a_darkgrey&gt;" .. token .. " weighs about &lt;a_white&gt;" .. weight .. " &lt;a_grey&gt;" .. unit .. " &lt;a_darkgrey&gt;\(&lt;a_white&gt;" .. new_weight .. " &lt;a_grey&gt;" .. new_unit .. "&lt;a_darkgrey&gt;\).")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) weighs(?: about)? (\d+) (ounce|pound)\(s\)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Object Decay</name>
						<script>local weeks = tonumber(matches[2])
local time = "week"
if weeks &gt; 1 then time = "weeks" end

erase()
cecho("&lt;a_darkgrey&gt;It will decay in &lt;a_white&gt;" .. weeks .. " &lt;a_darkgrey&gt;" .. time .. ".")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^It has (\d+) weeks of usefulness left\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Object Loyalty</name>
						<script>local token, loyalty = matches[2], matches[3]

erase()
cecho("&lt;a_darkgrey&gt;" .. token .. " is loyal to &lt;a_white&gt;" .. loyalty .. "&lt;a_darkgrey&gt;.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) is loyal to (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Object Weight (None)</name>
						<script>erase()
cecho("&lt;a_darkgrey&gt;" .. line)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>It is strangely weightless.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Player Mark</name>
						<script>local mark = matches[2]

erase()
cecho("&lt;a_darkgrey&gt;It originates from &lt;a_grey&gt;" .. mark .. "&lt;a_darkgrey&gt;.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^It bears the distinctive mark of (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mob Power</name>
						<script>local low = {
	["looks weak and feeble"] = 7,
	["looks relatively helpless"] = 6,
	["is a humble-looking creature"] = 5,
	["does not look particularly dangerous"] = 4,
	["appears to lack strength"] = 3,
	["looks upon you with caution"] = 2,
	["seems to be unafraid"] = 1,
	["is about equal in strength"] = 0,
}

local high = {
	["is about equal in strength"] = 0,
	["exudes a quiet confidence"] = 1,
	["is not one to be trifled with"] = 2,
	["appears to be extraordinarily strong"] = 3,
	["looks to be crushingly strong"] = 4,
	["has an air of extreme strength"] = 5,
	["exudes an aura of overwhelming power"] = 6,
	["does not even register your presence as a threat"] = 7,
}

local name = matches[2]
local power = matches[3]
local ply_level = cd.player.level * 2
local low_level, high_level = 0
local result = ""
local result_color = "a_white"

if power == "almost glows with nearly god-like power" then
	result = "225+"
	result_color = "a_red"
end

if low[power] == nil and high[power] == nil then
	error("\n&lt;a_red&gt;Malformed entry in mob power table.")
	return
end

if power == "is about equal in strength" then
	low_level = ply_level - 7
	high_level = ply_level + 7
else
	if low[power] ~= nil then
		-- Mob is lower than the player.
		local mult = low[power]
		high_level = ply_level - (7 * mult)
		if mult == 7 then
			low_level = 1
		else
			low_level = high_level - 7
		end
	else
		-- Mob is higher than the player.
		local mult = high[power]
		low_level = ply_level + (7 * mult)
		if mult == 7 then
			high_level = 255
		else
			high_level = low_level + 7
		end
	end
end

result = low_level .. "-" .. high_level

erase()
cecho("&lt;a_grey&gt;" .. name .. " &lt;a_darkgrey&gt;" .. power .. " \(&lt;" .. result_color .. "&gt;Lv. " .. result .. "&lt;a_darkgrey&gt;\).")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) (looks weak and feeble)\.$</string>
							<string>^(.+) (looks relatively helpless)\.$</string>
							<string>^(.+) (is a humble\-looking creature)\.$</string>
							<string>^(.+) (does not look particularly dangerous)\.$</string>
							<string>^(.+) (appears to lack strength)\.$</string>
							<string>^(.+) (looks upon you with caution)\.$</string>
							<string>^(.+) (seems to be unafraid)\.$</string>
							<string>^(.+) (is about equal in strength)\.$</string>
							<string>^(.+) (exudes a quiet confidence)\.$</string>
							<string>^(.+) (is not one to be trifled with)\.$</string>
							<string>^(.+) (appears to be extraordinarily strong)\.$</string>
							<string>^(.+) (looks to be crushingly strong)\.$</string>
							<string>^(.+) (has an air of extreme strength)\.$</string>
							<string>^(.+) (exudes an aura of overwhelming power)\.$</string>
							<string>^(.+) (does not even register your presence as a threat)\.$</string>
							<string>^(.+) (almost glows with nearly god\-like power)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Object Generic Line</name>
						<script>erase()
cecho("&lt;a_darkgrey&gt;" .. line)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>It can be worn in the following locations:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Midnight</name>
					<script>rewrite("&lt;a_darkgrey&gt;Midnight has come.")

raiseEvent("new day")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^It is now midnight on .+, the .+ of .+, year \d+ of the Midnight Age\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Birthdays</name>
					<script>local name = matches[2]
local age = matches[3]

erase()
cecho("&lt;a_grey&gt;" .. name .. " &lt;a_darkgrey&gt;" .. string.rep(".", 80 - (15 + name:len())) .. " &lt;a_grey&gt;turns &lt;gold&gt;" .. age:jright(3) .. " &lt;a_grey&gt;today!")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.+) is (\d+) years? old today\!$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Survey</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Area</name>
						<script>local area = matches[2]

erase()
cecho("\n       &lt;a_darkgrey&gt;Area &lt;a_darkblue&gt;| &lt;a_grey&gt;%s" % {area})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You discern that you are standing in (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Environment</name>
						<script>local env = matches[2]

erase()
cecho("&lt;a_darkgrey&gt;Environment &lt;a_darkblue&gt;| &lt;a_grey&gt;%s" % {env})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your environment conforms to that of (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Commodities</name>
						<script>erase()
cecho("\n  &lt;a_brown&gt;Commodities")
enableTrigger("Survey Line - Commodities Parsing")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>This location is capable of producing the following commodities:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Continent</name>
						<script>local continent = matches[2]

erase()
cecho("\n&lt;a_darkgrey&gt;You are in the &lt;a_white&gt;Continent of %s&lt;a_darkgrey&gt;." % {continent})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You stand upon the Continent of (.+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Plane</name>
						<script>local plane = matches[2]

erase()
cecho("&lt;a_darkgrey&gt;You are in the &lt;a_white&gt;%s Plane&lt;a_darkgrey&gt;." % {plane})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are in the (.+) Plane\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Holy Power</name>
						<script>local god = matches[2]

erase()
cecho("\n    &lt;a_darkgrey&gt;Divine &lt;a_darkblue&gt;| &lt;a_grey&gt;%s" % {god})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The Holy Power of (.+) pervades this area.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Exploration Percentage</name>
						<script>local percentage = tonumber(matches[2])

erase()

local progress_bar = string.rep("|", percentage)
local progress_empty = string.rep("-", 100 - percentage)
cecho("\n  &lt;a_white&gt;%s%% &lt;a_darkgrey&gt;explored.\n  &lt;a_green&gt;%s&lt;dark_green&gt;%s" % {percentage, progress_bar, progress_empty})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have explored (\d+)\% of this area\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Level Recommendation</name>
						<script>local level = matches[2]

erase()
cecho("      &lt;a_darkgrey&gt;Level &lt;a_darkblue&gt;| &lt;a_grey&gt;%s" % {level})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^It is recommended you are at least level (\d+) before hunting in this area\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Survey Line - Commodities Parsing</name>
						<script>local comm_level = {
	["scant traces"] = "Lv. 1",
	["meager amounts"] = "Lv. 2",
}

local comm_line = matches[2]
comm_line = comm_line:gsub(" and ", ", ")

local comms = string.split(comm_line, ", ")
for i, c in ipairs(comms) do
	local level = c:match("^(%w+ %w+) of %w+")
	local comm = c:match("^%w+ %w+ of (%w+)")
	local new_level, new_comm
	if level ~= nil and comm_level[level] then
		new_level = comm_level[level]
		new_comm = comm
		
		comms[i] = "%s %s" % {new_comm, new_level}
	end
end

erase()
for _, c in ipairs(comms) do
	cecho("\n    &lt;a_blue&gt;- &lt;a_grey&gt;%s" % {c})
end

disableTrigger("Survey Line - Commodities Parsing")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^  (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ascensions</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Idreth</name>
						<script>rewrite("&lt;a_darkgrey&gt;[ &lt;a_grey&gt;%s&lt;a_darkgrey&gt; has become an &lt;lime_green&gt;Idreth&lt;a_darkgrey&gt;. ]" % matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A shiver runs through Creation, rapidly swelling into a thunderous, echoing tone that heralds the rebirth of the Idreth, (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Yeleni</name>
						<script>rewrite("&lt;a_darkgrey&gt;[ &lt;a_grey&gt;%s&lt;a_darkgrey&gt; has become a &lt;light_sea_green&gt;Yeleni&lt;a_darkgrey&gt;. ]" % matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A visible ripple of energy flashes across the skies above, celebrating the ascension of(.+) to Yeleni\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tekal</name>
						<script>rewrite("&lt;a_darkgrey&gt;[ &lt;a_grey&gt;%s&lt;a_darkgrey&gt; has become a &lt;a_grey&gt;Tekal&lt;a_darkgrey&gt;. ]" % matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^An agonized scream startles all into a brief hushed silence as (.+) finally transcends the mortal body, assuming the hollow form of a Tekal\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Azudim</name>
						<script>rewrite("&lt;a_darkgrey&gt;[ &lt;a_grey&gt;%s&lt;a_darkgrey&gt; has become an &lt;firebrick&gt;Azudim&lt;a_darkgrey&gt;. ]" % matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The skies darken momentarily as tendrils of shadow creep across the firmament to form the terrible visage of the Azudim, (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Room</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Room Name</name>
					<script>local name = cd.room.name
local area = getCleanAreaName()
local env = cd.room.env
local num = cd.room.num
local godname = cd.room.godname

erase()

cecho("&lt;a_brown&gt;" .. line
--	.. string.rep(" ", 71 - ( string.len(matches[1]) + string.len(area) + string.len(mmp.environInfo[env]["short"]) + string.len(num) ))
	.. " &lt;dark_green&gt;\(&lt;lime_green&gt;" .. area .. "&lt;dark_green&gt;\) &lt;a_darkgrey&gt;\[")

--if mmp.environInfo[env] and mmp.environInfo[env]["color"] ~= "" then
--	fg(mmp.environInfo[env]["color"])
--	echo(mmp.environInfo[env]["short"])
--else
	fg("saddle_brown")
	echo(env)
--end

cecho("&lt;a_darkgrey&gt;\] &lt;dark_violet&gt;\(&lt;blue_violet&gt;v&lt;violet&gt;" .. num .. "&lt;dark_violet&gt;\)")

-- If the room contains special user notes, display them beneath the title.
if getRoomUserData(num, "Notes") ~= nil and getRoomUserData(num, "Notes") ~= "" then
	cecho("\n&lt;a_darkgrey&gt;" .. getRoomUserData(num, "Notes"))
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#c0c0c0</colorTriggerFgColor>
					<colorTriggerBgColor>#ffffff</colorTriggerBgColor>
					<regexCodeList>
						<string>ANSI_COLORS_F{015}_B{003}</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>6</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Exits</name>
					<script>raiseEvent("room displayed")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You see (?:a single exit|exits) leading .+$</string>
						<string>There are no obvious exits.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>WHO Duplicates</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>WHO List Header</name>
					<script>if checkWhoDuplicates == true then
	displayWhoDuplicates = true
  whoDuplicates = whoDuplicates or {}
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>-------------------------------------------------------------------------------</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>WHO List Entries</name>
					<script>local name = matches[2]
local room = matches[3]:trim()
local vnum = matches[4] or "0"

whoDuplicates[name] = {["room"] = room, ["vnum"] = vnum}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffff7f</mFgColor>
					<mBgColor>#00007f</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\s+(\w+) \- (.+) \- v(\d+)\s*$</string>
						<string>^\s+(\w+) \- (.+) \-\s*$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>WHO List Footer</name>
					<script>if displayWhoDuplicates == true then
  processWhoDuplicates()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^There are \d+ players on this plane and \d+ players on other planes\.$</string>
						<string>^There are \d+ people total online with \d+ people that are hidden from you\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Communication</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Channels</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>General Channel Talk</name>
						<script>local chan = matches[2]
local user = matches[3]
local says = matches[4]
local mesg = matches[5]

raiseEvent("channel talk", chan, user, says, mesg)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(([a-zA-Z\s\"\'\-\,]+)\): ([a-zA-Z\s\'\-\,]+) (say|says), \"(.+)\"$</string>
							<string>^\(([a-zA-Z\s\"\'\-\,]+)\): ([a-zA-Z \'\-,]+) (say|says), from \w+, \"(.+)\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>City Focus Alert</name>
						<script>local chan = matches[2]
local shri = matches[3]
local room = matches[4]

raiseEvent("city focus alert", chan, shri, room)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\((.+)\): A focus has appeared nearby a linked (shrine|monument) at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chaos Tattoo Gestures</name>
						<script>raiseEvent("tattoo talk", matches[2], matches[3])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense a gesture(?:, distant and delayed,)? from (.+)\; (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tells</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Incoming Tells</name>
						<script>local src = matches[2]
local msg = matches[3]
local ooc = 0

if src:match("^%[") then
	-- herp
else
	if msg:match("^%/") or msg:match("^%(") or msg:match("^[ocO]+%:") then
		ooc = 1
	end

	raiseEvent("incoming tell", src, msg, ooc)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Tells\|(.+)\)\: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Outgoing Tells</name>
						<script>local dest = matches[2]
local msg = matches[3]
local ooc = 0

if msg:match("^%/") or msg:match("^%(") or msg:match("^[ocO]+%:") then
	ooc = 1
end

raiseEvent("outgoing tell", dest, msg, ooc)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You tell (.+), \"(.+)\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Misc.</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Thoughts</name>
						<script>local thought = line

rewrite("&lt;steel_blue&gt;%s" % thought)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#00ffff</colorTriggerFgColor>
						<colorTriggerBgColor>#800080</colorTriggerBgColor>
						<regexCodeList>
							<string>ANSI_COLORS_F{014}_B{005}</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>6</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Message Header</name>
						<script>savedMsgNumber = matches[2]
savedMsgSender = matches[3]
savedMsgDate = matches[4]

savedMsgSender = savedMsgSender:trim()

enableTrigger("Message Body")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Message #(\d+)\s+Sent By: (.+)\s+Received On: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Message Body</name>
						<script>savedMsgContents = matches[2]
-- saveMessage()

disableTrigger("Message Body")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^"(.+)"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Leylines</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lesser Is Tapped</name>
					<script>raiseEvent("tapped lesser")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A palpitating tremor resonates from the leylines as a lesser focal point is tapped for its energy.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Acquired Mist/Mist Disappears</name>
					<script>ylemMistInRoom = nil</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The light around you slowly ceases to refract as the ylem energy dissipates into your surroundings.</string>
						<string>There is no ylem energy mist in this location to absorb.</string>
						<string>You raise your gauntlet, extending your fingers and allowing the latent ylem around you to absorb into the reserve chambers.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ylem Mist In Room</name>
					<script>ylemMistInRoom = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your vision distorts briefly, light scattering subtly as ylem energy diffuses into the surrounding atmosphere.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Extraction - Complete</name>
					<script>erase()
cecho("&lt;black,a_darkblue&gt; \&lt; &lt;a_darkgrey,a_darkblue&gt;\&lt; &lt;a_grey,a_darkblue&gt;\&lt;" .. string.rep(" ", 30) .. "&lt;a_yellow,a_darkblue&gt;Extraction complete." .. string.rep(" ", 54) .. "&lt;a_grey,a_darkblue&gt;\&gt; &lt;a_darkgrey,a_darkblue&gt;\&gt; &lt;black,a_darkblue&gt;\&gt; \n")

cd.Broadcast("Extraction complete.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Latent energies flare around the focus, crackling ominously with power before winking out with a hushed whisper. Motes of pale light drift upwards from the dying leyline's focus, smoldering like a dying ember into the firmament as the focal point collapses into the ether.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Extraction - Beginning</name>
					<script>erase()
cecho("&lt;a_grey&gt;The extraction process has begun.\nLiberating a &lt;a_darkcyan&gt;" .. matches[2] .. "&lt;a_grey&gt;.\nMay &lt;a_darkgreen&gt;" .. gmcp.Char.Status.city .. "'s &lt;a_grey&gt;glory be preserved.")

--cd.Broadcast("Extracting a " .. matches[2] .. " at " .. cd.room.name .. " \(v" .. cd.room.num .. ", " .. cd.room.area .. "\)")

extractionPrepTicks = 0</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You tap into the leylines, reaching outward to the (.+) for extraction\. Motes of energy flicker upwards to you\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Extraction - Preparation</name>
					<script>if not extractionPrepTicks then extractionPrepTicks = 0 end
extractionPrepTicks = extractionPrepTicks + 1

erase()
cecho("&lt;a_darkgrey&gt;\(&lt;a_darkcyan&gt;" .. extractionPrepTicks .. "&lt;a_darkgrey&gt;\) &lt;a_grey&gt;Preparing for extraction...")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The air hums with energy as you prepare for the extraction.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Extraction - Finished</name>
					<script>if not extractionPrepTicks then
	extractionPrepTicks = 1
end

erase()
cecho("&lt;a_darkgrey&gt;\(&lt;a_darkcyan&gt;" .. extractionPrepTicks .. "&lt;a_darkgrey&gt;\) &lt;a_grey&gt;Preparation &lt;a_cyan&gt;complete&lt;a_grey&gt;. Extraction has begun!")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel the strain upon your body lessen as the preparation for extraction comes to a close, motes of energy swirling around you.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Detection - Minor</name>
					<script>local count = tonumber(matches[2])

erase()
if count &gt; 0 then
	cecho(" &lt;a_darkcyan&gt;- &lt;a_white&gt;" .. count .. " &lt;a_grey&gt;minor")
	if count &gt; 1 then
		cecho("&lt;a_grey&gt;s")
	end
	cecho("&lt;a_grey&gt;.")
else
	cecho(" &lt;a_darkcyan&gt;- &lt;a_darkgrey&gt;0 minors.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You detect (\d+) minor foc(?:i|us)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Detection - Lesser</name>
					<script>local count = tonumber(matches[2])

erase()
if count &gt; 0 then
	cecho(" &lt;a_darkcyan&gt;- &lt;a_white&gt;" .. count .. " &lt;a_grey&gt;lesser")
	if count &gt; 1 then
		cecho("&lt;a_grey&gt;s")
	end
	cecho("&lt;a_grey&gt;.")
else
	cecho(" &lt;a_darkcyan&gt;- &lt;a_darkgrey&gt;0 lessers.")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You detect (\d+) lesser foc(?:us|i)\:$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Detection - Major</name>
					<script>erase()
cecho(" &lt;a_darkcyan&gt;- &lt;a_white&gt;Major &lt;a_grey&gt;detected!")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There is a major focus in existence:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>No Gauntlet/Mist</name>
					<script>ylemMistInRoom = nil</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You must be wearing the ylem-binding gauntlet to do that.</string>
						<string>The light around you slowly ceases to refract as the ylem energy dissipates into your surroundings.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>All Elds Shackled</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You see no valid targets to shackle by that name.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>3rd Party Extraction Begun</name>
					<script>local name = matches[2]

cd.Broadcast(name .. " has begun extraction at " .. cd.room.name .. " (" .. cd.room.num .. ")!")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) has finished preparing the focus for extraction, a look of relief flickering across \w+ features\. Brilliant motes of fragmented power swirl around \w+, clinging to \w+ body\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Movement</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Water Encountered</name>
					<script>if suppressSpecialMovementWarning == true then
	suppressSpecialMovementWarning = nil
	cd.Gag()
end

send("swim " .. cd.lastDir, false)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>There's water ahead of you. You'll have to swim to make it through.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Auto-Mount</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Summoning Mount</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You place your fingers to your mouth, and focusing mentally on your trusty steed you blow hard, creating a sharp, carrying whistle.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mount Is Out</name>
						<script>cd.Gag()

send("recall mount", false)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You already have a mount outside the stables. Use RECALL MOUNT.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mount Is Here</name>
						<script>cd.Gag()

send("mnt", false)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You begin to raise your fingers to your mouth to whistle for your mount before realising it's already with you!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Earth Encountered</name>
					<script>if suppressSpecialMovementWarning == true then
	suppressSpecialMovementWarning = nil
	cd.Gag()
end

send("burrow " .. cd.lastDir, false)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are packed much too tightly into the earth to do that.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Combat</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Slew A Mob</name>
					<script>raiseEvent("killing blow", getTarget(), "mob", matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Having slain (.+), you retrieve the corpse\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Status Corrections</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Insufficient Mana</name>
						<script>raiseEvent("low mana", cd.player.MP.current)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You do not have enough mana for that.</string>
							<string>Alas, your mana reserves are too low for that.</string>
							<string>You are lacking the mana to do that.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bashing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No Target</name>
						<script>raiseEvent("bashing.room_clear")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You can find no such target as '(.+)'\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Overkill</name>
						<script>erase()
cecho("&lt;cd_dark&gt;[ &lt;cd_bright&gt;OVERKILL! &lt;cd_dark&gt;]")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A rush of energy fills you as you feel ready to deliver a devastating blow upon your next target.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Critical Hit</name>
						<script>local type = matches[2]

if type == "CRITICAL" then
	critType = "normal"
elseif type == "STAGGERING CRITICAL" then
	critType = "staggering"
elseif type == "CRUSHING CRITICAL" then
	critType = "crushing"
elseif type == "MUTILATING CRITICAL" then
	critType = "mutilating"
else
	critType = "annihilating"
end

erase()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have scored (?:a|an) (CRITICAL|STAGGERING CRITICAL|CRUSHING CRITICAL|MUTILATING CRITICAL|ANNIHILATING CRITICAL) hit(?:!|!!!)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mob Damage</name>
						<script>local critColor = {
	["normal"] = "light_goldenrod",
	["staggering"] = "gold",
	["crushing"] = "dark_orange",
	["mutilating"] = "orange_red",
	["annihilating"] = "red",
}

local critValue = {
	["normal"] = 2,
	["staggering"] = 4,
	["crushing"] = 8,
	["mutilating"] = 16,
	["annihilating"] = 32,
}

local elementColor = {
	["blunt"] = "saddle_brown",
	["cutting"] = "dark_sea_green",
	["fire"] = "orange_red",
	["cold"] = "deep_sky_blue",
	["electric"] = "gold",
	["poison"] = "green_yellow",
	["psychic"] = "light_slate_blue",
	["asphyxiation"] = "light_slate_grey",
	["magical"] = "violet_red",
	["magic"] = "violet_red",
	["shadow"] = "blue_violet",
	["spirit"] = "pale_goldenrod",
	["unblockable"] = "white",
}

local dmgString = matches[2]
local damage, overkill, element, critString, overkillString
local cc = "dark_salmon"
local ec = "a_darkgrey"

damage = dmgString:match("^(%d+)")
overkill = dmgString:match("%((%d+) overkill%)")
element = dmgString:match(", (%w+), %w+$")

erase()

if element ~= nil then
	ec = elementColor[element]
	element = " " .. element
else
	element = ""
end

if overkill ~= nil then
	damage = tonumber(damage) + tonumber(overkill)
  overkillString = " &lt;a_darkgrey&gt;[&lt;slate_grey&gt;+%s &lt;a_grey&gt;overkill&lt;a_darkgrey&gt;]" % pNum(overkill)
else
	overkillString = ""
end

if critType ~= nil then
	cc = critColor[critType]
	cv = critValue[critType]

  critString = " &lt;%s&gt;[&lt;%s&gt;x%s&lt;darker&gt;]" % {darkColor(cc), cc, cv}
else
	critString = ""
end

cecho("&lt;a_darkgrey&gt;You deal &lt;%s&gt;%s&lt;%s&gt;%s &lt;a_darkgrey&gt;damage.%s%s" % {cc, pNum(damage), ec, element, critString, overkillString})
critType = nil</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Damage done: (.+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No Violence Allowed</name>
						<script>raiseEvent("bashing.room_clear", true)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>This location has been declared free of violence, by order of the Divine Ones.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Globe Bashing</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Globe Empty</name>
							<script>sendStack("drain globe", "summon elemental")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You do not have the power to summon forth an elemental.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Elemental Killed</name>
							<script>send("summon elemental", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Having slain a massive elemental, you retrieve the corpse.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Elemental Summoned</name>
							<script>cd.initiateBashing()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You concentrate on the raw elemental energy flowing about your body, coalescing some of its potential into a massive elemental.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Death</name>
					<script>raiseEvent("death")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You have been slain by (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dodged</name>
					<script>rewrite("&lt;a_darkgrey&gt;You dodge the attack.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You sidestep the attack, letting the strike go wide.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bleeding</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Reset Bleeding</name>
						<script>cd.status.bleeding = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You do not bleed my friend.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed Line</name>
						<script>rewrite("&lt;a_darkred&gt;You bleed &lt;a_red&gt;%s&lt;a_darkred&gt; health." % matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You bleed (\d+) health\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cosmetic</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Writhed Free</name>
						<script>erase()

cecho("&lt;a_darkgreen&gt;-- &lt;a_green&gt;You have writhed free! &lt;a_darkgreen&gt;--")
currentlyWrithing = nil</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have writhed free of your bindings.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You are Dead</name>
					<script>cd.status.dead = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are dead and cannot do that.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Endgame Defense</name>
					<script>if cd.player.race == "Azudim" then
	send("miasma", false)
elseif cd.player.race == "Yeleni" then
	send("warmth", false)
elseif cd.player.race == "Idreth" then
	send("safeguard", false)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The aura about you fades, leaving you somewhat more vulnerable again.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mind Radiance</name>
					<script>instakillWarning("Radiance")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A shiver runs down your spine, and you feel an instinctive urge to run as far and as fast as you can.</string>
						<string>Sparks of multicoloured light begin to dance in your mind.</string>
						<string>An odd sensation of warmth begins to fill your body.</string>
						<string>Arcs of white light begin to flash across your vision, radiant and bright.</string>
						<string>Your heart thumps as you realize that you have but seconds left to escape whatever fate awaits you.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Open PK Aura (Off)</name>
					<script>openPK = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your aura of hostility subsides.</string>
						<string>surrounded by an aura of latent ylem.</string>
						<string>surrounded by an aura of hostility.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Open PK Aura (On)</name>
					<script>openPK = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>As you tread heavily into the battlefield, you find that you begin to exude an aura of hostility, leaving you open to attack.</string>
						<string>As residual ylem falls upon your skin, a vibrant aura shimmers into existence around you, crackling with latent energy.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Generic Combat Broadcasts</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Abducted</name>
						<script>cd.Broadcast("ABDUCTED by " .. matches[2] .. " at " .. cd.room.name .. " (" .. cd.room.num .. ")!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A ghostly hand ripples into existence before you and grasps your shoulder\. Suddenly, your entire body begins vibrating rapidly, becoming quicker every second\. A short burst of azure light fills your vision, and you find yourself standing next to (\w+), out of sync with the rest of reality\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sigiled out of Phase</name>
						<script>cd.Broadcast("Broke free from Abduct at " .. cd.room.name .. " (" .. cd.room.num .. ")!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You use Enchantment Eye.</string>
							<string>Your phased defence has been stripped.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Player Banished Target</name>
						<script>cd.Broadcast("Kai Banished " .. matches[2] .. "!")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You use Kai Banish on (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Player Limb Tracking</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Player WOUNDS Entry</name>
						<script>local l = matches[2]:lower():gsub("%s", "_")
local perc = tonumber(matches[3])

cd.player.limb[l] = perc</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(Head|Torso|Left arm|Right arm|Left leg|Right leg)\:\s+([\d\.]+)\% \(.+ bruising\)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Targetting - No Limbs</name>
						<script>cd.status.limb_target = nil</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You will now aim your attacks wherever you see openings.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Targetting - Limb</name>
						<script>cd.status.limb_target = matches[2]:underscore()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You will now target the (.+) of your opponent\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>WOUNDS Header</name>
						<script>local t = matches[2]

if t == "your" then
  player_wounds_checking = true
  enableTrigger("Player WOUNDS Entry")
elseif t:lower() == getTarget():lower() then
  enemy_wounds_checking = true
  enableTrigger("Enemy WOUNDS Entry")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You take a moment to assess how damaged (\w+)(?:'s)? limbs are\:$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>[!] Missed Attack</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You strike clumsily at (\w+), completely missing \w+ with (.+)\.$</string>
						<string>^Tears blur your vision as you attempt to strike (\w+) with (.+), causing you to miss\.$</string>
						<string>Your swing falls short of its target.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Back to Life!</name>
					<script>cd.status.dead = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Sitting up from your supine position, you glance at your body and realize it is healed and whole once again. Still reeling in wonder from your experience, you quietly give thanks to Varian, the Celestine for the gift of life.</string>
						<string>^Light invades your vision, banishing the darkness that had overtaken you in an instant\. Floating within the brilliant white, you feel a forceful tugging on your very being, dragging you somewhere\. As the light begins to fade, you see the face of \w+ before you as you suddenly regain consciousness\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Class Triggers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Class Change</name>
						<script>local name = matches[2]
cd.player.class = name</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your active class has been switched to (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Archivist</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Constitution Wore Off</name>
							<script>send("elicit constitution", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your constitution wears off.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Praenomen</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Celerity Wore Off</name>
							<script>send("celerity", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are no longer moving so quickly.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rose from Earth</name>
							<script>cd.status.dead = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You begin to float gently upwards through the earth, which parts easily before you. Soon you have reached the surface, and the ground closes once again to conceal your secret refuge.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mending (On)</name>
							<script>mendingOffBalance = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You may mend your body once more.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mending (Off)</name>
							<script>mendingOffBalance = true

-- Failsafe.
tempTimer(30, [[mendingOffBalance = nil]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You use Corpus Mend.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Monk</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Transmutation</name>
							<script>erase()

cecho("&lt;a_darkmagenta&gt;\(&lt;lime_green&gt;Transmute: &lt;a_darkcyan&gt;" .. matches[2]:title() .. " &lt;a_darkgrey&gt;to &lt;a_cyan&gt;" .. matches[3]:title() .. "&lt;a_darkgrey&gt;.&lt;a_darkmagenta&gt;\)")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You call upon your Kai training and transmute your (health|mana) into pure (health|mana)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Numbness Up</name>
							<script>erase()

cecho("&lt;a_yellow,saddle_brown&gt; + &lt;a_white,saddle_brown&gt;Numbness&lt;a_yellow,saddle_brown&gt; UP! + ")

numbnessHits = 0</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You use Kaido Numbness.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Numbness Down</name>
							<script>erase()

cecho("&lt;a_yellow,a_darkred&gt; * &lt;a_white,a_darkred&gt;Numbness&lt;a_yellow,a_darkred&gt; DOWN. * ")
cecho("&lt;a_darkcyan&gt;\(&lt;saddle_brown&gt;Numbness&lt;a_darkgrey&gt; absorbed &lt;a_darkgreen&gt;" .. numbnessHits .. "&lt;a_darkgrey&gt; attacks!&lt;a_darkcyan&gt;\)")

numbnessHits = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cry out in agony as the effects of your numbness fade away and you feel your wounds once more.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Numbness Hit</name>
							<script>erase()

cecho("&lt;a_darkcyan&gt;\(&lt;a_darkgrey&gt;Absorbed by &lt;saddle_brown&gt;numbness&lt;a_darkgrey&gt;.&lt;a_darkcyan&gt;\)")

numbnessHits = numbnessHits + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You smile as the blow falls painlessly on you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mindnet: Leaving</name>
							<script>mind_net_list = mind_net_list or {}
mind_net_direction = "left"

table.insert(mind_net_list, matches[2])
deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.+) has left the area\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mindnet: Entering</name>
							<script>mind_net_list = mind_net_list or {}
mind_net_direction = "entered"

table.insert(mind_net_list, matches[2])
deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.+) has entered the area\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Broadcasts</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Kai Attacks</name>
								<script>cd.Broadcast(matches[2]:upper() .. "D " .. matches[3] .. ".")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You use Kai (Enfeeble|Cripple) on (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Templar</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Empowering</name>
							<script>local ench = matches[2]

if cd.modules.autobashing == true and ench == "sacrifice" then
	cd.Gag()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Focusing your mind, you imbue .+ with (.+) in your \w+ hand\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cleansing</name>
							<script>if cd.modules.autobashing == true then
	cd.Gag()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You run a hand along .+, cleansing all effects from it\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sacrifice</name>
							<script>if cd.modules.autobashing == true then
	erase()
	cecho("&lt;a_darkgrey&gt;Empowerment: &lt;deep_sky_blue&gt;Sacrifice&lt;a_darkgrey&gt;!")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As your attack strikes .+, the power within .+ flares, draining your life as the weapon releases a burst of violent energy into .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shapeshifter</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vocalizing Tick</name>
							<script>local vocal = matches[2]:lower()

if vocal == "serenade" then vocal = "serenading" end

currentHowls = currentHowls or {}
currentHowls[vocal] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your (.+) howl continues to pour from your throat\.$</string>
								<string>^Your (.+) howls bolster and strengthen your voice\.$</string>
								<string>^Your (serenade) continues to pour from your throat\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vocalizing Tick (Echoing)</name>
							<script>local vocal = matches[2]:lower()

currentHowls = currentHowls or {}
currentHowls[vocal] = true

cd.defenses.echoing = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your (.+) howl pours from your throat, affecting yourself\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>HOWLS List - Reset</name>
							<script>currentHowls = {}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are currently howling:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>HOWLS List - Entry</name>
							<script>local vocal = matches[2]:lower()

currentHowls = currentHowls or {}
currentHowls[vocal] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^An? (.+) howl\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shed - Ready</name>
							<script>cd.status.shapeshifter_shed_ready = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have no reason to shed your fur.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Salivate (On)</name>
							<script>cd.status.shapeshifter_salivating = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have gained the salivating defence.</string>
								<string>Your mouth is already full of saliva.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Salivate (Off)</name>
							<script>cd.status.shapeshifter_salivating = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your salivating defence has been stripped.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rage - Ready</name>
							<script>cd.status.shapeshifter_rage_ready = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You may rage once more.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fury - Up</name>
							<script>cd.status.shapeshifter_fury = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A flash of heat suffuses your body as you fill with fury.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fury - Down</name>
							<script>cd.status.shapeshifter_fury = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The fury that filled you lifts from your mind.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Snarling (On)</name>
							<script>cd.status.shapeshifter_snarling = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have gained the snarling defence.</string>
								<string>^You use Vocalizing Snarling on \w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Snarling (Off)</name>
							<script>cd.status.shapeshifter_snarling = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You use Vocalizing Snarling (off).</string>
								<string>Your snarling defence has been stripped</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Boneshaking (On)</name>
							<script>cd.status.shapeshifter_boneshaking = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You use Vocalizing Boneshaking.</string>
								<string>You have gained the boneshaking defence.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Boneshaking (Off)</name>
							<script>cd.status.shapeshifter_boneshaking = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You use Vocalizing Boneshaking (off).</string>
								<string>Your boneshaking defence has been stripped.</string>
								<string>^You use Vocalizing Baying \(failure\) on \w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shaman</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Boosting On</name>
							<script>erase()

cecho("&lt;a_yellow&gt;+++ &lt;a_grey&gt;Boosted!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have gained the boosting defence.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Boosting Off</name>
							<script>erase()

cecho("&lt;dark_orange&gt;--- &lt;a_darkgrey&gt;No longer boosted.")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your boosting defence has been stripped.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Overgrowth On</name>
							<script>cd.room.overgrowth = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Spreading your hands out with your palms open, you beseech the plant-life around you to surge at your behest. A tingling sensation erupts in your fingertips in response and verdant greenery overtakes your surroundings.</string>
								<string>You concentrate and send a tide of energy to your feet, the fresh growth becoming even more exuberant as it spreads outward and lush, verdant plantlife overtakes the vicinity.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Overgrowth Off</name>
							<script>cd.room.overgrowth = false
cd.room.indoors = false
natureAnimation = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The overgrowth choking the vicinity begins to wither and die, leaving the ground littered with browned stalks and leaves.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Canopy On</name>
							<script>cd.room.indoors = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You lift your hands over your hand and clasp them tightly together, gloom cloaking the area as thick overgrowth weaves itself within the canopy.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Animation On</name>
							<script>natureAnimation = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You bid the plantlife of your overgrowth into animation and a multitude of thorned stalks protrude from beneath the leaves, swaying to and fro ominously.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Barkskin Off</name>
							<script>erase()

cecho("&lt;dark_green&gt;[ &lt;a_grey&gt;Barkskin &lt;a_darkgrey&gt;OFF. &lt;dark_green&gt;]")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As your bark fetish ceases its rattling, you feel more vulnerable to attack.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Barkskin On</name>
							<script>erase()

cecho("&lt;dark_green&gt;[ &lt;a_grey&gt;Barkskin &lt;a_green&gt;ON. &lt;dark_green&gt;]")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The bark fetish begins rattling against your quarterstaff and you feel your skin hardening in response.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wayfarer</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Single Thrown Axe Usage</name>
							<script>if not cd.status.wayfarer_axes_used then
  cd.status.wayfarer_axes_used = 1
  return
end

if cd.status.wayfarer_axes_used == 0 then
  cd.status.wayfarer_axes_used = 1
elseif cd.status.wayfarer_axes_used == 1 then
  cd.status.wayfarer_axes_used = 2
else
  -- How did we get here?
  cd.status.wayfarer_axes_used = 1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You use Tenacity (?:Lob|Assault|Cripple) on .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Axe Catch</name>
							<script>-- It'd be simple to do math but I want this as error-free as humanly possible,
-- hence the usually abominable if/then trees

if not cd.status.wayfarer_axes_used then
  cd.status.wayfarer_axes_used = 0
  return
end


if cd.status.wayfarer_axes_used == 2 then
  cd.status.wayfarer_axes_used = 1
else
  cd.status.wayfarer_axes_used = 0
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You catch your.*axe.*with your \w+ hand\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dual Thrown Axe Usage</name>
							<script>cd.status.wayfarer_axes_used = 2</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You use Tenacity (?:Carve|Slaughter) on .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Enemy Tracking</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Generic Attacks/Afflictions</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Limb Break</name>
							<script>local limb = matches[3]:underscore()

if limb ~= "head" and limb ~= "torso" then
  raiseEvent("enemy.add_affliction", matches[2], limb .. "_broken")
end

raiseEvent("enemy.add_affliction", matches[2], limb .. "_damaged")
raiseEvent("enemy.fix_limb_damage", cd.combatMessage.target, limb, 33.3)
raiseEvent("enemy.remove_affliction", matches[2], "ravaged")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s (.+) breaks from all the damage\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Limb Mangle</name>
							<script>local limb = matches[3]:underscore()

if limb ~= "head" and limb ~= "torso" then
  raiseEvent("enemy.add_affliction", matches[2], limb .. "_broken")
end

raiseEvent("enemy.add_affliction", matches[2], limb .. "_mangled")
raiseEvent("enemy.fix_limb_damage", cd.combatMessage.target, limb, 66.6)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s (.+) has been beaten into uselessness\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weapon Targetting</name>
							<script>weapon_target = matches[2]:underscore()
weapon_venom = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You target the (.+) with your weapon\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weapon Targetting (Venom)</name>
							<script>weapon_target = matches[3]:underscore()
weapon_venom = venom_aff(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You envenom your weapon with (.+), targeting the (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weapon Envenoming</name>
							<script>weapon_venom = venom_aff(matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You envenom your weapon with (.+)\.$</string>
								<string>^You discern that a layer of (.+) has rubbed off your weapon\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Class Attacks</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shapeshifter</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Destroy - Failure</name>
								<script>raiseEvent("enemy.remove_affliction", getTarget(), matches[2]:underscore() .. "_damaged")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The (.+) is not damaged enough to destroy it\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Mangle - Failure</name>
								<script>raiseEvent("enemy.remove_affliction", getTarget(), matches[2]:underscore() .. "_broken")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^There is no point in trying to mangle the (.+) as it is unbroken\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Destroy - Prone</name>
								<script>raiseEvent("enemy.prone", matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\w+ barrels? into (\w+), knocking.+ to the ground\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>General Vocalizations</name>
								<script>local vocal = matches[2]:lower()
local t = matches[3]
local aff = getVocalAffliction(vocal)

currentHowls = currentHowls or {}
currentHowls[vocal] = true

if aff then
  raiseEvent("enemy.add_affliction", t, aff)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your (.+) howl pours from your throat, affecting (\w+)\.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferality (Claw)</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slash</name>
									<script>local t, limb = multimatches[1][3], multimatches[1][2]:underscore()
raiseEvent("enemy.limb_damage", t, limb, 7.49)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Slash \((.+)\) on (\w+).$</string>
										<string>^You rake \w+'s .+ with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spinalcrack</name>
									<script>local t = multimatches[1][2]
raiseEvent("enemy.add_affliction", t, "paresis")
raiseEvent("enemy.limb_damage", t, "torso", 10)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Spinalcrack on (\w+)\.$</string>
										<string>^You rake \w+'s torso with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Rend</name>
									<script>local t, limb = multimatches[1][3], multimatches[1][2]:underscore()

raiseEvent("enemy.add_affliction", t, limb .. "_broken")
raiseEvent("enemy.limb_damage", t, limb, 5.92)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Rend \((.+)\) on (\w+)\.$</string>
										<string>^You rake \w+'s .+ with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Destroy</name>
									<script>local t, limb = multimatches[1][3], multimatches[1][2]:underscore()
raiseEvent("enemy.add_affliction", t, limb .. "_mangled")
raiseEvent("enemy.fix_limb_damage", t, limb, 66.7)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Destroy \((.+)\) on (\w+)\.$</string>
										<string>^\w+'s .+ has been beaten into uselessness\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Mangle</name>
									<script>local t, limb = multimatches[1][3], multimatches[1][2]:underscore()
raiseEvent("enemy.add_affliction", t, limb .. "_damaged")
raiseEvent("enemy.fix_limb_damage", t, limb, 33.4)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Mangle \((.+)\) on (\w+)\.$</string>
										<string>^\w+'s .+ breaks from all the damage\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Faceslash</name>
									<script>local t = multimatches[1][2]
raiseEvent("enemy.add_affliction", t, "blurry_vision")
raiseEvent("enemy.limb_damage", t, "head", 7.49)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Faceslash on (\w+)\.$</string>
										<string>^You rake \w+'s head with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bodypunch</name>
									<script>local t = multimatches[1][2]
raiseEvent("enemy.limb_damage", t, "torso", 6.99)
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Bodypunch on (\w+)\.$</string>
										<string>^You rake \w+'s torso with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Throatslice</name>
									<script>local t = multimatches[1][2]
raiseEvent("enemy.add_affliction", t, "crippled_throat")
raiseEvent("enemy.limb_damage", t, "head", 7.77)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Throatslice on (\w+)\.$</string>
										<string>^You rake \w+'s head with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Skullwhack</name>
									<script>local t = multimatches[1][2]
raiseEvent("enemy.limb_damage", t, "head", 7.49)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Skullwhack on (\w+)\.$</string>
										<string>^You nimbly smack \w+'s head with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hamstring</name>
									<script>local limb = multimatches[1][2]:underscore()
local t = multimatches[1][3]:lower()

raiseEvent("enemy.add_affliction", t, limb .. "_broken")
raiseEvent("enemy.limb_damage", t, limb, 5.92)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Hamstring \((.+)\) on (.+)\.$</string>
										<string>^You rake \w+'s .+ with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Jugular</name>
									<script>local t = multimatches[1][2]
raiseEvent("enemy.limb_damage", t, "head", 7.49)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>2</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Jugular on (\w+)\.$</string>
										<string>^You rake \w+'s head with your claws\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferality (Bite)</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Salivating Check</name>
									<script>if cd.status.shapeshifter_salivating == true then
  raiseEvent("enemy.add_affliction", matches[2], "haemophilia")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality (?:Bite|Gut|Lacerate|Facemaul|Spinalrip|Skullcrush) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bite</name>
									<script>local limb = matches[2]:underscore()
raiseEvent("enemy.limb_damage", matches[2], limb, 8.99, true)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Bite \((.+)\) on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Gut</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "torso_mangled", true)
raiseEvent("enemy.fix_limb_damage", matches[2], "torso", 66.66, true)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Gut on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Lacerate</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "rend", true)
raiseEvent("enemy.limb_damage", matches[2], "torso", 12.62, true)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Lacerate on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Facemaul</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "mauled_face", true)
raiseEvent("enemy.limb_damage", matches[2], "head", 14.7, true)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Facemaul on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spinalrip</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "spinal_rip", true)
raiseEvent("enemy.limb_damage", matches[2], "torso", 12.62, true)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Spinalrip on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Skullcrush</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "head_mangled", true)
raiseEvent("enemy.fix_limb_damage", matches[2], "head", 66.66, true)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Skullcrush on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ferality (Misc.)</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Armpit Lock</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "writhe_armpitlock")
my_lock = "armpitlock"</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Armpitlock on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Neck Lock</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "writhe_necklock")
my_lock = "necklock"</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Necklock on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Thigh Lock</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "writhe_thighlock")
my_lock = "thighlock"</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Thighlock on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Groinrip</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "ripped_groin")
if my_lock == "thighlock" then
  my_lock = nil
  raiseEvent("enemy.remove_affliction", matches[2], "writhe_thighlock")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Groinrip on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Spleenrip</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "ripped_spleen")
if my_lock == "armpitlock" then
  my_lock = nil
  raiseEvent("enemy.remove_affliction", matches[2], "writhe_armpitlock")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Spleenrip on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Throatrip</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "ripped_throat")
if my_lock == "necklock" then
  my_lock = nil
  raiseEvent("enemy.remove_affliction", matches[2], "writhe_necklock")
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Ferality Throatrip on (\w+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shapeshifting</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Flurry Strike</name>
									<script>local limb = matches[2]:underscore()
raiseEvent("enemy.limb_damage", cd.combatMessage.target, limb, 10)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Your (?:powerful jaws|deadly claws) dig deep, lethal wounds into \w+ (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Jawlock - Failure</name>
								<script>raiseEvent("enemy.not_prone", getTarget())</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Your victim must be prone before you can issue a jawlock.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wayfarer</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tenacity</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Chop</name>
									<script>local t = matches[2]

local dam = 7.99
if has_tenacity_assault() then
  dam = 10.99
end

raiseEvent("enemy.limb_damage", t, weapon_limb, dam)
if weapon_venom then
  raiseEvent("enemy.add_affliction", t, weapon_venom)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Chop on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sweep (Fail)</name>
									<script>raiseEvent("enemy.not_prone", matches[2])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(.+)'s legs aren't damaged enough for that work\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sweep</name>
									<script>raiseEvent("enemy.prone", matches[2])</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You use Tenacity Sweep on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Lacerate</name>
									<script>raiseEvent("enemy.add_affliction", matches[2], "haemophilia")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Lacerate on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Bash</name>
									<script>-- 9% limb damage to head
-- removes deafness
-- dizziness if they're below 70% HP but jeez who has time to track that

local t = matches[2]

local dam = 9
if has_tenacity_assault() then
  dam = 11.5
end

raiseEvent("enemy.limb_damage", t, "head", dam)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Bash on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Punish (Fail)</name>
									<script>if matches[3] == "arms" then
  raiseEvent("enemy.remove_affliction", matches[2], {
    "left_arm_broken", "left_arm_damaged", "left_arm_mangled",
    "right_arm_broken", "right_arm_damaged", "right_arm_mangled"
  })
else
  raiseEvent("enemy.remove_affliction", matches[2], {
    "left_leg_broken", "left_leg_damaged", "left_leg_mangled",
    "right_leg_broken", "right_leg_damaged", "right_leg_mangled"
  })
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(.+)'s (arms|legs) aren't damaged enough for you to punish them further\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Punish</name>
									<script>-- punished_arms, punished_legs
-- lasts 40 seconds
wayfarer_tenacity_punish = os.clock()</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Punish on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Whirlwind</name>
									<script>-- delivers a venom</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You use Tenacity Whirlwind.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Ravage</name>
									<script>-- cures in 40 seconds.
-- applying resto extends it by X seconds.

-- don't bother for now, you don't want to do a damage route anyway
-- raiseEvent("enemy.add_affliction", matches[2], "ravaged")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You use Tenacity Ravage on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Lob</name>
									<script>if weapon_venom then
  raiseEvent("enemy.add_affliction", matches[2], weapon_venom)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Lob on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Assault</name>
									<script>local t = matches[2]

wayfarer_tenacity_assault = os.clock()
raiseEvent("enemy.limb_damage", t, weapon_limb, 4)
if weapon_venom then
  raiseEvent("enemy.add_affliction", t, weapon_venom)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Assault on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Cripple</name>
									<script>local t = matches[2]

raiseEvent("enemy.limb_damage", t, weapon_limb, 4.99)
raiseEvent("enemy.add_affliction", t, weapon_limb .. "_broken")

if weapon_venom then
  raiseEvent("enemy.add_affliction", t, weapon_venom)
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Cripple on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Toss</name>
									<script>raiseEvent("enemy.add_affliction", getTarget(), venom_aff(multimatches[2][2]))</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>1</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>Your tossed axe has hit its mark.</string>
										<string>^You discern that a layer of (.+) has rubbed off your weapon\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Carve</name>
									<script>raiseEvent("enemy.limb_damage", matches[2], "torso", 12.99)
raiseEvent("enemy.add_affliction", matches[2], "vomiting")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Carve on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Embed (Use)</name>
									<script>cd.status.wayfarer_embed_cooldown = true
raiseEvent("enemy.add_affliction", matches[2], "embedded_axe")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Embed on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Embed (Pull)</name>
									<script>-- tracked limb gets 30% limb damage
raiseEvent("enemy.limb_damage", getTarget(), embedded_limb, 29.99)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You use Pull Axe.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Devastate (Fail)</name>
									<script>raiseEvent("enemy.remove_defense", "shielded")
raiseEvent("enemy.remove_defense", "rebounding")</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Devastate \(fail\) on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slaughter</name>
									<script>-- two venoms</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^You use Tenacity Slaughter on (.+)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Embed (Off Cooldown)</name>
									<script>cd.status.wayfarer_embed_cooldown = nil
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>You can embed another axe into your foe.</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>3</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tracking - HP Warning</name>
								<script>-- they're below 50% health!</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.+)'s colour changes, seeming to be half as healthy as .+ should be\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affliction Symptoms</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ablaze</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "ablaze")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Flames leap around (\w+), charring \w+ flesh\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Agoraphobia/Claustrophobia</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], {"agoraphobia", "claustrophobia"})</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) begins to pant in terror\.$</string>
								<string>^(\w+) shivers and sweats, \w+ pupils wildly dilated with fear\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Allergies</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "allergies")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) cringes as a dark red rash spreads painfully across \w+ skin\.$</string>
								<string>^(\w+) wheezes loudly as \w+ body weakens under the stress, most of \w+ skin now dark red\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Asleep</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "asleep")
raiseEvent("enemy.remove_defense", matches[2], "insomnia")
raiseEvent("enemy.prone", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s eyes close suddenly as \w+ falls asleep.$</string>
								<string>^(\w+) closes \w+ eyes, curls up into a ball and falls asleep.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Berserking</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "berserking")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) grabs one arm of \w+ and attempts to eat it\.$</string>
								<string>^(\w+) pounds \w+ fists maniacally on .+\.$</string>
								<string>^An unutterable horror gazes upon (\w+) who recoils in deep shock\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Blurry Vision</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "blurry_vision")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Tears blur (\w+)'s vision as \w+ attempts to strike .+ with .+, causing \w+ to miss\.$</string>
								<string>^(\w+) grabs at \w+ ravaged face, blood seeping between \w+ fingers\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Raloth Break</name>
							<script>local aff = matches[3]:underscore() .. "_broken"
if matches[3] == "throat" then
  aff = "crippled_throat"
end

raiseEvent("enemy.add_affliction", matches[2], aff)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s (.+) is crushed beneath the raloth's weight\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Clumsiness</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "clumsiness")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) strikes clumsily at .+ with .+, completely missing \w+\.$</string>
								<string>^(\w+) strikes out at .+ with .+ but misses completely\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Epilepsy</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "epilepsy")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) begins to jerk and shake violently, foaming at the mouth\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fangbarrier/Slickness</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "slickness")
raiseEvent("enemy.remove_defense", matches[2], "fangbarrier")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The .+ coating (\w+)'s body sloughs off, unable to stick to \w+ unnaturally slick skin\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hallucinations</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "hallucinations")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^An unutterable horror latches minds with (\w+)\, and \w+ features run pale\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Impatience</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "impatience")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) shuffles \w+ feet in boredom\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Justice</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "justice")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Justice is dealt out and (\w+)'s attack rebounds onto .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Left/Right Leg Broken</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], {"left_leg_broken", "right_leg_broken"})
raiseEvent("enemy.prone", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s broken legs cause .+ to fall to the ground in a heap\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Masochism</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "masochism")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) uses \w+ right foot to stomp on \w+ left as hard as possible\.$</string>
								<string>^(\w+) smiles as \w+ rams \w+ fist into \w+ jaw\.$</string>
								<string>^(\w+) drives a clenched fist into \w+ gut\.$</string>
								<string>^With the heel of \w+ palm, (\w+) smacks \w+ upside the head\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Paralysis</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "paralysis")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) suddenly seizes up, \w+ entire body locked by paralysis\.$</string>
								<string>^Horror overcomes (\w+)'s face as \w+ body stiffens into paralysis\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Paresis</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "paresis")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s limbs go limp under \w+ allergies, leaving \w+ unable to move\.$</string>
								<string>^(\w+) fights (\w+) seizing muscles with reckless abandon\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shivering</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], {"shivering", "disrupted"})
raiseEvent("enemy.remove_defense", matches[2], "insulation")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) shivers particularly intensely\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thin Blood</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "thin_blood")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) swoons as \w+ suffers a toxic relapse\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Unconscious</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "unconscious")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) lapses into a state of unconsciousness\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Unconscious/Prone</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "unconscious")
raiseEvent("enemy.prone", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s legs collapse under \w+ as \w+ suddenly passes out\.$</string>
								<string>^Being unconscious, (\w+) falls over\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Void</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "void")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your target is already surrounded by a void.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vomiting</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "vomiting")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) doubles over, vomiting violently\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weakvoid</name>
							<script>raiseEvent("enemy.remove_affliction", matches[2], "void")
raiseEvent("enemy.add_affliction", matches[2], "weakvoid")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The shadowy void around (\w+) weakens\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weakvoid Off</name>
							<script>raiseEvent("enemy.remove_affliction", matches[2], {"void", "weakvoid"})</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The shadowy void around (\w+) disappears\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Weariness</name>
							<script>raiseEvent("enemy.add_affliction", matches[2], "weariness")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) slumps with a weary groan\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defenses/Statuses</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prone</name>
							<script>raiseEvent("enemy.prone", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your target is already prone\.$</string>
								<string>^That player is already on the ground\.$</string>
								<string>^You lumber forward, throwing your weight against (\w+) and forcing \w+ to the ground\.$</string>
								<string>^(\w+) sits down\.$</string>
								<string>^(\w+) leaps up in what is apparently an attempt at a graceful swan dive. \w+ smacks headfirst into the ground\.$</string>
								<string>^Losing his balance, (\w+) falls from .+ steed to the hard ground\.$</string>
								<string>^(\w+) begins to tumble towards the .+\.$</string>
								<string>^(\w+) tumbles in from the .+\.$</string>
								<string>^(\w+) wobbles uncertainly before falling to the ground, \w+ leg pulled awkwardly behind \w+ own head\.$</string>
								<string>^(\w+) is already fallen upon the ground.$</string>
								<string>^(\w+) tumbles in from the .+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prone Off</name>
							<script>if not matches[2] then
  raiseEvent("enemy.not_prone", getTarget())
  return
end

raiseEvent("enemy.not_prone", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You can't do that if your target isn't prone!</string>
								<string>^(\w+) stands up and stretches \w+ arms out wide\.$</string>
								<string>^Strange clicking comes from the lips of (\w+) as \w+ kips up and back into the Scorpion stance\.$</string>
								<string>^With a fierce roar, (\w+) kips up into a pouncing stance\.$</string>
								<string>^With a loud screech, (\w+) kips up into a strange posture, a look of pure menace flashes in \w+ eyes\.$</string>
								<string>^(\w+) stands up and stretches \w+ arms out wide\.$</string>
								<string>^Strange clicking comes from the lips of (\w+) as \w+ kips up and back into the \w+ stance\.$</string>
								<string>^Emitting a loud whinny, (\w+) kicks into the Horse stance\.$</string>
								<string>^A loud call like a bird cry escapes (\w+) as \w+ rises? up into the balanced Eagle stance\.$</string>
								<string>^Arching \w+ back and hissing loudly, (\w+) assumes the Cat stance\.$</string>
								<string>^A terrifying roar bellows from (\w+) as \w+ rises? into the Bear posture\.$</string>
								<string>^A sibilant hiss emits from (\w+) as \w+ rises? fluidly into the Cobra stance\.$</string>
								<string>^Eyes darting side to side, (\w+) kips into the Rat stance\.$</string>
								<string>^With a fiery passion, (\w+) kips up into the Phoenix stance\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fitness</name>
							<script>raiseEvent("enemy.add_defense", matches[2], "fitness")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) uses .+ \(Fitness\)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rebirth/Resetting</name>
							<script>raiseEvent("enemy.rebirth", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) uses \(Enchantment Negation\)\.$</string>
								<string>^(\w+) uses (Illumination Rebirth)\.$</string>
								<string>^(\w+) uses (Necromancy Soulcage)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Slew A Player</name>
							<script>-- For some mobs who apparently don't leave corpses or something?
local weird_mobs = {
	"a distressed spirit", "a lingering spirit", "a wailing spirit", "a ghost of a Mhun guard", "a ghost of a Mhun soldier", "a ghost of a male Mhun", "a ghost of a young Mhun", "a ghost of a female Mhun"
}

if table.contains(weird_mobs, matches[2]) then
	raiseEvent("killing blow", getTarget(), "mob", matches[2])
else
	raiseEvent("enemy.death", getTarget())
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have slain (.+)\.$</string>
								<string>Vibrant essence streams forth from the floor, signaling the end of combat.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Asleep Off</name>
							<script>raiseEvent("enemy.not_asleep", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) opens \w+ eyes and yawns mightily\.$</string>
								<string>^(\w+) wakes up with a gasp of pain\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Unconsciousness Off</name>
							<script>raiseEvent("enemy.not_unconscious", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) regains consciousness with a start\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fangbarrier Off</name>
							<script>raiseEvent("enemy.remove_defense", matches[2], "fangbarrier")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You send .+ to flay (\w+)'s fangbarrier defence</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fangbarrier On</name>
							<script>local t = matches[2] or getTarget()
raiseEvent("enemy.add_defense", t, "fangbarrier")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A thick, hardened shell of paste has formed around (\w+)\.$</string>
								<string>^You try to bite (\w+), but your fangs are stopped by an odd waxy coating\.$</string>
								<string>Your victim is protected by a hard coating.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resistances/Nullifications</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zealot Swagger</name>
							<script>raiseEvent("enemy.remove_affliction", matches[2], matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You discern that (\w+) has resisted the (.+) affliction\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shapeshifter Shed</name>
							<script>raiseEvent("enemy.remove_affliction", matches[2], "slickness")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) uses Shapeshifting Shed\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemy Curing</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Special</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Vinethorns</name>
								<script>raiseEvent("enemy.remove_affliction", matches[2], "vinethorns")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) quickly plucks off a cluster of thorns embedded in \w+ and tosses them aside\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Blackout</name>
								<script>raiseEvent("enemy.remove_affliction", matches[2], "blackout")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(\w+) blinks rapidly, rubbing \w+ eyes.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pipe</name>
							<script>raiseEvent("enemy.cure.pipe", matches[2], matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) takes a long drag off \w+ pipe filled with (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Poultice</name>
							<script>raiseEvent("enemy.cure.poultice", matches[2], matches[3], matches[4])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) presses an? (\w+) poultice against \w+ (.+), rubbing the (?:last of the )?poultice into \w+ flesh\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Focus</name>
							<script>raiseEvent("enemy.cure.focus", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A look of extreme focus crosses the face of (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tree</name>
							<script>raiseEvent("enemy.cure.tree", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) touches a tree of life tattoo.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rage</name>
							<script>raiseEvent("enemy.cure.rage", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s eyes flash with rage.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Restore</name>
							<script>raiseEvent("enemy.cure.restore", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) crackles with blue energy that wreathes itself about \w+ limbs\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Concentrate</name>
							<script>raiseEvent("enemy.cure.concentrate", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s eyes lose their focus suddenly\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Insomnia</name>
							<script>raiseEvent("enemy.cure.insomnia", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) clenches \w+ fists and grits \w+ teeth\.$</string>
								<string>^(\w+) swallows a somnium pill\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Writhe</name>
							<script>raiseEvent("enemy.cure.writhe", matches[2], matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) has writhed free of \w+ (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Endgame</name>
							<script>raiseEvent("enemy.cure.endgame", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A flicker of intense focus crosses (\w+)'s face, and \w+ stands somewhat straighter\.$</string>
								<string>^With a sinister grin, (\w+)\'s body seems to repair itself before your very eyes\.$</string>
								<string>^(\w+) smiles faintly as a healing glow seems to push afflictions from \w+ body\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Elixir</name>
							<script>raiseEvent("enemy.cure.elixir", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) takes a drink from .*\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Immunity</name>
							<script>raiseEvent("enemy.cure.immunity", matches[2], matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s face flushes as \w+ body purges the (\w+) venom\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pill</name>
							<script>raiseEvent("enemy.cure.pill", matches[2], matches[3])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) swallows an? (.+) pill\.$</string>
								<string>^(\w+) swallows a pill of (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Discernment</name>
							<script>local t, aff = matches[2], matches[3]

if aff:match("a broken %w+ %w+") then
  aff = aff:gsub("a broken (%w+) (%w+)", "%1_%2_broken")
end

raiseEvent("enemy.cure.generic", t, aff)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You discern that (\w+) has cured the effects of (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Limb Tracking</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Enemy WOUNDS Entry</name>
							<script>local l = matches[2]:lower():gsub("%s", "_")
local perc = tonumber(matches[3])

cd.enemy.limbs[l] = perc

if perc &lt; 66.6 then
  cd.enemy.afflictions[l .. "_mangled"] = nil
end

if perc &lt; 33.3 then
  cd.enemy.afflictions[l .. "_damaged"] = nil
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(Head|Torso|Left arm|Right arm|Left leg|Right leg)\:\s+([\d\.]+)\% \(.+ bruising\)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Misc.</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dodged/Missed</name>
							<script>local t = cd.combatMessage.target

if matches[2] then
  t = matches[2]
end

if cd.enemy.last.affliction then
  raiseEvent("enemy.remove_affliction", t, cd.enemy.last.affliction)
end

if cd.enemy.last.limb_damage then
  raiseEvent("enemy.cure_limb_damage", t, cd.enemy.last.attacked_limb, cd.enemy.last.limb_damage)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Stepping quickly out of the way, (.+) dodges the attack\.$</string>
								<string>Your swing falls short of its target.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parrying</name>
							<script>local t, limb = matches[2], matches[3]:underscore()

if cd.enemy.last.affliction then
  raiseEvent("enemy.remove_affliction", t, cd.enemy.last.affliction)
end

if cd.enemy.last.limb_damage then
  raiseEvent("enemy.cure_limb_damage", t, cd.enemy.last.attacked_limb, cd.enemy.last.limb_damage)
end

if t:lower() == getTarget():lower() then
  cd.enemy.parry = limb
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) steps into the attack on \w+ (.+), grabs your arm, and shakes you violently\.$</string>
								<string>^With a free hand, (\w+) fends off the attack on \w+ (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Monk Guard</name>
							<script>local t, limb = matches[2], matches[3]:underscore()

if cd.enemy.last.affliction then
  raiseEvent("enemy.remove_affliction", t, cd.enemy.last.affliction)
end

if cd.enemy.last.limb_damage then
  raiseEvent("enemy.cure_limb_damage", t, cd.enemy.last.attacked_limb, cd.enemy.last.limb_damage)
end

if t:lower() == getTarget():lower() then
  cd.enemy.class = "Monk"
  cd.enemy.parry = limb
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) guards the attack on \w+ (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zealot Rebuke</name>
							<script>if matches[2]:lower() == getTarget():lower() then
  cd.enemy.class = "Zealot"
  zeal_rebuke = matches[3]:underscore()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) uses Zeal Rebuke \((.+)\)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zealot Rebuke (Off)</name>
							<script>local t, limb = matches[2]:lower(), matches[3]:underscore()

if t == getTarget():lower() then
  zeal_rebuke = nil

  if cd.enemy.last.affliction then
    raiseEvent("enemy.remove_affliction", t, cd.enemy.last.affliction)
  end
  
  if cd.enemy.last.limb_damage then
    raiseEvent("enemy.cure_limb_damage", t, cd.enemy.last.attacked_limb, cd.enemy.last.limb_damage)
  end
  
  cd.enemy.class = "Zealot"
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)'s chains tighten and rebuke the blow on \w+ (.+) with blinding light\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zealot Rebuke (Off, Neutral)</name>
							<script>if matches[2]:lower() == getTarget():lower() then
  zeal_rebuke = nil
  cd.enemy.class = "Zealot"
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) uses Zeal (?:Anklepin|Jawcrack|Descent|Wristlash|Rive|Uprise|Whipburst).* on you\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Combat Message - No Target</name>
					<script>cd.combatMessage.caster = matches[2]
cd.combatMessage.skill = matches[3]
cd.combatMessage.target = ""</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) uses? (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shapeshifter</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Clothing Handling - Mutated</name>
							<script>if caster == "You" then
  send("outfit wear wolf", false)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Shapeshifting Mutate</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Clothing Handling - Reverted</name>
							<script>-- local blacklist = {
	-- "8288", "265552"
-- }
-- 
-- if not savedAttires then
	-- return
-- end
-- 
-- for _, id in ipairs(getWornItems()) do
	-- if table.contains(blacklist, id) ~= true then
		-- send("attire " .. id .. " " .. savedAttires[id], false)
	-- end
-- end
if caster == "You" then
  send("outfit wear normal", false)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Shapeshifting Revert</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vocalizing Tracker - ON</name>
							<script>local vocal = matches[2]:lower()

currentHowls = currentHowls or {}
currentHowls[vocal] = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Vocalizing (.+) \(begin\)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vocalizing Tracker - OFF</name>
							<script>local vocal = matches[2]:lower()

currentHowls = currentHowls or {}
currentHowls[vocal] = nil</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Vocalizing (.+) \(end\)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shed - Use</name>
							<script>cd.status.shapeshifter_shed_ready = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Shapeshifting Shed</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Salivate (On)</name>
							<script>cd.status.shapeshifter_salivating = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Shapeshifter Salivate</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Salivate (Off)</name>
							<script>cd.status.shapeshifter_salivating = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Shapeshifting Salivate (end)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rage - Use</name>
							<script>cd.status.shapeshifter_rage = true
cd.status.shapeshifter_rage_ready = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Shapeshifting Rage</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Combat Message - Target</name>
					<script>cd.combatMessage.caster = matches[2]
cd.combatMessage.skill = matches[3]
cd.combatMessage.target = matches[4]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) uses? (.+) on (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shapeshifter</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shapeshifting/Misc.</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Swipe</name>
								<script>raiseEvent("enemy.remove_defense", "deafness")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Shapeshifting Swipe</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pounce</name>
								<script>-- Stuns for approx 1 second.</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Shapeshifting Pounce</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Pounce (Shield)</name>
								<script>raiseEvent("enemy.remove_defense", "shielded")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Shapeshifting Pounce (shield)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Charge</name>
								<script>raiseEvent("enemy.prone", cd.combatMessage.target)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Shapeshifting Charge</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vocalizing</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Baying</name>
								<script>local vocal_type

if matches[2] == "Baying" then
  vocal_type = matches[3]:lower()
else
  vocal_type = matches[2]:lower()
end

vocal_type = getVocalAffliction(vocal_type)
if vocal_type then
  raiseEvent("enemy.add_affliction", cd.combatMessage.target, vocal_type)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Vocalizing (.+) \((.+)\)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Player Afflictions</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affliction Acquired</name>
						<script>local name = matches[2]

aff.add(name)

erase()
cecho("&lt;a_darkred&gt;[&lt;a_red&gt;+&lt;a_darkred&gt;] &lt;a_grey&gt;Afflicted with &lt;a_red&gt;" .. name .. "&lt;a_grey&gt;.")

if not afflictionList[name] then
	cecho(" &lt;a_darkgrey&gt;(&lt;a_red&gt;Note: &lt;a_grey&gt;Unknown affliction!&lt;a_darkgrey&gt;)")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are afflicted with (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Heatspear</name>
							<script>send("firstaid elevate heatspear")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>heatspear</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affliction Cured</name>
						<script>local name = matches[2]
local time

if not cd.afflictions[name] then
	time = "hidden!"
	aff.remHidden()
else
	time = tostring(math.round(tonumber(aff.rem(name)), 2)) .. "s"
end

erase()
cecho("&lt;a_darkblue&gt;[&lt;a_blue&gt;-&lt;a_darkblue&gt;] &lt;a_darkgrey&gt;Cured &lt;a_blue&gt;" .. name .. "&lt;a_darkgrey&gt;. (&lt;a_darkgreen&gt;" .. time .. "&lt;a_darkgrey&gt;)")

if not afflictionList[name] then
	cecho(" &lt;a_darkgrey&gt;(&lt;a_red&gt;Note: &lt;a_grey&gt;Unknown affliction!&lt;a_darkgrey&gt;)")
end

if table.contains(bindAffs, name) == true then
	currentlyWrithing = nil
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have cured (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hidden Affliction</name>
						<script>aff.addHidden()

erase()
cecho("&lt;a_darkgrey&gt;[&lt;a_grey&gt;+&lt;a_darkgrey&gt;] &lt;light_slate_blue&gt;Hidden affliction!\n    &lt;a_grey&gt;You have &lt;a_red&gt;" .. cd.hiddenAffs .. "&lt;a_grey&gt; hidden afflictions.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have been afflicted with a hidden affliction!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Diagnose</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Diagnose Header</name>
							<script>if not aff.has("hypochondria") then
	cd.hiddenAffs = nil
end

openPK = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Symptoms</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disfigurement</name>
							<script>aff.sym("disfigurement")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your loyal friends will not help you through such an unrecognizable face.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Haemophilia</name>
							<script>aff.sym("haemophilia")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You attempt to clot your blood, but it flows too freely and you only clot \d+ times\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Paralysis</name>
							<script>aff.sym("paralysis")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your state of paralysis prevents you from doing that.</string>
								<string>^You are paralysed and (?:cannot|unable to) do that.$</string>
								<string>Frustratingly, your body won't respond to your call to action.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Anorexia</name>
							<script>aff.sym("anorexia")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>That needle will go so deep you will explode for sure!</string>
								<string>You cannot eat that! If you do you will explode!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Stupidity</name>
							<script>aff.sym("stupidity")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>In your stupidity, you forgot what you were trying to do. Oops.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Broken Limbs (Unknown)</name>
							<script>aff.sym("unknown_leg_broken")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Both of your legs must be free and unhindered to do that.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fear</name>
							<script>aff.sym("fear")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You rush about in a state of utter panic.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Writhe (Web)</name>
							<script>aff.sym("writhe_web")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Sticky strands of webbing cling to you, making that impossible.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mental Disruption</name>
							<script>aff.sym("mental_disruption")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your disrupted equilibrium makes it harder to wrest your mind free of its transfixion.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Physical Disruption</name>
							<script>aff.sym("physical_disruption")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your disrupted balance slows your ability to writhe.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affliction Clears</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Binds</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You begin to writhe helplessly, throwing your body off balance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hidden Affliction Predictions (Bashing)</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Broken Arms</name>
							<script>send("firstaid predict broken_left_arm", false)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A Nazetu corrupter reaches out with a skeletal hand and encloses your arm in an iron grip, easily crushing bone and nearly ripping the appendage from its socket.</string>
								<string>A gargantuan Teshen drone grasps you and raises you into the air, flinging you downward with such force that your bodyshatters beneath the impact.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Defenses</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defense List Parsing</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DEF Header</name>
							<script>def.reset()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have the following active defences:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>DEF Footer</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are protected by (\d+) defences\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>List Messages</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Generic</name>
								<script>raiseEvent("defense list update", matches[2])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You have the (.+) defen(?:c|s)e\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Disregarding</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are disregarding your personal safety.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Blindness/Deafness</name>
								<script>local d = matches[2] .. "ness"</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You are (blind|deaf)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cloak Tattoo</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are surrounded by a cloak of protection.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Tunnelvision</name>
								<script>raiseEvent("defense list update", "tunnelvision")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^You are tunneling your vision on .+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defense Messages</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Generic Defense Gain</name>
							<script>raiseEvent("defense gained", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have gained the (.+) defence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Grace</name>
							<script>raiseEvent("defense gained", "grace")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are already graced with Divine speed.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tunnelvision</name>
							<script>raiseEvent("defense gained", "tunnelvision")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You begin to tunnel your vision on \w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Strip/Loss Messages</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Generic Defense Strip</name>
							<script>raiseEvent("defense stripped", matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your (.+) defence has been stripped\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tunnelvision</name>
							<script>raiseEvent("defense dropped", "tunnelvision")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You cease to tunnel your vision.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kai Boosting</name>
							<script>raiseEvent("defense dropped", "boosting")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are no longer boosting your Kai gain.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defense Debugging/Prevention</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Attempting Fangbarrier</name>
							<script>attemptingFangbarrier = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You quickly squeeze the marrow from the bone, applying it to your skin.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Balances</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fitness (Regain)</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your lungs have recovered and you feel as fit as ever.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Recovered Balance</name>
						<script>rewrite("&lt;%s&gt;\-\&lt; &lt;p_bal&gt;Balance &lt;a_darkgrey&gt;recovered! &lt;darker&gt;\&gt;\-" % darkColor("p_bal"))
cd.time.bal.duration = 0
deleteStopWatch("bal_stopwatch")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have recovered balance on all limbs.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Recovered Equilibrium</name>
						<script>rewrite("&lt;%s&gt;\-\&lt; &lt;p_eq&gt;Equilibrium &lt;a_darkgrey&gt;recovered! &lt;darker&gt;\&gt;\-" % darkColor("p_eq"))
cd.time.eq.duration = 0
deleteStopWatch("eq_stopwatch")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have recovered equilibrium.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Recovered Arm Balance</name>
						<script>local limb = matches[2]
rewrite("&lt;%s&gt;\-\&lt; &lt;p_bal&gt;%s Balance &lt;a_darkgrey&gt;recovered! &lt;darker&gt;\&gt;\-" % {darkColor("p_bal"), limb:title()})
cd.time.bal.duration = 0
deleteStopWatch("bal_stopwatch")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have recovered balance on your (\w+ arm|legs)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Used Balance</name>
						<script>local b = matches[2]:lower()
local t = tonumber(matches[3])
local c = "a_brown"

local ab_balances = {"howl balance", "fury balance"}

if b == "balance" then
	c = "p_bal"
	cd.time.bal.duration = t
  createStopWatch("bal_stopwatch", true)
elseif b == "left hand balance" or b == "right hand balance" or b == "recover" then
	c = "p_bal"

  if t &gt; cd.time.bal.duration then
    cd.time.bal.duration = t
    createStopWatch("bal_stopwatch", true)
  end
elseif b == "equilibrium" then
	c = "p_eq"
	cd.time.eq.duration = t
  createStopWatch("eq_stopwatch", true)
elseif table.contains(ab_balances, b) then
  c = "p_ab"
  cd.time.ab.duration = t
  createStopWatch("ab_stopwatch", true)
end

rewrite("&lt;%s&gt;%s &lt;a_darkgrey&gt;\| &lt;a_white&gt;%s &lt;a_darkgrey&gt;seconds." % {c, b, t})
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) Used\: (.+) seconds$</string>
							<string>^Time to (recover)\: (.+) seconds$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Recovered Ability Balance</name>
						<script>rewrite("&lt;%s&gt;\-\&lt; &lt;p_ab&gt;Ability balance &lt;a_darkgrey&gt;recovered! &lt;darker&gt;\&gt;\-" % darkColor("p_ab"))
cd.time.ab.duration = 0
deleteStopWatch("ab_stopwatch")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel ready to howl once again.</string>
							<string>You can bring forth your fury again.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Generic Erase</name>
				<script>-- Lines to be deleted, but without prompt gagging.

deleteLine()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You now have \d+ gold\.$</string>
					<string>^You collect \d+ gold from the corpse\.$</string>
					<string>^.+'s flesh has withered beyond tolerance and \w+ collapses to the ground in a heap of decayed flesh\.$</string>
					<string>You will your natural energy flow to your fingertips and prepare to empower your next attack.</string>
					<string>^The final blow proves too much for .+, who expires, pitifully\.$</string>
					<string>You feel the effects of madness begin to settle into your mind.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>3</integer>
					<integer>1</integer>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Generic Gag</name>
				<script>-- Lines to be erased entirely, prompt and all.

cd.Gag()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>There's water ahead of you. You'll have to swim in that direction to make it through.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Money</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You now have X gold</name>
					<script>cd.player.gold = tonumber(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You now have (\d+) gold\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Curative Production</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Auto-brew; pick up pot</name>
					<script>if concoctionBrewing == true then
	concoctionBrewing = false
	send("get " .. cd.concoctions.brewPot, false)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^With a sudden slow pulsing of white light, the liquid and floating bits of plant matter in the pot combine into .+\.$</string>
						<string>The liquid in the oaken pot finishes boiling, leaving nothing but a cloudy, unattractive mess filled with bits of soggy plant matter.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Apothecary</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Part Collection - End</name>
						<script>raiseEvent("part collection finish")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>That corpse can not have anything further collected from it.</string>
							<string>You can find no such target as 'corpse'.</string>
							<string>^You cannot collect .+ from .+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Part Collection - Need Scalpel</name>
						<script>raiseEvent("part collection need scalpel")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You must be wielding a scalpel in order to do that.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Part Collection - No Scalpel</name>
						<script>raiseEvent("part collection no scalpel")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have no "scalpel".</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Part Collection - Have Scalpel</name>
						<script>raiseEvent("part collection wielded scalpel")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You start to wield.*scalpel.*in your .+ hand\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Window Capturing</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Watchoutput</name>
					<script>selectString(matches[2], 1)
if isAnsiFgColor(4) then
	-- We got an output line!
	-- SendToFrame("master")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\[(\w+)\]\: .+$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gods</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Generic God Alerts</name>
						<script>-- Catch-all trigger for spammy admin alerts.
-- SendToFrame("master")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\[(?:Mobtalk|Admin|NEW CHAR|POSES)\]\: .+$</string>
							<string>^.+ has logged in for the first time in \d+ days!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Omniscience</name>
						<script>selectString(matches[2], 1)

if isAnsiFgColor(16) then
	-- SendToFrame("master")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\&lt;(Omniscience)\&gt; .+$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Map</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Map Capture Header</name>
						<script>if relic_bypass == true then
  return
end

map:clear()
captureMapLine()
enableTrigger("Map Capture Line")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\-\-\- Area \d+\: .+ [\-]+ v\d+ \-\-\-$</string>
							<string>^\-\-\- Area \d+\: .+\s+v\d+ \-\-\-$</string>
							<string>^\-\-\-[\-]+ v\d+ [\-]+\-\-\-$</string>
							<string>---------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Map Capture Footer</name>
						<script>captureMapLine()
disableTrigger("Map Capture Line")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\-\-\- .+ [\-]+ [\d\-]+\:[\d\-]+\:[\d\-]+ \-\-\-$</string>
							<string>^\-\-\-[\-]+ [\d\-]+\:[\d\-]+\:[\d\-]+ [\-]+\-\-\-$</string>
							<string>^\-\-\- (.+)\s+[\d\-]+\:[\d\-]+\:[\d\-]+ \-\-\-$</string>
							<string>----------------------------------- ?:?:? ---</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Map Capture Line</name>
						<script>captureMapLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Auto-Loot</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gold Drops</name>
					<script>AddAutoLoot("gold")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^.+ sovereigns (?:spill|spills) from .+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>White Ghost's Paw</name>
					<script>AddAutoLoot("22276")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Roaring in pain, White Ghost rears back as his paw is severed from his body, leaving a bloody stump. With a baleful moan, he slinks off, slowly bleeding to death.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Khauskin Miners - Gems</name>
					<script>AddAutoLoot("gem")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A rough and jagged .+ tumbles out of the corpse of a burly Dwarven miner\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Skythrone Shards</name>
					<script>AddAutoLoot("shard")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The shard stills as the last of the denizens is banished, the latent power within a fulgent shard of Skythrone aglow.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Generic Looting</name>
					<script>raiseEvent("mob drop", matches[2], matches[3])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.+) tumbles out of the corpse of (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Sounds</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gods</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get Attention!</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile>C:/Mudlet/sounds/Chime.wav</mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) pokes at you\.$</string>
							<string>^(\w+) nudges you suggestively\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Player Logout</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) has left Aetolia after \d+ games\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Player Login</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile>C:/Mudlet/sounds/sonar.wav</mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) has entered Aetolia on \d+ points\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Offerings Parser</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>List Entry</name>
					<script>if autoBlessings == true then
	local name = matches[2]
	local amt = tonumber(matches[3])

	if name ~= "Total" then
		doAutoBlessing(name, amt)
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#5cc1ff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([a-zA-Z]+)\s+\d+\s+(\d+)\s+\d+\/\d+\/\d+$</string>
						<string>^([a-zA-Z]+)\s+\d+\s+(\d+)\s+NA$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bestow Message</name>
					<script>send("offerings remove " .. matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You bestow your .+ upon (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Misc.</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>URLs</name>
					<script>for i,v in ipairs(matches) do
	selectString(matches[i], 1)
	setUnderline(true)
	setLink([[openUrl("]]..matches[i]..[[")]], matches[i])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#000000</mFgColor>
					<mBgColor>#ff007f</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\b(?:(?:(?:[Hh]ttps?|ftp|telnet)://[\w\d:#@%/;$()~_?\+\-=&amp;amp;]+|www|ftp)(?:\.[\w\d:#@%/;$()~_?\+\-=&amp;amp;]+)+|[\w\d._%+\-]+@[\w\d.\-]+\.[\w]{2,4})\b</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Enorian: Morning Prayer</name>
					<script>erase()
cecho("&lt;a_darkgrey&gt;The bell of the &lt;a_yellow&gt;Unbound Lord &lt;a_darkgrey&gt;rings out low and sonorous, beckoning the citizens to morning prayer.")
send("path find 56136", false)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The bell of the Unbound Lord rings out low and sonorous, beckoning the citizens to morning prayer.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aetolian Date</name>
					<script>local day = matches[2]
local date = matches[3]
local month = matches[4]
local year = matches[5]

cd.date.day = day
cd.date.date = date
cd.date.month = month
cd.date.year = year</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^It is now .+ on (\w+), the (\d+)(?:st|nd|rd|th) of (\w+), year (\d+) of the Midnight Age\.$</string>
						<string>^Today is (\w+), the (\d+)(?:st|nd|rd|th) of (\w+), year (\d+) of the Midnight Age.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>City Funds</name>
					<script>if checkCityFunds ~= true then
	return
end

if cd.player.city == nil or cd.player.city == "" then
	-- howtf did we get here?
	checkCityFunds = nil
	return
end

local city = cd.player.city

if aetolia.city_funds[city] == nil then
	checkCityFunds = nil
	return
end

local min_name = matches[2]
local min = aetolia.city_funds[city][min_name].ministry
local funds = tonumber(matches[3])
local budget = aetolia.city_funds[city][min_name].budget
local gold_color = "a_darkgrey"

if min == "treasurer" then
	if funds &lt; budget then
		neededTreasuryFunds = budget - funds
		gold_color = "dark_goldenrod"
	else
		gold_color = "pale_goldenrod"
	end
else
	cityFunds[min] = funds
	if funds &lt; budget then
		gold_color = "a_red"
	elseif funds &gt; budget then
		gold_color = "a_green"
	end
end

erase()
cecho("  &lt;a_darkcyan&gt;" .. string.title(min):jright(11) .. " &lt;a_darkblue&gt;\| &lt;a_grey&gt;" .. min_name:jleft(32) .. "&lt;" .. gold_color .. "&gt;" .. tostring(funds))</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The office of the (.+) currently has (\d+) gold\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Book Saving</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Book Saving - Initialize</name>
						<script>bookSaveBook = matches[2]
bookSavePage = tonumber(matches[3])
bookSaveAuthor = matches[4]
bookSaveContents = nil

enableTrigger("Book Saving - Capture Lines")
enableTrigger("Book Saving - End Capture")
enableTrigger("Book Saving - More to Display")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+), Page (\d+), by (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Book Saving - Capture Lines</name>
						<script>if isPrompt() == true then
	return
end

if matches[1] ~= nil then
	if matches[1]:match("^Type more to continue reading%.") ~= nil then
		return
	elseif matches[1]:match("^An unseen presence whispers in your ear,") ~= nil then
		return
	elseif matches[1]:match("^Your current pagelength%:") ~= nil then
		return
	else
		selectString(matches[1], 1)
		if isAnsiFgColor(6) then
			return
		end
	end
end

if bookSaveContents == nil then
	bookSaveContents = matches[1]
else
	bookSaveContents = bookSaveContents .. "\n" .. matches[1]
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+)?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Book Saving - End Capture</name>
						<script>saveBook(bookSaveBook, bookSavePage, bookSaveAuthor)

disableTrigger("Book Saving - Capture Lines")
disableTrigger("Book Saving - End Capture")
disableTrigger("Book Saving - More to Display")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Game Login</name>
					<script>raiseEvent("login")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Password correct. Welcome to Aetolia\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Milestones</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Milestones Header</name>
						<script>claimable_milestones = {}

skip_mc_line = true
enableTrigger("Milestones Footer")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>#    Info                                                    Keys      Progress</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Milestone Line</name>
						<script>local id = matches[2]
local keys = tonumber(matches[3])
local prog = matches[4]

if prog == "UNCLAIMED!" then
  claimable_milestones[id] = keys
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\d+)\) .+    (\d+)\s+(\d+ / \d+)$</string>
							<string>^(\d+)\) .+    (\d+)\s+(UNCLAIMED!)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Milestones Footer</name>
						<script>if skip_mc_line == true then
  skip_mc_line = nil
  return
end

if table.size(claimable_milestones) &gt;= 1 then
  -- Add up the total number of claimable keys.
  local total_keys = 0
  for id, keys in pairs(claimable_milestones) do
    total_keys = total_keys + keys
  end

  cecho("\n&lt;a_grey&gt;You have &lt;a_white&gt;%d&lt;a_grey&gt; keys worth of unclaimed milestones. Type &lt;a_red&gt;MC ALL&lt;a_grey&gt; to collect them." % total_keys)
end

disableTrigger("Milestones Footer")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>-------------------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dumb Shit</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Greetings, Traveler</name>
						<script>-- RIP 2020 iesid hates joy and goodness

local first = {
  "Greetings",
  "Well met",
  "We are well met",
  "Tidings",
  "Salutations",
  "Good day",
  "Good day to you",
  "Our strength increases",
  "The battle is joined",
}

local last = {
  "traveler",
  "adventurer",
  "warrior",
  "champion",
  "hero",
}

local greet_string = first[math.random(#first)]

if math.random(2) == 2 then
  local l = last[math.random(#last)]
  if math.random(2) == 2 then
    l = "fellow %s" % {l}
  end
  greet_string = "%s, %s" % {greet_string, l}
end

if math.random(2) == 2 then
  greet_string = "%s!" % {greet_string}
end


send("wt %s" % {greet_string}, false)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\(Web\)\: .+ has joined your web.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blackjack</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dealer Value</name>
						<script>bjProcessDealerUpCard(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\w+ deals .+self two cards\. The up card is an? (\w+) of .+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Player Value</name>
						<script>bjProcessPlayerCards(matches[2], matches[3])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.+ deals you an? (\w+) of .+ and an? (\w+) of .+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Player Additional Card</name>
						<script>bjAddPlayerCard(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You tap your cards and are dealt an? (\w+) of .+, for a total of \d+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Reset Game</name>
						<script>bjResetGame()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You take a seat at the blackjack table and prepare to gamble.</string>
							<string>You leave the blackjack table.</string>
							<string>^Your hand lost to .+, who collects your bet\.$</string>
							<string>^You won! .+ hands you \d+ gold sovereigns, and you collect your bet\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Player Hand Tally</name>
						<script>rewrite("   &lt;a_darkgrey&gt;You: &lt;a_darkgreen&gt;%s &lt;a_darkgrey&gt;(&lt;a_grey&gt;%s&lt;a_darkgrey&gt;)" % {table.concat(bj.my_hand, " "), bjTotalHandValue()})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have \d+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dealer Hand Tally</name>
						<script>rewrite("&lt;a_darkgrey&gt;Dealer: &lt;a_red&gt;%s" % {bj.deal_hand})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Dealer shows an? .+.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Action Prompt</name>
						<script>rewrite("      &lt;a_darkcyan&gt;- &lt;a_grey&gt;Hit  Stand  Double")
cecho("\n      &lt;a_cyan&gt;- &lt;a_white&gt;%s" % {bjPerfectPlay()})</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.+ asks you, \"Do you want to hit, stand, or double.*\?\"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Probe That Fukken Pet</name>
					<script>if cd.room.last_mob and cd.room.last_mob ~= "" then
  send("p %s" % cd.room.last_mob, false)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You open a carrier tube fastened to .+ and retrieve .+ frominside it\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Quality-of-Life</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Auto-Autopay</name>
					<script>send("design " .. matches[2] .. " autopay on", false)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You pay the review fee and the clerk gives you permission to use design (\d+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Auto-Learning - Lesson Complete</name>
					<script>if autoLearnAmount ~= nil then
	send("learn " .. autoLearnAmount .. " " .. autoLearnSkill .. " from " .. autoLearnTutor, false)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Shaking \w+ head dismissively, .+ turns away, ending the lesson in Sciomancy\.$</string>
						<string>^.+ returns to a relaxed posture and declares the lesson finished\.$</string>
						<string>^.+ finishes the lesson in .+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Room Sensing - Vnum</name>
					<script>local room_name = matches[2]
local rooms = searchRoom(room_name)

if rooms and table.size(rooms) == 1 then
  local room_vnum
  for v, _ in pairs(rooms) do
    room_vnum = v
    break
  end

  rewrite("&lt;a_darkgreen&gt;[&lt;a_green&gt;!&lt;a_darkgreen&gt;] &lt;a_darkgrey&gt;They are at: &lt;a_grey&gt;%s &lt;a_darkgrey&gt;(&lt;a_grey&gt;v&lt;a_white&gt;%s&lt;a_darkgrey&gt;)" % {room_name, room_vnum})
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^An image of (.+) appears in your mind\.$</string>
						<string>^You see that \w+ is at (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Curing</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Using Curatives</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Health/Mana Gain</name>
						<script>erase()
cecho("&lt;a_green&gt;+ &lt;a_darkgreen&gt;" .. matches[1] .. " &lt;a_green&gt;+")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The elixir heals and soothes you.</string>
							<string>Your mind feels stronger and more alert.</string>
							<string>The serum makes you feel more lucid and aware.</string>
							<string>The serum heals your wounds.</string>
							<string>You feel your health and mana replenished.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nothing In Cache</name>
						<script>raiseEvent("cache depleted", matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have no (.+) stored in the cache.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Smoking Pipe</name>
						<script>local contents = matches[2]

local name = cd.player.name

if name == nil or cd.cure.pipeIDs[name] == nil then
	return
end

if contents == "demulcent" then contents = "elm"
elseif contents == "antispasmadic" then contents = "valerian"
elseif contents == "sudorific" then contents = "skullcap"
end

cd.cure.pipes[contents].uses = cd.cure.pipes[contents].uses - 1</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You quickly inject yourself with a syringe filled with (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Balance Use</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Moss Balance (on)</name>
						<script>showBalanceReturn("moss")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You may eat another bit of irid moss.</string>
							<string>The kidney slice has cleared your system.</string>
							<string>You can swallow another anabiotic pill.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tree Balance (on)</name>
						<script>showBalanceReturn("tree")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your tree tattoo tingles slightly.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Healing Balance (on)</name>
						<script>showBalanceReturn("healing")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You may drink another health or mana elixir.</string>
							<string>You are again able to use a healing serum.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Herb Balance (on)</name>
						<script>showBalanceReturn("herb")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You may eat another plant.</string>
							<string>You may consume another curative.</string>
							<string>You may swallow another pill.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Salve Balance (on)</name>
						<script>showBalanceReturn("salve")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You may apply another salve to yourself.</string>
							<string>You are again able to absorb a poultice.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Focus Balance (on)</name>
						<script>showBalanceReturn("focus")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your mind is able to focus once again.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Elixir Balance (on)</name>
						<script>showBalanceReturn("elixir")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You may drink another affliction-healing elixir.</string>
							<string>You may use another affliction-healing serum.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Disperse Balance (on)</name>
						<script>showBalanceReturn("disperse")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are able to disperse your bindings once more.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Endgame Balance (on)</name>
						<script>showBalanceReturn("endgame")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You feel able to (?:renew|reconstitute) your body once more\.$</string>
							<string>You feel capable of erasing your maladies once more.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pipe Balance (on)</name>
						<script>showBalanceReturn("pipe")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You may smoke another herb.</string>
							<string>You may inject another tincture.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fitness Balance (on)</name>
						<script>cd.balances.fitness = true
showBalanceReturn("fitness")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your lungs have recovered and you feel as fit as ever.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fitness Balance (off)</name>
						<script>cd.balances.fitness = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You breathe inward, hissing and steeling your body.</string>
							<string>You use Fitness.</string>
							<string>You have gained the fitness defence.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Writhing Initiation</name>
					<script>currentlyWrithing = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You begin to wrestle the webs clinging to your limbs.</string>
						<string>You begin trying to wrest your mind free of that which has transfixed it.</string>
						<string>You begin to writhe free from a stalagmite.</string>
						<string>You begin to untangle yourself from the forest vines.</string>
						<string>^You begin trying to writhe out of the grapple with (\w+)\.$</string>
						<string>^You begin to writhe furiously to escape the (?:blade|spear|sword\-like snout) that has impaled you\.$</string>
						<string>^You begin to (?:shake|twist) your (?:leg|arm|neck) violently, trying to release .+ from the vicious jaws\.$</string>
						<string>You begin to struggle free of your entanglement.</string>
						<string>You begin to work at the knots in the ropes around your wrists and ankles.</string>
						<string>You exert your will and attempt to writhe free of the vampire's embrace.</string>
						<string>You concentrate intently, desperately seeking to throw off the unnatural attraction from your mind.</string>
						<string>^You begin to writhe furiously to escape your impalement from .+\.$</string>
						<string>You begin trying to free yourself of the sticky tar.</string>
						<string>You try to wrest yourself from the strong claws gripping your shoulders.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Writhing Failure</name>
					<script>currentlyWrithing = nil</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are too off-balance to writhe free of the painful embrace.</string>
						<string>You are too unstable to concentrate on wresting your mind free of its unnatural attraction.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Writhing Periodic</name>
					<script>currentlyWrithing = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You rip at the sticky webbing encasing you.</string>
						<string>You continue trying to free yourself from the grapple.</string>
						<string>^You struggle to escape the blade (?:that|which) has impaled you\.$</string>
						<string>Your disrupted balance slows your ability to writhe.</string>
						<string>You struggle to extricate yourself from the vampire's clinging embrace.</string>
						<string>You strain to keep your focus and ignore the vampire's call.</string>
						<string>You struggle for freedom from the stalagmite impaling you.</string>
						<string>^You struggle to escape from .+\'s impalement\.$</string>
						<string>Your disrupted equilibrium makes it harder to wrest your mind free of its transfixion.</string>
						<string>You continue trying to wrest your mind free.</string>
						<string>You tear wildly at the rope around your ankles.</string>
						<string>You slowly wade closer to more stable ground.</string>
						<string>You wrestle with the claws, eyeing the ground far below.</string>
						<string>You continue to work at the knots in the ropes.</string>
						<string>You continue to untangle your body from the forest vines.</string>
						<string>^You continue to work at freeing your (?:leg|neck|armpit)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Pipelist</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pipelist Header</name>
						<script>checkingPipeList = true
cd.cure.resetPipes()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:[\*]+)\[ (?:Syringes|Pipes) \](?:[\*]+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pipelist Entry</name>
						<script>local id = matches[2]
local contents = matches[3]
local amt = tonumber(matches[4])
local lit = matches[5]

local name = cd.player.name

-- If this player isn't defined then ignore the pipes altogether.
if name == nil or cd.cure.pipeIDs[name] == nil then
	return
end

-- If this pipe isn't one of our predefined ones, ignore it.
local elm_pipe, skullcap_pipe, valerian_pipe = cd.cure.pipeIDs[name].elm, cd.cure.pipeIDs[name].skullcap, cd.cure.pipeIDs[name].valerian
if id ~= elm_pipe and id ~= skullcap_pipe and id ~= valerian_pipe then
	return
end

if contents == "demulcent" then contents = "elm"
elseif contents == "antispasmadic" then contents = "valerian"
elseif contents == "sudorific" then contents = "skullcap"
end

-- Parse contents.
if id == elm_pipe then
	cd.cure.pipes.elm.uses = amt

	if cd.cure.pipes.elm.uses == 0 or contents ~= "elm" then
		refillElm = true
	end
elseif id == skullcap_pipe then
	cd.cure.pipes.skullcap.uses = amt

	if cd.cure.pipes.skullcap.uses == 0 or contents ~= "skullcap" then
		refillSkullcap = true
	end
elseif id == valerian_pipe then
	cd.cure.pipes.valerian.uses = amt

	if cd.cure.pipes.valerian.uses == 0 or contents ~= "valerian" then
		refillValerian = true
	end
end

if lit == "yes" then
	cd.cure.pipes[contents].lit = true
else
	cd.cure.pipes[contents].lit = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\d+)\s*\s.*syringe.*\s(empty|demulcent|antispasmadic|sudorific|elm|valerian|skullcap)\s+(\d+)\s+(?:artifact|\d+)\s+(yes|no)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pipelist Footer</name>
						<script>cd.cure.refillPipes()

checkingPipeList = nil</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>*******************************************************************************</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>First Aid Parsing</name>
					<script>cd.Gag()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\[FirstAid\]: (.+)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>CFS Parsing</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CFS Header</name>
					<script>cfs = {
}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Credits currently available for purchase:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CFS Footer</name>
					<script>-- Let's make a special blown-up version of our CFS table.
cfs_exp = {}

for price, amount in pairs(cfs) do
	for i = 1, amount do
		table.insert(cfs_exp, price)
	end
end

if #cfs_exp &gt; 0 then
	-- Find the median, weed out stupidly high credit values.
	
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Use CREDITS BUY &lt;number&gt; AT &lt;max gold per credit&gt; to purchase.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CFS Line</name>
					<script>local price = tonumber(matches[3])
local count = tonumber(matches[2])

cfs[price] = count</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\s*(\d+) credits? at\s*(\d+) gold per credit\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Character Specific</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lin - Fix Description on Gender Change</name>
					<script>handleLinGenderChange(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^As you lay a hand upon a gem of transmutation, you feel its magic wash over you in a tingling wave as it rapidly morphs your body into a (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Quests</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Undercroft Dial</name>
					<script>if solve_undercroft_dial_sequence == true then
  local sym = matches[2]
  next_sym = undercroft_dial_queue[1]
  
  if sym:lower() == next_sym:lower() then
    send("push dial", false)
  else
    send("turn dial", false)
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You turn a large dial to the letter \'(\w+)\'\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Undercroft Dial Push</name>
					<script>if solve_undercroft_dial_sequence == true then
  table.remove(undercroft_dial_queue, 1)
  if #undercroft_dial_queue == 0 then
    teshenUndercroftDialReset()
  else
    send("turn dial", false)
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You push in a large dial pointing to the letter \'(\w+)\'\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Undercroft Dial Reset</name>
					<script>teshenUndercroftDialReset()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>With a series of soft clicks, a large dial turns back to a neutral position.</string>
						<string>A nearby door shuts and locks, with a loud, decisive click.</string>
						<string>There's a rumble from the nearby stone, and then one of the doors gives a sharp click.</string>
						<string>There are no letters punched in.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Herolt</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Herolt Question</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Herolt, the decipherer says, "Question \d+: (.+)"$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Drakkenmont</name>
							<script>herolt_answer = "Andalso"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who led the invading army of Drakkenmont?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Niuri Earth Elemental</name>
							<script>herolt_answer = "Fordrock"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the Earth elemental who was responsible for the destruction of one of Lady Niuri's temples as well as Her priestess, Sekhtet?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Saayar")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who blew up the Silver Spire?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Baelak")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who was the former Emperor of the Nazedha?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Ashtan")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which place did the ophidians once serve as guardsmen?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Bokag")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the King of Hashan that was reborn was Maghak, the Sovereign?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Shallam")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which city first possessed a university?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Vukub")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the Ogre Baron of Dun?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Lutha Kelma")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the enchantment that the Naldareth used to hide Kelsys from the world?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Mhuinnah")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the name of the Mhun spirit of nurturing?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Tsinkin")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of the following languages is not easily learnable?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Evin")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of the following is not the name of one of the Seluno brothers?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Loretta")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who was the Second Prophet that was a successor to Averroes?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Bamathis")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which God was last created by Varian, the Celestine?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Duamvi")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who bestowed the mantle of the Templars to the original Paladin guild?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Avegnon")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the hawk that was Lord Arion's essence and attempted to thwart Lord Severn?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Gloria")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of Lord Rahn's falcon?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Catapults")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What sort of machinery did the mortals of Sapience use to assault the Almighty Kerrithrim?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Yrtez")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was Belladonna's former name?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Acerbus Ferratus")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the Infernal-related House that resided in early Bloodloch?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Maraxis")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the name of Lord Damariel's lance?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say The sword of truth")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What did Lanos use to seal the breach between the Shadow Plane and the Prime Material Plane?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Azaeru")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who prophecized about the coming of the Three Children?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Luthier")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of these is the newest crafting skill or talent?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say The strength of the Consanguine")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of the following did the Landmarks of old not affect?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Juxa")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who was the last ruler of the Troll royal family?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say The Shadowsnakes")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which guild once held a monopoly on venom sales?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Syvelium")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who was the last mortal shell of Arion, Lord of Valor?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Enorianites")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of the following word is the correct term to refer to people from Enorian?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Ankyrean")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the primary language of the Ankyrean Order?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Seven")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>How many stable numbers are used in the practice of Numerology?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say A Sable Apparatus")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Where the Landmarks of old are concerned, the Solor Horologe is to The Tenebrous Glass as a Fulgent Prototype is to...</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Severn")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What God did Amairgen, the Lich of Bloodloch used to serve?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Erxotl")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who created the Rajamalan race?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Alshek")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the spirit guardian who attempted to destroy Duiran's connection to Dendara?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Dwarves")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who built the City of Bloodloch?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Daskalos")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who prevailed in the great Delosian Duel of 420 MA?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Llazuth")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the name of the Demon Spider Queen from the Black Keep?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Layentesh")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the name of the current High Priestess of Moghedu?"</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Sir Robert Lyesmith")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name that Severn assumed when He appeared to Arion's order as a mortal and deceived them?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Iosyne")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which Goddess helped mortals discover emotion?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Adeiman and Eridin")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who were the two men to become the butterflies of the Garden of Rapture and Midnight?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Andharai")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the false Great Mhunna of the Midnight Age?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Baby")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What specific word is Grandmaster Siraj el-Ferar well known for using?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say The Soulgem of Gladius")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What boon did Gladius, the Red Knight once grant to those who fulfilled one of his requests?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Foxes")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which animals do the Seyda closest resemble?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Locusts")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What plague did the Idol of Pestilence bring to the city of Enorian in its early days?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Kayalenki")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the name of the Enorianite prophet of the Gods of Light?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Jalk")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of the following venoms was invented most recently?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say A gardener")]])
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Where did the seed that started the formation of the Flame of Yggdrasil come from?"</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Merentesh")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who created the suicide mice in the year 87 MA?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Llazuth")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who brought an end to Zsarachnor?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Red")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the color of Severn's sequined dress?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say The Lance of Irissotl")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What weapon was traditionally used to banish Ati, the Shadow?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Adreriwyr")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the eel that acted as Lord Slyphe's companion and could serve as a weapon for Him?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Octopus")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of the following is not a form that the river nymph Nausikaa can assume?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Willem")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the deceased husband of Malorea, Priestess of Lady Auresae?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Catiana")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the guise the Goddess Chakrasul assumed to tempt Idar to his downfall?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Azaliel")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of Lord Arion's steed?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Fire")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the best way to ward off thrims?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say The Syssin")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of the following guilds was historically averse to the undead?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Missari and Mazzion")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which two warriors destroyed the heartstrings of the Almighty Kerrithrim?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Zephy")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who was the first mortal (living) Keeper of Bloodloch?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Humans")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who originally inhabited Dun Valley?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Enorian")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which place claims the greatest population of refugees from Dun Valley?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Niuri")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who killed Fordrock?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say The Great Rock")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Within which location can a phoenix's nest be found?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Reliquaries")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which devices were used to combat the Nazedha invaders?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Silenos")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the name of the satyr of Scidve?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Jhaki")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of the following is not the name of a Nazedha Chaos Lord?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Altan Dula")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the name of the Praexi singer who performed in the Celebration of the Stars?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Pet")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What does the Kalsu word 'rellyw' literally mean?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Il'ahji")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What circle of the Akkari does the Exarch Aban lead?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Ayalaine")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who was responsible for the death of Rahn, Lord of Fire?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Manorea")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Who was NOT a handmaiden to Belladona?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Golrath")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the Chaos Lord whom betrayed the Emperor Golgotha?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Jehanne")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What was the name of the alchemist Jirken's great-granddaughter?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Dendara")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Which of these is not the name of an elemental plane?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Erxotl")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>In Salurian mythology, what was the name of the God who opposed to Ati?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New trigger</name>
							<script>tempTimer(4, [[send("say Flintbeard")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>What is the name of Ironbeard's brother?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Herolt - Prompt</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Herolt, the decipherer says, "Anything you say out loud after this point will be considered your answer. You have 20seconds."</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Exploration</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Survey - Exploration Amount</name>
					<script>local a = getCleanAreaName(cd.room.area)

updateExplorationArea(a, tonumber(matches[2]))</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You have explored (\d+)\% of this area\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Ylemnics</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Capture Thaumizer</name>
					<script>my_thaumizer = matches[2]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^"thaumizer(\d+)"  \s*an? .+ ylemnic thaumizer\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Modules</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Blumenkranz</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Date and Time</name>
					<script>local day = matches[2]
local month = matches[3]
local year = matches[4]

BK.Day = day
BK.Month = month
BK.Year = year</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(?:It is now|Today is) the (\d+)(?:st|nd|rd|th) of (\w+), year (\d+) of the Midnight Age\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Requests</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Farsight Thingy (Local Area)</name>
				<script>local tar = multimatches[1][2]
local room = multimatches[2][2]
local count = tonumber(multimatches[3][2])

local people = ""

if count == 0 then
	people = "alone!"
elseif count == 1 then
	people = "with 1 other person."
else
	people = "with " .. count .. " other people."
end

cd.Broadcast("[FARSIGHT:] " .. tar .. " is at " .. room .. ", " .. people)</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>2</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You close your eyes momentarily and extend the range of your vision, seeking out the presence of (\w+)\.$</string>
					<string>^You see that \w+ is at (.+)\.$</string>
					<string>^You detect (\d+) other (?:person|people) in that location\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Farsight Thingy (Remote Area)</name>
				<script>local tar = multimatches[1][2]
local area = multimatches[2][2]
local count = tonumber(multimatches[3][2])

local people = ""

if count == 0 then
	people = "alone!"
elseif count == 1 then
	people = "with 1 other person."
else
	people = "with " .. count .. " other people."
end

cd.Broadcast("[FARSIGHT:] " .. tar .. " is in the area " .. area .. ", " .. people)</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>2</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You close your eyes momentarily and extend the range of your vision, seeking out the presence of (\w+)\.$</string>
					<string>^Though too far away for you to accurately perceive details, \w+ is in (.+)\.$</string>
					<string>^You detect (\d+) other (?:person|people) in that location\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Modules</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Crafting Convenience</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Requested New Design</name>
					<script>raiseEvent("ccv.requested_new_design", matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Done! Your requested design is\: #(\d+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Breakdown</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Trawler</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>FishStatus</name>
					<script>if auto_fish and fish_update then

	fish_update = false

	local _, line =  matches[2]:gsub("%-", "")
	local _, fish =  matches[3]:gsub("%=", "")
	local distance = matches[4]:find("%+")

	line = tonumber(line)
	fish = tonumber(fish)
	distance = tonumber(distance)

	if fish &lt;= 1 then
		send("queue bal fishing reel", false)
	elseif line - distance &gt;= 3 or line &lt;= 1 and distance &gt; 1 then
		send("queue bal fishing cut", false)
	else
		send("queue bal fishing lead", false)
	end

end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Line: \[ ([\/\-]+) \] Fish: \[ ([\=\-]+) \] Distance: \[ ([\+\-]+) \]$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>FishStart</name>
					<script>if auto_fish then send("queue bal fishing lead", false) end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your line jerks sharply down as your hook finds a home in something.</string>
						<string>You use Fishing (hit).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>FishNeedUpdate</name>
					<script>fish_update = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You reel frantically against</string>
						<string>You guide the pole to one side, leading the fighting creature</string>
						<string>With a fluid flick of your wrist, you loose the fishhook</string>
						<string>^You use Fishing (?:Lead|Reel)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>FishAuto</name>
					<script>currently_fishing = false
if auto_fish then
  send("queue bal fishing cast", false)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>With a mighty heave, you lift </string>
						<string>The creature at the other end of your line gives a mighty jerk, snapping its tether and leaving you with an empty pole.</string>
						<string>You lightly nick your taut line, which snaps in a whoosh of released tension.</string>
						<string>You use Fishing Catch.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CaptureFishingHole</name>
					<script>-- Make sure tables actually exist.
if not fishing_holes then
	load_fishing_db()
end

fishing_holes[multimatches[1][2]] = fishing_holes[multimatches[1][2]] or {}

-- Get some basic data.
fishing_holes[multimatches[1][2]].name = multimatches[1][2]
fishing_holes[multimatches[1][2]].type = multimatches[2][2]

-- Track the room.
fishing_holes[multimatches[1][2]].rooms = fishing_holes[multimatches[1][2]].rooms or {}
local found_room = false
for k,v in pairs(fishing_holes[multimatches[1][2]].rooms) do
	if v == gmcp.Room.Info.num then 
		found_room = true
		break
	end
end
if not found_room then
	table.insert(fishing_holes[multimatches[1][2]].rooms, gmcp.Room.Info.num)
end

-- Format the fishing hole contents string so that it can be parsed.
multimatches[2][3] = "|" .. multimatches[2][3]:gsub(", ", "||") .. "|"
multimatches[2][3] = multimatches[2][3]:gsub(" and ", "||")
multimatches[2][3] = multimatches[2][3]:gsub("%|and ", "||")
multimatches[2][3] = multimatches[2][3]:gsub("%|%|%|", "||")

-- Iterate over the fishing hole contents and get the fish in the hole.
local temp_fish = {}
for ftype in multimatches[2][3]:gmatch("%|%d+ of ([%w%s%'%-]+)%|") do	
	table.insert(temp_fish, ftype)
end
for ftype in multimatches[2][3]:gmatch("%|([%w%s%'%-]+)%|") do
	local skip = false
	for tmp in ftype:gmatch("%d of ") do
		skip = true
		break
	end
	if not skip then 
		table.insert(temp_fish, ftype) 
	end
end

-- Make sure our fishing table exists before checking it in the following loop.
fishing_holes[multimatches[1][2]].fish = fishing_holes[multimatches[1][2]].fish or {}
for k, v in pairs(fishing_holes[multimatches[1][2]].fish) do
	if v == "unfamiliar creatures" then
		table.remove(fishing_holes[multimatches[1][2]].fish, k)
		break
	end
end

for _, ftype in pairs(temp_fish) do
	local found = false
	for k,v in pairs(fishing_holes[multimatches[1][2]].fish) do
		if ftype == v then 
			found = true
			break
		end
	end
	if not found then table.insert(fishing_holes[multimatches[1][2]].fish, ftype) end
end

-- Save data.
save_fishing_db()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You are standing within (.+)\.$</string>
						<string>^The (.+) teem with (.+).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>FishCast</name>
					<script>currently_fishing = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>With a fluid flick of your wrist, you loose the fishhook</string>
						<string>You use Fishing Cast.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>Anti-AFK</name>
			<script>sendGMCP("Core.KeepAlive")</script>
			<command></command>
			<packageName></packageName>
			<time>00:01:00.000</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>Pulse</name>
			<script>raiseEvent("pulse")</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.100</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>System Monitor</name>
			<script>pingCount = pingCount or {}

local ping = getNetworkLatency()

if #pingCount &gt;= 10 then
	table.remove(pingCount, 1)
end

table.insert(pingCount, ping)</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.500</time>
		</Timer>
		<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>MPG Backup Timer</name>
			<script>mpg.BackupData()</script>
			<command></command>
			<packageName></packageName>
			<time>00:05:00.000</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>Market Spam</name>
			<script>if marketSpam == nil then
	return
end

send("market " .. marketSpam)</script>
			<command></command>
			<packageName></packageName>
			<time>00:30:00.000</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>Animation Controller</name>
			<script>raiseEvent("animation.frame")</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.033</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>Save Data</name>
			<script>cd.SaveVars()</script>
			<command></command>
			<packageName></packageName>
			<time>00:05:00.000</time>
		</Timer>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Mudlet Standard Stuff</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>deleteOldProfiles</name>
				<script></script>
				<command></command>
				<packageName>deleteOldProfiles</packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>delete old profiles</name>
					<script>deleteOldProfiles(matches[3], matches[2]=="maps")

--Syntax examples: "delete old profiles"  -&gt; deletes profiles older than 31 days
--					"delete old maps 10"	-&gt; deletes maps older than 10 days</script>
					<command></command>
					<packageName></packageName>
					<regex>^delete old (profiles|maps)(?: (\d+))?$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Challenger Deep</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Internals</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>[i] Command-Line Lua Execution</name>
					<script>local f, e = loadstring("return " .. matches[2])
if not f then
	f, e = assert(loadstring(matches[2]))
end

local r = f()
if r ~= nil then display(r) end</script>
					<command></command>
					<packageName></packageName>
					<regex>^\/run (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[i] Parse as Game Text</name>
					<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
feedTriggers("\n" .. s .. "\n")
echo("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^\/parse (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[i] Display Value</name>
					<script>if matches[2] == "_G" then
	notify("That's an awesome way to crash your client.")

elseif matches[2] == "cd" then
	notify("The master table is too big to usefully sort through. Try a subtable, instead.", false)
	local x = 1

	echo("\n    ")

	for k,v in pairs(cd) do
		if type(v) == "table" then
			if x % 3 == 0 then
				echo("\n    ")
			end

			cecho("&lt;cd_dark&gt;cd&lt;a_darkgrey&gt;.&lt;cd_light&gt;" .. k)

			if x % 3 ~= 2 then
				echo(string.space(24 - k:len()))
			end

			x = x + 1
			if x &gt; 3 then
				x = 1
			end
		end
	end

	echo("\n\nAdditionally, \"cd\" contains these values:")

	x = 1

	echo("\n    ")

	for k,v in pairs(cd) do
		if type(v) ~= "table" then
			if x % 3 == 0 then
				echo("\n    ")
			end

			if type(v) == "function" then
				cecho("\n    &lt;cd_dark&gt;cd&lt;a_darkgrey&gt;.&lt;cd_light&gt;" .. k .. "()")
			else
				v = tostring(v)
				if v ~= "true" and v ~= "false" then
					v = "\"" .. v .. "\""
				end

				cecho("\n    &lt;cd_dark&gt;cd&lt;a_darkgrey&gt;.&lt;cd_light&gt;" .. k .. " &lt;a_darkgrey&gt;= &lt;cd_bright&gt;" .. v)
			end

			if x % 3 ~= 2 then
				echo(string.space(24 - k:len()))
			end

			x = x + 1
			if x &gt; 3 then
				x = 1
			end
		end
	end

	send("\n")
else
	assert(loadstring("display(" .. matches[2] .. ")"))()
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^\@(.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[i] Set System Config</name>
					<script>send("config separator |", false)

sendAll(
	"config color deathsight 9 1",
	"config color room_title 15 3",
	"config color exits 12",
	"config color emotes 6",
	"config color messages 8",
	"config wrapwidth 0",
	"config balance_taken on",
	"config affliction_view full",
	"config damage_change off",
	"config experience_change on",
	"config simple_diag on",
	"config dialogue highlight",
	"config mobdamage on",
	"config tattooregen off",
	"config autodoors on",
	"config xterm on",
	"config curemsgs default",
	"config grabcorpses on",
	"config echoqueue on",
	"config combatmessages gag",
	"config tellsprefix names",
	"config mxp on",
	"config widescreen on",
	"plants off",
	false)

-- Set the prompt for things we can't grab through GMCP.

if isGod() == true then
	send("config prompt custom pr: ^cf^w[^g@dfireshort^w] ^cg^w[^g@guild^w] ^cv^w[^g@visstatus^w] ^cs^w[^g@stats^w] ^cd^w[^g@month @day, @year ^m(^M@time^m)^w] ^W-", false)
else
	send("config prompt custom pr: ^cd^w[^g@month @day, @year ^m(^M@time^m)^w] ^W-", false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^config fix$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[i] Color Table Lookup</name>
					<script>local count = 0
sysLine("Matching Colors")

if matches[3] then
	for k, v in pairs(color_table) do
		if k:find(matches[3]) then
			setFgColor(getRGB(k))

			if count == 2 then
				echo(k .. "\n")
				count = 0
			else
				echo(k .. string.space(25 - string.len(k)))
				count = count + 1
			end

			resetFormat()
		end
	end
else
	for k,v in pairs(color_table) do
		setFgColor(getRGB(k))

		if count == 2 then
			echo(k .. "\n")
			count = 0
		else
			echo(k .. string.space(25 - string.len(k)))
			count = count + 1
		end

		resetFormat()
	end
end

send("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^colors(|\s(.+))$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[i] Character Table Lookup</name>
					<script>local count = 0
sysLine("System Characters")

for i = 1, 255 do
	if i % 4 == 0 then
		echo("\n")
	end

	echo(string.jleft("%s: %s" % {i, string.char(i)}, 20))
end

sysLine()
send("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^chars$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[i] Open Profile Directory</name>
					<script>os.execute([[start "" "]] .. getMudletHomeDir() .. [[\"]])</script>
					<command></command>
					<packageName></packageName>
					<regex>^homedir(?:ectory)?$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>System Controls</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>System Modes</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Debugging</name>
						<script>if matches[2] == "on" then
	cd.sys.debugging = true
	notify("Debugging", "You are now receiving special debugging information.")
else
	cd.sys.debugging = false
	notify("Debugging", "You are no longer receiving special debugging information.")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^debug (on|off)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Generic Module Toggles</name>
						<script>local option = matches[2]

if option == "bless" then
	return
end

if option == "stand" then
	cd.ToggleModule("autostand", "indian_red", "St", "Auto-standing")

elseif option == "mass" or option == "massing" then
	cd.ToggleModule("automass", "a_yellow", "aM", "Auto-massing")

elseif option == "cure" or option == "curing" then
	cd.ToggleModule("curing", "a_green", "C", "Curing", "", "\n&lt;a_white,a_darkred&gt;WARNING: Playing in this system state will leave you vulnerable!")

elseif option == "sanctify" or option == "sanctification" or option == "sanc" then
	cd.ToggleModule("autosanc", "violet", "aS", "Auto-sanctification")

	if cd.modules.autodefile == true and cd.modules.autosanc == true then
		cd.modules.autodefile = false
		cecho("\n      &lt;a_grey&gt;Auto-defiling &lt;a_red&gt;deactivated.")
	end

elseif option == "defile" or option == "defiling" then
	cd.ToggleModule("autodefile", "medium_violet_red", "aD", "Auto-defiling")

	if cd.modules.autodefile == true and cd.modules.autosanc == true then
		cd.modules.autosanc = false
		cecho("\n      &lt;a_grey&gt;Auto-sanctification &lt;a_red&gt;deactivated.")
	end

elseif option == "call" or option == "calls" or option == "calling" then
	cd.ToggleModule("calling", "medium_sea_green", "C", "Target Calling")

	if cd.modules.calling == true then
		cd.Broadcast("Target calling enabled.")
	else
		cd.Broadcast("Target calling disabled.")
	end

elseif option == "bbt" then
	cd.ToggleModule("autobbt", "orange_red", "BBT", "Auto-BBT")

elseif option == "eaff" or option == "eaffs" or option == "enemyaff" or option == "enemyaffs" then
	cd.ToggleModule("enemyaffs", "LightSeaGreen", "EA", "Enemy Afflictions Tracking")

elseif option == "def" or option == "defs" or option == "defup" then
	cd.ToggleModule("autodef", "saddle_brown", "DEF", "Auto-DEF")

elseif option == "vermin" or option == "rat" or option == "rats" then
	cd.ToggleModule("autovermin", "DeepPink", "aV", "Auto-Vermin")

else
	notify("Unrecognized module.")

end</script>
						<command></command>
						<packageName></packageName>
						<regex>^auto(.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Toggle Broadcasting</name>
						<script>if matches[2] == "off" or matches[2] == "none" or matches[2] == "nothing" or matches[2] == "clear" then
	cd.modules.broadcasting = false
	cecho("&lt;dark_slate_grey&gt;[&lt;a_darkgrey&gt;B&lt;dark_slate_grey&gt;] &lt;a_grey&gt;Broadcasting &lt;a_red&gt;deactivated&lt;a_grey&gt;.")
	send("\n")
else
	cd.modules.broadcasting = matches[2]
	cecho("&lt;yellow_green&gt;[&lt;a_brown&gt;B&lt;yellow_green&gt;] &lt;a_grey&gt;Broadcasting to &lt;a_green&gt;" .. cd.modules.broadcasting .. "&lt;a_grey&gt;.")
	send("\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:b|broad)cast (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Toggle AFK</name>
						<script>-- A special mode that changes system functionality.
cd.ToggleModule("afk", "slate_grey", "afk", "AFK")

if cd.modules.afk == true then
	-- First, we'll store the values of our system configuration, so we can change it back.
	prevSysSettings = {}
	for mod, value in pairs(cd.modules) do
		if mod ~= "afk" then
			prevSysSettings[mod] = value
		end
	end

	-- Now to set the system settings to AFK-friendly states.
	cd.modules.enemyaffs = false
	cd.modules.curing = true
	cd.modules.automass = false
	cd.modules.broadcasting = false
	cd.modules.autodef = true
	cd.modules.autobbt = false
	cd.modules.autosanc = false
	cd.modules.calling = false
	cd.modules.autostand = true
	cd.modules.pk = false
	cd.modules.superbashing = false
	cd.modules.apothecarybashing = false

	-- And toggle some special modules we only use when AFK.
	-- Nothing here yet!
else
	for mod, value in pairs(prevSysSettings) do
		cd.modules[mod] = value
	end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^afk$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Toggle Bashing</name>
						<script>cd.ToggleModule("autobashing", "dark_orange", "AB", "Auto-bashing")
local sb_enabled = "disabled"
local apb_enabled = "disabled"

if cd.modules.autobashing == true then
	cd.modules.autostand = true
	cd.modules.curing = true
	cd.modules.pk = false

	if cd.modules.superbashing == true then
		sb_enabled = "enabled"
	end

	if cd.modules.apothecarybashing == true then
		apb_enabled = "enabled"
	end

	send("tunnelvision off", false)
	cecho("\n&lt;a_darkgrey&gt;Superbashing is &lt;a_grey&gt;" .. sb_enabled .. "&lt;a_darkgrey&gt;.")
	cecho("\n&lt;a_darkgrey&gt;Apothecary Bashing is &lt;a_grey&gt;" .. apb_enabled .. "&lt;a_darkgrey&gt;.")
end

raiseEvent("ui.update", "system")</script>
						<command></command>
						<packageName></packageName>
						<regex>^bash$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Toggle PK Mode</name>
						<script>cd.ToggleModule("pk", "a_red", "PK", "PK Mode")

if cd.modules.pk == true then
  local c = cd.player.class
  if cd.class[c].init_aff_vars then
    cd.class[c].init_aff_vars()
  end

	cd.modules.autobashing = false
	cd.modules.superbashing = false
	cd.modules.apothecarybashing = false
else
  raiseEvent("enemy.clear_afflictions", getTarget())
  raiseEvent("enemy.clear_defenses", getTarget())
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^pk$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Toggle Superbashing</name>
						<script>cd.ToggleModule("superbashing", "orange", "SB", "Superbashing")

if cd.modules.superbashing == true then
	cd.modules.pk = false
else
	cd.bashing.currentlyAttacking = false
end

raiseEvent("ui.update", "readout")</script>
						<command></command>
						<packageName></packageName>
						<regex>^sb$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Toggle Apothecary Bashing</name>
						<script>cd.ToggleModule("apothecarybashing", "orange_red", "APB", "Apothecary Bashing")

if cd.modules.apothecarybashing ~= true then
	cd.bashing.currentlyAttacking = false
end

raiseEvent("ui.update", "readout")</script>
						<command></command>
						<packageName></packageName>
						<regex>^apb$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>System Options</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Change Prompt Colors</name>
						<script>local validStat = {"hp", "mp", "end", "will", "eq", "bal", "sync"}

local stat = string.lower(matches[2])
local color = matches[3]

if not color_table[color] then
	notify("Prompt Color", "&lt;a_red&gt;" .. color .. " &lt;a_grey&gt;is not a valid color choice.")
	return
elseif table.contains(validStat, stat) ~= true then
	notify("Prompt Color", "&lt;a_red&gt;" .. matches[2] .. " &lt;a_grey&gt;is not a valid stat choice.")
	return
end

stat = "p_" .. stat
color = color_table[color]

color_table[stat] = color

notify("Prompt Color", "The &lt;a_green&gt;" .. string.upper(matches[2]) .. " &lt;a_grey&gt;stat will now show up in &lt;" .. matches[3] .. "&gt;" .. matches[3] .. "&lt;a_grey&gt;.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^p\.color (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Channel Options</name>
						<script>local opt = matches[2]
local par = matches[3]

if opt == "color" or opt == "c" then
	local color = par:match("^.+ (%w+)$")
	local chan = par:match("^(.+) %w+$")

	if color == nil or chan == nil then
		notify("Channel Control", "Syntax: ch.color &lt;channel&gt; &lt;color&gt;")
		return
	elseif not color_table[color] then
		notify("Channel Control", "&lt;a_red&gt;" .. color .. " &lt;a_grey&gt;not found.")
		return
	end

	changeChannelColor(color, chan)
elseif opt == "symbol" or opt == "sym" or opt == "s" then
	local sym = par:match("^.+ (.)$")
	local chan = par:match("^(.+) .$")

	if sym == nil or chan == nil then
		notify("Channel Control", "Syntax: ch.symbol &lt;channel&gt; &lt;symbol&gt;")
		return
	end

	changeChannelSymbol(sym, chan)
elseif opt == "user" or opt == "u" then
	local color = par:match("^%w+ (%w+)$")
	local user = par:match("^(%w+) %w+$")

	if color == nil or user == nil then
		notify("Channel Control", "Syntax: ch.user &lt;user&gt; &lt;color&gt;")
		return
	elseif not color_table[color] then
		notify("Channel Control", "&lt;a_red&gt;" .. color .. " &lt;a_grey&gt;not found.")
		return
	end

	changeChannelUserColor(color, user)
else
	notify("Channel Control", "Unknown channel option.")
	cecho("\n&lt;a_grey&gt;                 Options: color, symbol, user")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^ch\.(\w+) (.+)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Bash Notifications</name>
						<script>local opt = matches[2]

if opt:match("^q") ~= nil then
	cd.bashing.notifications = false
	notify("Bashing", "You will bash with much less spam.")
elseif opt:match("^n") ~= nil then
	cd.bashing.notifications = true
	notify("Bashing", "You will receive handy notifications while bashing.")
else
	notify("Bashing", "Valid options: &lt;cd_bright&gt;QUIET &lt;a_grey&gt;or &lt;cd_bright&gt;NOISY&lt;a_grey&gt;.")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^bash (\w+)$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>System Overview</name>
					<script>-- Fun fact: I wrote this alias back in 2011.
--
--  - Lin

notify("This will totally show you an awesome master system display whenever I get around to writing it.")</script>
					<command></command>
					<packageName></packageName>
					<regex>^\.$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Debugging</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Curing</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Add/Remove Affliction</name>
							<script>local opt = matches[2]
local affliction = matches[3]

local cdebug = function (msg)
	cecho("\n&lt;a_darkgrey&gt;[&lt;green_yellow&gt;#&lt;a_darkgrey&gt;] &lt;a_grey&gt;" .. msg)
end

if affliction == "clear" then
	cd.afflictions = {}
	cd.hiddenAffs = nil
	cdebug("All afflictions cleared!")
	raiseEvent("ui.update", "readout")
end

if opt == "+" then
	if affliction == "hidden" then
		aff.addHidden()
		cdebug("Added a hidden affliction.")
	else
		aff.add(affliction)
		cdebug("Afflicted with &lt;a_red&gt;" .. affliction .. "&lt;a_grey&gt;.")
	end
elseif opt == "-" then
	if affliction == "hidden" then
		aff.remHidden()
		cdebug("Removed a hidden affliction.")
	else
		aff.rem(affliction)
		cdebug("Removed &lt;a_red&gt;" .. affliction .. "&lt;a_grey&gt;.")
	end
elseif opt == "?" then
	if affliction == "hidden" then
		aff.addHidden()
		cdebug("Added a hidden affliction.")
	else
		aff.sym(affliction)
		cdebug("Added symptom of &lt;a_red&gt;" .. affliction .. "&lt;a_grey&gt;.")
	end
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(\-|\+|\?)a (.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show Afflictions</name>
							<script>local balColors = {
	["HO"] = "lime_green",
	["SP"] = "saddle_brown",
	["ST"] = "light_slate_grey",
	["ES"] = "medium_purple",
	["binds"] = "tomato",
	["special"] = "gold",
}

echo("\n")
moduleHeader("Afflictions", "curing", "affliction list")

for aff, time in pairs(cd.afflictions) do
	local bal
	if afflictionList[aff] then
		bal = afflictionList[aff].balance
	end

	local col = "a_red"
	if bal ~= nil and balColors[bal] then
		col = balColors[bal]
	end

	local duration = math.round(os.clock() - time, 2)
	cecho("\n&lt;" .. col .. "&gt;" .. string.space(4) .. aff .. string.space((18 - aff:len()) + (7 - tostring(duration):len())) .. "&lt;a_grey&gt;" .. duration .. "s")
end

if cd.hiddenAffs ~= nil and cd.hiddenAffs &gt; 0 then
	cecho("\n\n    &lt;a_darkgrey&gt;Hidden Afflictions: &lt;a_red&gt;" .. cd.hiddenAffs)
end

moduleFooter()</script>
							<command></command>
							<packageName></packageName>
							<regex>^aff(?:liction)?s$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show Affliction Cure</name>
							<script>local cdebug = function (msg)
	cecho("\n&lt;a_darkgrey&gt;[&lt;green_yellow&gt;#&lt;a_darkgrey&gt;] &lt;a_grey&gt;" .. msg)
end

local affliction = matches[2]
if afflictionList[affliction] == nil then
	notify("Debug Curing", "No known affliction by the name &lt;a_darkred&gt;" .. affliction .. "&lt;a_grey&gt;.")
	return
end

local cure = aff.getCure(affliction)

cure = cure:split("\|")

cdebug("Method for &lt;a_green&gt;" .. affliction .. "&lt;a_grey&gt;:")

for _, v in ipairs(cure) do
	cecho("\n    &lt;a_white&gt;" .. v)
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^whatcure (.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Test Cure Procedure</name>
							<script>debuggingCuring = true

cd.cure.controller()</script>
							<command></command>
							<packageName></packageName>
							<regex>^run cur(?:e|ing)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Modify Player Stats</name>
							<script>local amt = tonumber(matches[3])

if matches[2] == "hp" then
	cd.player.HP.current = amt
elseif matches[2] == "mp" then
	cd.player.MP.current = amt
elseif matches[2] == "end" then
	cd.player.END.current = amt
elseif matches[2] == "wil" then
	cd.player.WIL.current = amt
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^#(hp|mp|end|wil) (\d+)$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>UI</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Set Readout Mode</name>
						<script>local modes = {
	"room", "afflictions", "system", "map", "test", "combat"
}

local opt = matches[2]

if opt == "aff" or opt == "affs" then
	opt = "afflictions"
elseif opt == "sys"
	then opt = "system"
end

if table.contains(modes, opt) == true then
	cd.modules.readoutMode = opt
	notify("Readout", "The readout window is now in &lt;a_green&gt;" .. opt .. " &lt;a_grey&gt;mode.")
	raiseEvent("ui.update", "readout")
else
	notify("Readout", "Invalid mode. Options are:")
	for _, mode in ipairs(modes) do
		cecho("    &lt;a_darkgrey&gt;" .. mode)
	end
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^r(?:ead)?o(?:ut)? (.+)$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>System Notes</name>
					<script>local notes = [[

  Need timers and auditors for:
    System processing time
    Damage intake
    Affliction intake
    Limb damage intake
    XP gain
    Mob kill rate
    Attack rate

  Curing system:
    Dynamic cure priorities
    Enemy tracking

  Prompt improvements:
    Proper gagging
    Stat changes (+HP, -END, etc.)

  UI work:
    Enemy affliction window

  Color stuff:
    Store HP/MP/etc colors in color_table
    Function to 'mix' colors
    Universal function to return colors in various formats

  Misc:
    Tokens in clan/web chat
    Replace lots and lots of stuff with iecho()
]]

moduleHeader("notes")

echo(notes)

moduleFooter()</script>
					<command></command>
					<packageName></packageName>
					<regex>^notes$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Shortcuts, QOL</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Building</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Add Room Exit</name>
						<script>if not buildingBaseName then
	notify("No basename specified! Use &lt;a_red&gt;.base &lt;a_grey&gt;to set it.")
	return
end

sendAll("redit " .. matches[2] .. " add exit to " .. buildingBaseName .. matches[3], "map fill", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^\.rx (\w+) (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Create Room</name>
						<script>if matches[3] then
	send("create room " .. matches[3], false)
else
	send("create room", false)
end
send("map fill")</script>
						<command></command>
						<packageName></packageName>
						<regex>^\.rc(| (\w+))$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Brief Description</name>
						<script>send("redit set brief_desc " .. matches[2], false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^\.rbd (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Verbose Description</name>
						<script>send("redit set verbose_desc " .. matches[2], false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^\.rvd (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Environment</name>
						<script>send("redit set environment " .. matches[2], false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^\.env (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Basename</name>
						<script>buildingBaseName = matches[2]

notify("Basename set to &lt;a_green&gt;" .. buildingBaseName .. "&lt;a_grey&gt;.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^\.base (.+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Movement/Direction</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>City Unlock Move</name>
						<script>local dir = getProperDirection(matches[2])
local oDir = getOppositeDirection(dir)

sendStack("city unlock door " ..dir,
	"open door " .. dir,
	dir,
	"close door " .. oDir,
	"city lock door " .. oDir)</script>
						<command></command>
						<packageName></packageName>
						<regex>^un (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Speedwalking</name>
						<script>local dest = matches[2]

if dest == "help" or dest == "list" or dest == "rooms" then
	raiseEvent("speedwalking list")
else
	raiseEvent("speedwalking waypoint", dest)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^goto (.+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Communication</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Improved Emoting</name>
						<script>local emote = string.split(matches[2], "\@me")

if #emote == 1 then
	send("em %s" % emote[1], false)
	return
end

local pre, suf = emote[1]:trim(), emote[2]:trim()
local em_string = "em %s" % {suf}

if pre then
	em_string = "em (%s) %s" % {pre, suf}
end

send(em_string, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^\:(.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Clantell</name>
						<script>local chan = matches[2]
local msg = matches[3]

local abbr = {
  flt = "frontline",
  fl  = "frontline",
  sdt = "sideline",
  sd  = "sideline",
  wf  = "wayfarers",
}

if chan == "parse" or chan == "run" or chan == "lol" or chan == "crafters" then
	if chan == "lol" then
		send(matches[1], false)
	elseif chan == "crafters" then
		send("crafters %s" % msg, false)
	end

	return
end

chan = abbr[chan] or chan
send("clan %s tell %s" % {chan, msg}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^\/(\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>OOC Tell</name>
						<script>send("tell " .. matches[2] .. " // " .. matches[3], false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ooc (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Leader Tell</name>
						<script>send("leadertell " .. matches[2], false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ldt (.+)$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Credits/Coins For Sale</name>
					<script>if matches[2] == "i" then
   send("ironcoins for sale", false)
else
   send("credits for sale", false)
end</script>
					<command>credits for sale</command>
					<packageName></packageName>
					<regex>^(i|c)fs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Tattoo Making</name>
					<script>local target, type = matches[2], matches[3]
send("ink %s on any of %s" % {type, target}, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^tat (\w+) (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Offer Corpses</name>
					<script>if cd.player.name == "Lin" then
	sendStack("sac corpses", "offerings show")
else
	sendStack("offer corpses", "offerings show")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^of$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Bag/Pack Interaction</name>
					<script>local dir = matches[2]
local bag = matches[3]
local item = matches[4]

if bag == "b" then bag = "bag"
elseif bag == "p" then bag = "pack"
elseif bag == "pp" then bag = "pouch"
end

if dir == "in" then
	send("put " .. item .. " in " .. bag, false)
elseif dir == "out" then
	send("take " .. item .. " from " .. bag, false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^(in|out)(b|p|pp) (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Context Actions</name>
					<script>local num = tonumber(matches[2])

if not cd.actions[num] then
	send(matches[1], false)
	return
end

send(cd.actions[num].command, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(\d+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Undress</name>
					<script>if #cd.inventory.worn &gt; 0 then
	storedOutfit = {}

	for _, id in ipairs(cd.inventory.worn) do
		table.insert(storedOutfit, id)
		send("remove " .. id, false)
	end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^undress$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Redress</name>
					<script>if storedOutfit == nil or storedOutfit == {} then
	notify("The system doesn't have a stored outfit for you. You're outta luck.")
	return
end

for _, id in ipairs(storedOutfit) do
	send("wear " .. id, false)
end

storedOutfit = nil</script>
					<command></command>
					<packageName></packageName>
					<regex>^redress$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Disregarding On/Off</name>
					<script>send("config disregarding " .. matches[2], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^d(on|off)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Currency Reports</name>
					<script>local reports = {
	["c"] = "credit",
	["i"] = "ironcoin",
	["cu"] = "currency",
}

send(reports[matches[2]] .. " report", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(c|i|cu)r$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Housewho</name>
					<script>send("housewho", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^hw$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Godfeelings</name>
					<script>send("godfeelings", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^gf$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Return to Haven</name>
					<script>send("return to haven", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^hav$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Relic - Shark's Teeth</name>
					<script>sendStack("chomp %s" % matches[2], "regrow teeth")</script>
					<command></command>
					<packageName></packageName>
					<regex>^chomp (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Claim All Milestones</name>
					<script>if not claimable_milestones or table.size(claimable_milestones) &lt; 1 then
  notify("Milestones", "Type &lt;a_red&gt;MC&lt;a_grey&gt; to check your milestones before claiming them.")
  return
end

local to_claim = {}
for id, _ in pairs(claimable_milestones) do
  table.insert(to_claim, "milestone claim %s" % id)
end

sendStack(to_claim)</script>
					<command></command>
					<packageName></packageName>
					<regex>^mc all$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Input Hooks</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Inventory (GMCP)</name>
					<script>RefreshInventory()
send(matches[1], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:i|inv|inventory)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>WHO Lists (GMCP)</name>
					<script>RefreshPlayers()
checkWhoDuplicates = true
send(matches[1], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:qw|bw|who|qwho|bwho)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Cache (GMCP)</name>
					<script>RefreshCache()
send(matches[1], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^ic$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Enter</name>
					<script>-- This special alias will try various guildhall actions and other
-- tidbits based on where you are. Otherwise, it just enters the
-- enter command.

if cd.room.num == 13023 then
	-- Cabalist GH entrance.
	sendStack("touch ef'tig", "touch rafic", "touch yi")
elseif cd.room.num == 11426 then
	-- Cabalist GH exit.
	send("touch diagram", false)
elseif cd.room.num == 43675 then
	-- Shaman GH entrance.
	send("staffraise ivaryen", false)
elseif cd.room.num == 14481 then
  -- Sciomancer GH entrance.
  send("touch 79001", false)
elseif cd.room.num == 22035 then
  -- Sciomancer GH exit.
  send("touch 140783", false)
else
	send(matches[1], false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^enter$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Prompt Override Commands</name>
					<script>-- These commands need to temporarily disable the custom prompt, as they cause the game to output certain wonky things.
overridePrompt = true
send(matches[1], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^lookup .*$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Learn Lessons</name>
					<script>autoLearnAmount = matches[2]
autoLearnSkill = matches[3]
autoLearnTutor = matches[4]

send(matches[1], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^a(?:uto)?learn (\d+) (.+) from (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>City Funds</name>
					<script>checkCityFunds = true
neededTreasuryFunds = nil

cityFunds = {}
for _, min in ipairs({"ambassador", "war", "security", "chancellor", "trade", "culture", "development", "research"}) do
	cityFunds[min] = 0
end

send(matches[1], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^funds$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Fix City Funds</name>
					<script>if cd.player.city == nil or cd.player.city == "" then
	send(matches[1], false)
	return
end

local city = cd.player.city

if aetolia.city_funds[city] == nil then
	send(matches[1], false)
	return
end

local min_priority = {
	[1] = "research",
	[2] = "chancellor",
	[3] = "war",
	[4] = "trade"
}

local fund_actions = {}

for min, _ in pairs(aetolia.city_funds[city]) do
	local m = aetolia.city_funds[city][min].ministry
	local b = aetolia.city_funds[city][min].budget
	local f = cityFunds[m]

	if m ~= "treasurer" then
		if f &lt; b then
			fund_actions[#fund_actions + 1] = "allocate " .. (b - f) .. " to " .. m
			if neededTreasuryFunds ~= nil and neededTreasuryFunds &gt; 0 then
				neededTreasuryFunds = neededTreasuryFunds + (b - f)
			end
		end
	end
end

if neededTreasuryFunds ~= nil and neededTreasuryFunds &gt; 0 then
	local log_entry = "Reappropriated funds from "
	local needed_mins = {}
	for _, min in ipairs(min_priority) do
		local g = cityFunds[min]
		if g &gt; 0 then
			if g &gt;= neededTreasuryFunds then
				g = neededTreasuryFunds
			end

			fund_actions[#fund_actions + 1] = "allocate " .. g .. " from " .. min
			neededTreasuryFunds = neededTreasuryFunds - g
			needed_mins[#needed_mins + 1] = min:title()
			if neededTreasuryFunds &lt;= 0 then
				break
			end
		end
	end

	log_entry = log_entry .. table.concat(needed_mins, ", ") .. " to make up for Treasury defecit."
	fund_actions[#fund_actions + 1] = "writelog revenue " .. log_entry
end

sendStack(fund_actions)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:fix\s?funds|funds\s?fix)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Drinking</name>
					<script>local drink = matches[2]

if drink ~= nil then
	currentlyDrinking = drink
	notify("Type DRINK to drink from item " .. drink .. ".", false)
	send(matches[1], false)
elseif currentlyDrinking ~= nil then
	send("drink " .. currentlyDrinking, false)
else
	notify("You don't seem to be drinking anything.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^drink(?:| (\d+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Relic Skills</name>
					<script>-- Because RELIC SKILLS and the in-game map share the same header trigger,
-- this is necessary to prevent the display's output from being funneled to
-- the map capture window.
relic_bypass = true
send(matches[1], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^relic skills$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Writing with Color Reminder</name>
					<script>sendStack("colours", matches[1])</script>
					<command></command>
					<packageName></packageName>
					<regex>^write .*$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Batch Actions</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Generic Batcher</name>
					<script>if string.find(matches[3], "#") == nil then
	notify("You must insert a &lt;yellow&gt;# &lt;grey&gt;token if you want to apply your action to the batched items.")
else
	local items = string.split(matches[2], ",")
	local action = string.split(matches[3], "|")
	for i,v in ipairs(action) do
		action[v] = v:trim()
	end
	for i,item in ipairs(items) do
		for i,act in ipairs(action) do
			local action2 = act:gsub("#", item)
			send(action2, false)
		end
	end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^b\[(.+)\](.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Act On All Players</name>
					<script>if #cd.playersHere &lt; 1 then
	notify("The system doesn't recognize any players in the room.")
	return
end

local act = matches[2]
local p_list = {}
for _, pl in ipairs(cd.playersHere) do
	table.insert(p_list, act .. " " .. pl)
end

sendStack(p_list)</script>
					<command></command>
					<packageName></packageName>
					<regex>^pall\|(.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Get All</name>
					<script>local getlist = {}
for id, _ in pairs(cd.room.all_replicas) do
  table.insert(getlist, "get %s" % id)
end

sendStack(getlist)</script>
					<command></command>
					<packageName></packageName>
					<regex>^get\s?all$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>God Controls</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="no" isFolder="no">
					<name>Roomtext Posing</name>
					<script>if matches[2]:match("^item") ~= nil then
	send(matches[1], false)
elseif isGod() then
	if matches[2] == "none" or matches[2] == "clear" then
		send("config roomtext clear", false)
	else
		send("config roomtext " .. matches[2], false)
	end
else
	send(matches[1], false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^pose (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Graffiti</name>
					<script>local colorList = {
	["darkred"] = "1",
	["darkgreen"] = "2",
	["brown"] = "3",
	["darkblue"] = "4",
	["darkmagenta"] = "5",
	["darkcyan"] = "6",
	["grey"] = "7",
	["darkgrey"] = "8",
	["red"] = "9",
	["green"] = "10",
	["yellow"] = "11",
	["blue"] = "12",
	["magenta"] = "13",
	["cyan"] = "14",
	["white"] = "15",
}

local color = matches[2]
local msg = matches[4]

if color == "clear" or color == "none" then
	send("graffiti clear", false)
elseif tonumber(color) ~= nil then
	send("graffiti " .. color .. " " .. msg, false)
elseif colorList[color] then
	send("graffiti " .. colorList[color] .. " " .. msg, false)
else
	notify("Graffiti", "Invalid color option. Use a number or color name.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^graffiti ([a-zA-Z0-9]+)(| (.+))$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Autobless</name>
					<script>autoBlessings = true
send("offerings list", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^autobless$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Quick CSAY</name>
					<script>sendAll("csay", matches[2], "~s", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^cs (.+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Curing</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Drink Health/Mana</name>
					<script>if matches[2] == "h" then
	if isUndead() == true then
		send("stick analeptic", false)
	else
		send("drink health", false)
	end
else
	if isUndead() == true then
		send("stick stimulant", false)
	else
		send("drink mana", false)
	end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^d(h|m)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Touch Tree</name>
					<script>send("touch tree", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^tt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Renew</name>
					<script>if isEndgame() == true then
	send(getRenewCommand(), false)
else
	send(matches[1], false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^ren$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>General Combat</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>[!] Targetting</name>
					<script>cd.target = matches[2]

cecho("&lt;a_darkgrey&gt;\[&lt;a_red&gt;+&lt;a_darkgrey&gt;\] &lt;a_grey&gt;Target: &lt;a_darkred&gt;" .. cd.target:title() .. "&lt;a_grey&gt;.")
send("\n")

changeTarget(cd.target, true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^t (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Tunnelvision Off</name>
					<script>send("tunnelvision off", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^toff$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Hammer Tattoo</name>
					<script>send("touch hammer " .. getTarget(), false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^ham$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Web Tattoo</name>
					<script>if matches[2] then
	if matches[2] == "invite" or matches[2] == "accept" or matches[2] == "quit" or matches[2] == "members" then
		send(matches[1], false)
		return
	end
end

local t = matches[2] or getTarget()

send("touch web " .. t, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^web(?:\s(\w+))?$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Enemy Tracking</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Clear Enemy Status</name>
						<script>enemy.reset()</script>
						<command></command>
						<packageName></packageName>
						<regex>^ec$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Change Limb Weights</name>
					<script>local weight_types = {
  legs  = {head = 0,   torso = 0,   left_arm = 0,  right_arm = 0,    left_leg = 1,   right_leg = 1},
  arms  = {head = 0,   torso = 0,   left_arm = 1,   right_arm = 1,   left_leg = 0,   right_leg = 0},
  left  = {head = 0.5, torso = 0.5, left_arm = 1,   right_arm = 0.5, left_leg = 1,   right_leg = 0.5},
  right = {head = 0.5, torso = 0.5, left_arm = 0.5, right_arm = 1,   left_leg = 0.5, right_leg = 1},
  la    = {head = 1,   torso = 0,   left_arm = 1,   right_arm = 0,   left_leg = 1,   right_leg = 1},
  ra    = {head = 1,   torso = 0,   left_arm = 0,   right_arm = 1,   left_leg = 1,   right_leg = 1},
  h     = {head = 1,   torso = 0,   left_arm = 0,   right_arm = 0,   left_leg = 0,   right_leg = 0},
  t     = {head = 0,   torso = 1,   left_arm = 0,   right_arm = 0,   left_leg = 0,   right_leg = 0},
}

if not weight_types[matches[2]] and matches[2] ~= "c" then
  notify("Unrecognized limb weight scheme.")
  return
end

if matches[2] == "c" then
  temp_limb_weights = nil
else
  temp_limb_weights = weight_types[matches[2]]
end
notify("Limb weights changed to mode &lt;a_red&gt;" .. matches[2]:upper() .. "&lt;a_grey&gt;. Current limb priority is:")
echo("     ")
for i, l in ipairs(get_limb_weights()) do
  l = l:us_space()
  cecho(" &lt;a_darkgrey&gt;[&lt;a_darkcyan&gt;%s&lt;a_darkgrey&gt;] &lt;a_grey&gt;%s" % {i, l:title()})
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^lw (\w+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Defenses</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>[!] All Defenses Up</name>
					<script>if cd.player.race == "Yeleni" then
	send("warmth", false)
elseif cd.player.race == "Azudim" then
	send("miasma", false)
elseif cd.player.race == "Idreth" then
	send("safeguard", false)
end

sendStack("dodge melee", "touch allsight", "nightsight", "insomnia")

if cd.player.name == "Lin" then
	send("thirdeye", false)
else
	send("outc acuity|eat acuity", false)
end

raiseClassDefenses()</script>
					<command></command>
					<packageName></packageName>
					<regex>^defup$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Inventory</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>List Worn Clothing</name>
					<script>local id, name, wearslot

if not cd.inventory.worn or #cd.inventory.worn &lt; 1 then
	notify("Inventory", "Either you're naked, or the system doesn't know what you're wearing.")
	return
end

moduleHeader("Inventory")

for i,v in ipairs(cd.inventory.worn) do
	id = v
	name = cd.inventory.contents[id].name
	wearslot = cd.inventory.contents[id].wearslot

	cecho("\n&lt;a_darkcyan&gt;" .. string.space(8 - id:len()) .. id .. " &lt;a_darkgrey&gt;\| &lt;a_grey&gt;" .. name)
	if wearslot then
		cecho("\n         &lt;a_darkgrey&gt;\| " .. wearslot)
	end
end

moduleFooter()</script>
					<command></command>
					<packageName></packageName>
					<regex>^inv\.worn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>List Wearables</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex>^inv\.wear(able)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>List Containers</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex>^inv.con(tainers)?$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Web Browsing</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Open Webpage</name>
					<script>local pages = {
	["webolc"] = "http://www.aetolia.com/irex/webolc/home.php",
	["help"] = "http://www.aetolia.com/irex/helpfiles/list.php?group=public",
	["forums"] = "http://forums.aetolia.com",
	["plug"] = "http://plug.dj/aetolia",
	["manual"] = "http://www.aetolia.com/irex/site/webolc/manual.html",
	["mpos"] = "http://www.aetolia.com/irex/mpos/",
	["asana"] = "https://app.asana.com/0/9793641772764/9793641772764",
}

-- Set up some synonyms in case we're stupid and forget.
pages.helpfiles = pages.help
pages.helpfile = pages.help
pages.prog = pages.webolc
pages.progs = pages.webolc
pages.log = pages.mpos
pages.logs = pages.mpos

local dest = matches[2]:lower()

if not pages[dest] then
	notify("Web Browsing", "That page has no defined shortcut.")
	return
end

openUrl(pages[dest])</script>
					<command></command>
					<packageName></packageName>
					<regex>^\.web (\w+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>General Skills</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Ylemnics</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Inspect</name>
						<script>if not my_thaumizer then
  notify("Ylemnics", "Thaumizer not detected. Check your inventory first.")
  return
end

local detailed = ""
if matches[2] then detailed = " details" end
send("inspect %s%s" % {my_thaumizer, detailed}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ti(d)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Move</name>
						<script>if not my_thaumizer then
  notify("Ylemnics", "Thaumizer not detected. Check your inventory first.")
  return
end

local before, after = matches[2], matches[3]

send("tweak %s %s to %s" % {my_thaumizer, before, after}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^tm (\w+) (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Output</name>
						<script>if not my_thaumizer then
  notify("Ylemnics", "Thaumizer not detected. Check your inventory first.")
  return
end

local pos, dir = matches[2], matches[3]

send("tweak %s %s out %s" % {my_thaumizer, pos, dir}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^to (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Value</name>
						<script>if not my_thaumizer then
  notify("Ylemnics", "Thaumizer not detected. Check your inventory first.")
  return
end

local pos, val = matches[2], matches[3]

send("tweak %s %s val %s" % {my_thaumizer, pos, val}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^tv (\w+) ([\d\-]+)$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Area Sensing</name>
					<script>if isMonk() then
	send("fullsense", false)
elseif isWayfarer() then
  send("wayfare bloodscan", false)
else
	send("scent", false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^fs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Player Sensing</name>
					<script>tar = matches[3] or getTarget()

if isMonk() == true then
	send("mind sense " .. tar, false)
elseif isTemplar() == true then
	send("aura glance " .. tar, false)
elseif cd.player.class == "Sciomancer" then
	send("cast scry " .. tar, false)
elseif isShaman() == true then
	send("grove look " .. tar, false)
elseif isWayfarer() == true then
	send("wayfare orient " .. tar, false)
elseif isZealot() == true then
  send("psi locate " .. tar, false)
else
	send(matches[1], false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^sense(| (\w+))$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Deafness/Blindness</name>
					<script>if isMonk() == true then
	send(matches[1], false)
elseif isUndead() == true then
	if matches[2] == "deaf" then
		cd.eat("heart")
	else
		cd.eat("stomach")
	end
else
	if matches[2] == "deaf" then
		cd.eat("hawthorn")
	else
		cd.eat("bayberry")
	end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^(deaf|blind)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Refining Shell</name>
					<script>if matches[2] == "on" then
	send("refining shell", false)
else
	send("refining cease", false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^shell (on|off)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Resurrection</name>
					<script>local name = matches[2]
local cmd

if isTemplar() == true then
	cmd = "aura resurrection"
end

if cmd ~= nil then
	send(cmd .. " " .. name, false)
else
	notify("No suitable resurrection command available.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^rez (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Eye Sigils</name>
					<script>sendStack("wield eyesigil", "qeb throw eyesigil at ground")</script>
					<command></command>
					<packageName></packageName>
					<regex>^eye$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Shield Tattoo</name>
					<script>send("touch shield", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^tsh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Shackle Eld</name>
					<script>send("refining shackle eld", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^shack$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Leylines</name>
					<script>send("leylines", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^ll$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Extraction</name>
					<script>send("extraction", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^ext$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Detection (Toggle)</name>
					<script>local toggle = "on"
if matches[2] == "off" then toggle = "off" end

send("detection %s" % toggle, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^det(on|off)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Class Aliases</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="no" isFolder="yes">
					<name>CA - Monk</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>[!] Limb Attacks</name>
						<script>if matches[1] == "areas" then
	send(matches[1], false)
	return
end

local type = matches[2]
local feint = matches[3]
local tar = matches[4]

if feint and not tar then -- Feint, no target.
	MonkCombo(type, getTarget(), true)
elseif feint and tar then -- Feint, target.
	MonkCombo(type, tar, true)
elseif not feint and not tar then -- No feint, target.
	MonkCombo(type, tar, false)
else
	MonkCombo(type, getTarget(), false)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^a(r|h|t|la|ra|ll|rl|n|s|sl|sr|bl|2l|2a|x|tr|tl|sh)\s?(f)?(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Mind Hallucinate</name>
						<script>send("mind hallucinate " .. matches[2], false)
mindHallucinateText = matches[2]</script>
						<command></command>
						<packageName></packageName>
						<regex>^mh (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Default Stance</name>
						<script>if isMonk() then
	defaultMonkStance = matches[2]
	notify("Default stance set to &lt;a_green&gt;" .. defaultMonkStance:upper() .. "&lt;a_grey&gt;.", false)
	send(matches[2], false)
else
	send(matches[1], false)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(hrs|egs|cts|brs|rts|cbs|tgs|wfs|phs|drs|scs)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[!] Monk Attacks</name>
						<script>local cmds = {
	["bat"] = "mind batter",
	["enf"] = "kai enfeeble",
	["crp"] = "kai cripple",
	["ban"] = "kai banish",
	["dsr"] = "mind disrupt",
	["ter"] = "mind terror",
	["dead"] = "mind deadening",
	["blank"] = "mind blank",
	["cla"] = "mind clamp",
	["mpush"] = "mind push",
}

local command = cmds[matches[2]] or matches[2]
local tar = matches[3] or getTarget()

send(command .. " " .. tar)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(bbt|bat|enf|crp|ban|dsr|wrt|ter|dead|blank|cla|mpush)(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Jumpkick</name>
						<script>local tar = matches[2] or getTarget()

sendStack("jpk " .. tar, "hfp " .. tar .. " left", "hfp " .. tar .. " right")</script>
						<command></command>
						<packageName></packageName>
						<regex>^jpk(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Deliverance</name>
						<script>send("kai deliverance", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^del$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Mind Lock - Initiate</name>
						<script>local tar = matches[2] or getTarget()

mindLockTarget = tar

send("mind lock " .. tar)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(?:ml|mind lock)(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Mind Lock - Dissolve</name>
						<script>send("mind dissolve", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^md$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Mind Lock - Cease</name>
						<script>send("mind cease", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^mce$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Kai Boost</name>
						<script>send("kai boost", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^kb$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Combo - Kai Generation</name>
						<script>local tar = getTarget()
if matches[2] then tar = matches[2] end

send("combo " .. tar .. " slt blp blp", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^akai(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Kai Strike</name>
						<script>local tar = matches[4] or getTarget()

local dir, limb
if matches[2] == "l" then dir = "left" else dir = "right" end
if matches[3] == "a" then limb = "arm" else limb = "leg" end

send("kai strike " .. tar .. " " .. dir .. " " .. limb, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ks(l|r)(a|l)(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Kai Heal</name>
						<script>if matches[2] == "s" then send("kai heal self") else send("kai heal all") end</script>
						<command></command>
						<packageName></packageName>
						<regex>^kh(s|a)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Kai Trance</name>
						<script>if matches[2] == "k" then
	send("kai trance", false)
else
	send("break trance", false)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(k|b)t$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Kai Recursion</name>
						<script>send("kai recursion", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^kr$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Break Recursion</name>
						<script>send("break recursion", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^br$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[!] Arms Route</name>
						<script>raiseEvent("monk arms route")</script>
						<command></command>
						<packageName></packageName>
						<regex>^arms$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[!] Legs Route</name>
						<script>local attack_string = ""

if AFFThaveAffliction(AFF_SHIELD) then
	attack_string = "combo " .. aff_tracker.target .. " sck hfp left hfp right"
elseif AFFThaveAffliction(AFF_PRONE) and AFFThaveAffliction(AFF_HEAD_MANGLED) then
	attack_string = "combo " .. aff_tracker.target .. " axk hfp left hfp right"
elseif AFFThaveAffliction(AFF_PRONE) and not AFFThaveAffliction(AFF_WRITHE_IMPALED) then
	if not AFFThaveAffliction(AFF_LEFT_LEG_BROKEN) then
		attack_string = "combo " .. aff_tracker.target .. " wrt left leg hfp right hfp right"
	elseif not AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
		attack_string = "combo " .. aff_tracker.target .. " wrt right leg hfp right hfp right"
	elseif AFFThaveAffliction(AFF_LEFT_LEG_BROKEN) and AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
		attack_string = "combo " .. aff_tracker.target .. " wrt left leg hfp right hfp right"
	end
elseif not AFFThaveAffliction(AFF_PRONE) or AFFThaveAffliction(AFF_WRITE_IMPALED) then
	if not AFFThaveAffliction(AFF_LEFT_LEG_DAMAGED) and AFFThaveAffliction(AFF_RIGHT_LEG_DAMAGED) then
		attack_string = "combo " .. aff_tracker.target .. " snk left hfp left hfp right"
	elseif AFFThaveAffliction(AFF_LEFT_LEG_DAMAGED) and not AFFThaveAffliction(AFF_RIGHT_LEG_DAMAGED) then
		attack_string = "combo " .. aff_tracker.target .. " snk right hfp left hfp left"
	elseif not AFFThaveAffliction(AFF_LEFT_LEG_DAMAGED) and not AFFThaveAffliction(AFF_RIGHT_LEG_DAMAGED) then
		attack_string = "combo " .. aff_tracker.target .. " snk right hfp left hfp left"
	elseif AFFThaveAffliction(AFF_LEFT_LEG_DAMAGED) and AFFThaveAffliction(AFF_RIGHT_LEG_DAMAGED) then
		attack_string = "combo " .. aff_tracker.target .. " snk left hfp left hfp right"
	end
end

send("qeb " .. attack_string, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^legs$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>[!] Torso/Head</name>
						<script>local attack_string = ""
if AFFThaveAffliction(AFF_SHIELD) then
	attack_string = "combo " .. aff_tracker.target .. " sck hkp ucp"
elseif AFFThaveAffliction(AFF_PRONE) and AFFThaveAffliction(AFF_HEAD_MANGLED) then
	attack_string = "combo " .. aff_tracker.target .. " axk ucp ucp"
elseif AFFThaveAffliction(AFF_LEFT_LEG_DAMAGED) and AFFThaveAffliction(AFF_RIGHT_LEG_DAMAGED) and not AFFThaveAffliction(AFF_WRITHE_IMPALED) and AFFThaveAffliction(AFF_LEFT_ARM_DAMAGED) and AFFThaveAffliction(AFF_RIGHT_ARM_DAMAGED) then
	attack_string = "combo " .. aff_tracker.target .. " wrt head ucp ucp"
elseif not AFFThaveAffliction(AFF_HEAD_DAMAGED) and AFFThaveAffliction(AFF_TORSO_DAMAGED) then
	attack_string = "combo " .. aff_tracker.target .. " wwk hkp hkp"
elseif AFFThaveAffliction(AFF_HEAD_DAMAGED) and not AFFThaveAffliction(AFF_TORSO_DAMAGED) then
	attack_string = "combo " .. aff_tracker.target .. " sdk ucp ucp"
elseif not AFFThaveAffliction(AFF_HEAD_DAMAGED) and not AFFThaveAffliction(AFF_TORSO_DAMAGED) then
	attack_string = "combo " .. aff_tracker.target .. " sdk ucp ucp"
end

send("qeb " .. attack_string, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^head$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Numbness</name>
						<script>setQueueOverride("numb", true)</script>
						<command></command>
						<packageName></packageName>
						<regex>^nu?mb?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>CA - Archivist</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Fixation/Return</name>
						<script>if cd.player.class == "Cabalist" then
	local n = matches[2]
	if n == "fix" then n = "fixation" end
	send("elicit " .. n, false)
else
	send(matches[1], false)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(fix|return)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Tweak/Disturb</name>
						<script>if cd.player.class ~= "Archivist" then
	send(matches[1], false)
	return
end

local att = matches[2]
local effect = "sanity" -- Default value for failsafe.
local s = tonumber(matches[3])

local tweaks = {
	[1] = "sanity",
	[2] = "confidence",
	[3] = "inhibition",
	[4] = "impulse",
}

if att == "t" then att = "tweak" else att = "disturb" end
effect = tweaks[s]

cd.class.Archivist.lastTweak = effect

send("elicit " .. att .. " " .. getTarget() ..  " " .. effect, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(t|d)([1-4])$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>CA - Templar</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Pilgrimage</name>
						<script>if matches[2] == "here" then
	send("aura latency", false)
elseif matches[2] == "ret" then
	send("aura pilgrimage aura", false)
elseif matches[2] == "off" then
	send("aura latency off", false)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^pilg (here|ret|off)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>CA - Shapeshifter</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>[!] Limb Attacks</name>
						<script>if matches[1] == "areas" then
	send(matches[1], false)
	return
end

local type = matches[2]
local tar = matches[4]

tar = tar or getTarget()

LycanCombo(type, getTarget(), false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^a(r|h|t|la|ra|ll|rl|n|s|sl|sr|bl|2l|2a|x|tr|tl)\s?(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Flurry</name>
						<script>local tar = matches[2] or getTarget()

send("flurry " .. tar, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^fl(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Good ol' Jugular</name>
						<script>local t = matches[2] or getTarget()
send("qeb combo %s jugular jugular" % {t}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^jg(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Neckdrag</name>
						<script>local tar = matches[2] or getTarget()

local random_exit = cd.room.exits_dir[math.random(#cd.room.exits_dir)]

send("neckdrag " .. tar .. " " .. random_exit, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^nd(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Charge</name>
						<script>local tar = matches[2] or getTarget()

send("charge " .. tar, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^chg(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Track</name>
						<script>local tar = matches[2] or getTarget()

send("track " .. tar, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^tra(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Leg Attack</name>
						<script>local attack_string = ""

if AFFThaveAffliction(AFF_LEFT_LEG_DAMAGED) and not AFFThaveAffliction(AFF_LEFT_LEG_MANGLED) then
   attack_string = "destroy left leg of " .. getTarget()
elseif AFFThaveAffliction(AFF_LEFT_LEG_BROKEN) and not AFFThaveAffliction(AFF_LEFT_LEG_DAMAGED) then
   attack_string = "mangle left leg of " .. getTarget()
elseif AFFThaveAffliction(AFF_RIGHT_LEG_DAMAGED) and not AFFThaveAffliction(AFF_RIGHT_LEG_MANGLED) then
   attack_string = "destroy right leg of " .. getTarget()
elseif AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) and not AFFThaveAffliction(AFF_RIGHT_LEG_DAMAGED) then
   attack_string = "mangle right leg of " .. getTarget()
elseif not AFFThaveAffliction(AFF_LEFT_LEG_BROKEN) and not AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
   attack_string = "combo " .. getTarget() .. " hamstring left hamstring right"
elseif not AFFThaveAffliction(AFF_LEFT_LEG_BROKEN) and AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
   attack_string = "combo " .. getTarget() .. " bodypunch hamstring left"
elseif AFFThaveAffliction(AFF_LEFT_LEG_BROKEN) and not AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
   attack_string = "combo " .. getTarget() .. " bodypunch hamstring right"
end

send("qeb " .. attack_string)</script>
						<command></command>
						<packageName></packageName>
						<regex>^legs?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Arm Attack</name>
						<script>local attack_string = ""

if AFFThaveAffliction(AFF_LEFT_ARM_DAMAGED) and not AFFThaveAffliction(AFF_LEFT_ARM_MANGLED) then
   attack_string = "destroy left arm of " .. getTarget()
elseif AFFThaveAffliction(AFF_LEFT_ARM_BROKEN) and not AFFThaveAffliction(AFF_LEFT_ARM_DAMAGED) then
   attack_string = "mangle left arm of " .. getTarget()
elseif AFFThaveAffliction(AFF_RIGHT_ARM_DAMAGED) and not AFFThaveAffliction(AFF_RIGHT_ARM_MANGLED) then
   attack_string = "destroy right arm of " .. getTarget()
elseif AFFThaveAffliction(AFF_RIGHT_ARM_BROKEN) and not AFFThaveAffliction(AFF_RIGHT_ARM_DAMAGED) then
   attack_string = "mangle right arm of " .. getTarget()
elseif not AFFThaveAffliction(AFF_LEFT_ARM_BROKEN) and not AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
   attack_string = "combo " .. getTarget() .. " rend left rend right"
elseif not AFFThaveAffliction(AFF_LEFT_ARM_BROKEN) and AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
   attack_string = "combo " .. getTarget() .. " bodypunch rend left"
elseif AFFThaveAffliction(AFF_LEFT_ARM_BROKEN) and not AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
   attack_string = "combo " .. getTarget() .. " bodypunch rend right"
end

send("qeb " .. attack_string)</script>
						<command></command>
						<packageName></packageName>
						<regex>^arms?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Stun Attack</name>
						<script>local attack_string = "combo " .. getTarget() .. " bodypunch "

if not AFFThaveAffliction(AFF_LEFT_LEG_BROKEN) then
   attack_string = attack_string .. "hamstring left"
elseif not AFFThaveAffliction(AFF_RIGHT_LEG_BROKEN) then
   attack_string = attack_string .. "hamstring right"
elseif not AFFThaveAffliction(AFF_RIGHT_ARM_BROKEN) then
   attack_string = attack_string .. "rend left"
elseif not AFFThaveAffliction(AFF_LEFT_ARM_BROKEN) then
   attack_string = attack_string .. "rend left"
elseif AFFThaveAffliction(AFF_HEAD_DAMAGED) then
   attack_string = "combo " .. getTarget() .. " skullwhack skullwhack"
else
   attack_string = "combo " .. getTarget() .. " jugular jugular"
end

send("qeb " .. attack_string, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^stun$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Prepare to Flurry</name>
						<script>send("prepare to flurry", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ptf$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Destroy</name>
						<script>local dir = matches[2]
if dir == "r" then dir = "right" else dir = "left" end
local limb = matches[3]
if limb == "a" then limb = "arm" else limb = "leg" end

send("destroy %s %s of %s" % {dir, limb, getTarget()}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^d(l|r)(a|l)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Mangle</name>
						<script>local dir = matches[2]
if dir == "r" then dir = "right" else dir = "left" end
local limb = matches[3]
if limb == "a" then limb = "arm" else limb = "leg" end

send("mangle %s %s of %s" % {dir, limb, getTarget()}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^m(r|l)(a|l)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>AI Mode!</name>
						<script>local att
local r = matches[2]

if r == "gg" then
  att = cd.ClassRoutes.Shapeshifter.group()
elseif r == "bb" then
  att = cd.ClassRoutes.Shapeshifter.bloody()
else
  att = cd.ClassRoutes.Shapeshifter.standard()
end

local parry = getParry()

send("%s|qeb %s" % {parry, att}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(ff|gg|bb)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>CA - Shaman</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Emergence (Remove Teradrim Sand)</name>
						<script></script>
						<command>nature emergence</command>
						<packageName></packageName>
						<regex>^sand$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Thorncoat</name>
						<script>local t = matches[2] or "me"

send("nature thorncoat " .. t, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^coat(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Panacea</name>
						<script></script>
						<command>nature panacea</command>
						<packageName></packageName>
						<regex>^pp$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Rejuvenate (Remove Necromancy Taint)</name>
						<script>send("nature rejuvenate", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^rejuv(?:enate)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Forestbrand</name>
						<script>local t = matches[2] or getTarget()

send("nature forestbrand " .. t, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^brand(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Whisper</name>
						<script>local t, m = matches[2], matches[3]

send("grove whisper " .. t .. " " .. m, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^whis(?:per)? (\w+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Eyes</name>
						<script></script>
						<command>grove eyes</command>
						<packageName></packageName>
						<regex>^eyes$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Fertility</name>
						<script></script>
						<command>grove fertility</command>
						<packageName></packageName>
						<regex>^fertility$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Return</name>
						<script></script>
						<command>grove return</command>
						<packageName></packageName>
						<regex>^gret(?:urn)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Everbloom</name>
						<script></script>
						<command>grove everbloom</command>
						<packageName></packageName>
						<regex>^(?:ever)?bloom$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Annihilation</name>
						<script></script>
						<command>grove annihilation</command>
						<packageName></packageName>
						<regex>^anni(?:hilation)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Greenfoot</name>
						<script>send("nature greenfoot " .. matches[2], false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^gf(on|off)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Overgrowth</name>
						<script>send("nature overgrowth", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^grow$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Release Overgrowth</name>
						<script>if matches[2] == "all" then
	send("nature release", false)
else
	send("nature release here", false)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^gr(all|off)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Grove Cage</name>
						<script>send("grove " .. matches[2], false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(cage|uncage)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Vinelash</name>
						<script>local t = matches[2] or getTarget()

send("commune vinelash " .. t, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^lash(?:\s(\w+))?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>CA - Wayfarer</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>AI Mode!</name>
						<script>local att
local r = matches[2]

if r == "gg" then
  att = cd.ClassRoutes.Wayfarer.group()
else
  att = cd.ClassRoutes.Shapeshifter.standard()
end

local parry = getParry()

send("%s|qeb %s" % {parry, att}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(ff|gg)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>CA - Syssin</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Worm Sources</name>
						<script>send("worm sources", false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^ws$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Conjuring</name>
						<script>local c = {
  g = "ghost",
  c = "cloak",
  d = "darkflood",
}

send("conjure %s" % {c[matches[2]]}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^c(g|c|d)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Garrote</name>
						<script>local t = matches[2] or getTarget()

send("garrote %s" % {t}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^gg(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Illusions</name>
						<script>local arg = matches[2]
local illusion = matches[3]

if arg == "cin" then illusion = "nobody " .. illusion end

send("conjure illusion %s" % {illusion}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(ci|cin) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Yank</name>
						<script>local t = matches[2] or getTarget()

send("yank %s" % {t}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^yy(?:\s(\w+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Abduct</name>
						<script>local t = matches[2] or getTarget()

send("abduct %s" % {t}, false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^aa(?:\s(\w+))?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="no" isFolder="yes">
					<name>CA - Zealot</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Queue Controls</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Queue Action</name>
					<script>send("qeb " .. matches[2], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^q\s(.+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Questing</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Quest Action</name>
					<script>local choice = tonumber(matches[2])

if #cd.questActions == 0 then
	iecho("No quest actions available.")
	send("\n")
end

if not choice then
	for i, act in ipairs(cd.questActions) do
		send(act, false)
	end
elseif not cd.questActions[choice] then
	iecho("That is not a valid quest action.")
	send("\n")
else
	send(cd.questActions[choice], false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^qa(?:\s?(\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Quest Info</name>
					<script>cd.GetQuestInfo(getCleanAreaName(cd.room.area))</script>
					<command></command>
					<packageName></packageName>
					<regex>^qinfo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Chaos Plane - Tattoo Manipulation</name>
					<script>-- nunyo</script>
					<command></command>
					<packageName></packageName>
					<regex>^cpt (\w+)(?:| (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Chaos Plane - Many Manipulation</name>
					<script>-- nothin to see here</script>
					<command></command>
					<packageName></packageName>
					<regex>^cps (\w+) (\w+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Map</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Room Info (Room Look)</name>
					<script>local n = cd.room.num or 0
local env = cd.room.env
local e_color = cd.map.environInfo[env].color or "a_red"
local r_name = tostring(getRoomName(n)):truncate(56)
local tokens = {
	["indoors"] = {["value"] = cd.room.indoors, ["abbr"] = "INDR", ["color"] = "light_slate_grey"},
	["sandy"] = {["value"] = cd.room.sandy, ["abbr"] = "SAND", ["color"] = "light_goldenrod"},
	["water"] = {["value"] = cd.room.water, ["abbr"] = "WATR", ["color"] = "light_slate_grey"},
	["shop"] = {["value"] = cd.room.shop, ["abbr"] = "$$$$", ["color"] = "light_slate_grey"},
	["library"] = {["value"] = cd.room.library, ["abbr"] = "LBRY", ["color"] = "light_slate_grey"},
	["darkness"] = {["value"] = cd.room.darkness, ["abbr"] = "DARK", ["color"] = "light_slate_grey"},
	["light"] = {["value"] = cd.room.light, ["abbr"] = "LITE", ["color"] = "light_slate_grey"},
	["underwater"] = {["value"] = cd.room.underwater, ["abbr"] = "UNDW", ["color"] = "light_slate_grey"},
	["overgrowth"] = {["value"] = cd.room.overgrowth, ["abbr"] = "OVGR", ["color"] = "light_slate_grey"},
	["bank"] = {["value"] = cd.room.bank, ["abbr"] = "BANK", ["color"] = "light_slate_grey"},
}

moduleHeader("room information", "mapping", "room look")

cecho("\n&lt;a_brown&gt; Room # &lt;a_white&gt;" .. tostring(n):jleft(7) .. "&lt;a_grey&gt;" .. r_name:jleft(56) .. "&lt;a_blue&gt;X: &lt;a_darkgrey&gt;" .. tostring(cd.room.coordinates.x):jright(4))
cecho("\n&lt;a_brown&gt; Loc.   &lt;a_white&gt;" .. tostring(cd.room.areaID):jleft(7) .. "&lt;a_grey&gt;" .. cd.room.area:jleft(56) .. "&lt;a_blue&gt;Y: &lt;a_darkgrey&gt;" .. tostring(cd.room.coordinates.y):jright(4))

local token_string = ""
for t, _ in pairs(tokens) do
	local val = tokens[t].value
	local abbr = tokens[t].abbr
	local color = tokens[t].color

	if val ~= true then
		color = "dead_grey"
	end

	token_string = token_string .. "&lt;" .. color .. "&gt;" .. abbr .. "  "
end

cecho("\n " .. token_string .. string.space(10) .. "&lt;a_blue&gt;Z: &lt;a_darkgrey&gt;" .. tostring(cd.room.coordinates.z):jright(4))

moduleFooter()
send("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^rlook$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Custom Map</name>
					<script>cd.map.draw()</script>
					<command></command>
					<packageName></packageName>
					<regex>^mmap$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Get Area Info</name>
					<script>areaEnvironmentSurvey(cd.room.areaID)</script>
					<command></command>
					<packageName></packageName>
					<regex>^a(?:rea)?\s?info$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Environment Search</name>
					<script>areaFindEnvironments(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^env (.+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Mercantile</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Market Spam</name>
					<script>local msg = matches[2]

if not msg or msg == "" or msg == " " or msg == "off" or msg == "clear" then
	marketSpam = nil
	notify("No longer broadcasting to the Market channel.")
else
	marketSpam = msg
	notify("You will now periodically broadcast to the Market channel with the message:\n&lt;a_darkgrey&gt;\"" .. msg .. "\"")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^marketspam(?:\s(.*))?$</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Curative Production</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="no" isFolder="yes">
						<name>Concoctions</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Designate Brewing Pot</name>
							<script>cd.concoctions.brewPot = matches[2]
notify("Concoctions", "You will use &lt;a_darkgreen&gt;pot&lt;a_green&gt;" .. cd.concoctions.brewPot .. " &lt;a_grey&gt;for all brewing purposes.")</script>
							<command></command>
							<packageName></packageName>
							<regex>^brew\.pot (\d+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Auto-brew Concoction</name>
							<script>local input = matches[2]

if input:match("^pot") then return end

if input:match("%d+ %w+") ~= nil then
	local q = input:match("(%d+) %w+")
	local x = input:match("%d+ (%w+)")
	cd.concoctions.BrewConcoction(x, q)
else
	cd.concoctions.BrewConcoction(matches[2])
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^brew\.(.+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Apothecary</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Begin Part Collection</name>
							<script>raiseEvent("part collection begin", matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^co (.+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Audit Cache</name>
							<script>local comm_list = {
  heart = "aureliana",
  bone = "witzatl",
  claw = "dun",
  fat = "morass",
  feather = "pash",
  intestines = "scidve",
  leg = "attica",
  horn = "eithmia",
  powder = "fractalbloom",
  sac = "snakepit",
  scales = "djeir",
  skin = "snakepit",
  snakeoil = "snakepit",
  tail = "huanazedha",
  testicle = "wtundra",
  tooth = "torston",
  wing = "attica",
  dust = "????",
  berberis = "herbalism",
  kava = "herbalism",
  waterhyssop = "herbalism",
  ylemshard = "research",
}

if not cd.cache or table.size(cd.cache) == 0 then
  notify("Cache not detected. Enter &lt;a_red&gt;IC&lt;a_grey&gt; to store your cache data, first.")
  return
end

local needed_comms = {}

for comm in pairs(comm_list) do
  local needed = 200
  if not cd.cache[comm] then
    needed_comms[comm] = needed
  elseif cd.cache[comm] &lt; needed then
    needed_comms[comm] = needed - cd.cache[comm]
  end
end

moduleHeader("Apothecary", "ingredient tracker")

cecho("\n&lt;a_grey&gt;You are low on the following ingredients:\n\n  &lt;a_darkgrey&gt;Comm            Amt. Needed   Location")

for comm, amt in pairs(needed_comms) do
  local loc = comm_list[comm]
  cecho("\n  &lt;a_darkcyan&gt;%s&lt;a_grey&gt;%s%s" % {comm:jleft(16), tostring(amt):jleft(14), loc})
end

moduleFooter()</script>
							<command></command>
							<packageName></packageName>
							<regex>^acache$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Toxicology Milking</name>
					<script>sendStack("outc 2 sac", "milk %s into fluidcache" % matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^milk (.+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Misc.</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Transcribe Book to File</name>
					<script>local page = 1
local book = matches[2]

if matches[3] then
	page = matches[3]
end

getBookByPage(book, page)</script>
					<command></command>
					<packageName></packageName>
					<regex>^savebook ([a-z0-9]+)(?:| (\d+))?$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Aetolia API Interaction</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>API Password</name>
					<script>API.SetPassword(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^apipassw?o?r?d? (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>API - Characters Online</name>
					<script>API.RequestCharacters()</script>
					<command></command>
					<packageName></packageName>
					<regex>^apichara?c?t?e?r?s?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>API - News</name>
					<script>API.RequestNews()</script>
					<command></command>
					<packageName></packageName>
					<regex>^apinews$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>API - News (Section)</name>
					<script>API.RequestNews(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^apinews (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>API - News (Section, Article)</name>
					<script>API.RequestNews(matches[2], matches[3])</script>
					<command></command>
					<packageName></packageName>
					<regex>^apinews (\w+) (\d+)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>API - Gamefeed</name>
					<script>API.RequestFeed()</script>
					<command></command>
					<packageName></packageName>
					<regex>^apifeed$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>API - Org Logs</name>
					<script>API.RequestOrgLogs()</script>
					<command></command>
					<packageName></packageName>
					<regex>^apilogs?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>API - Org Logs (Org)</name>
					<script>API.RequestOrgLogs(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^apilogs? (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>API - Messages</name>
					<script>API.RequestMessages()</script>
					<command></command>
					<packageName></packageName>
					<regex>^apimessa?g?e?s?$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Exploration</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Show Exploration</name>
					<script>local a_list = getVisitedAreas()

moduleHeader("Exploration", "area breakdown")

local i = 0
local a_count = 0 -- Total areas.
local ca_count = 0 -- Total completed areas.
local expl_table = ""

for area, amt in pairsByKeys(a_list) do
  a_count = a_count + 1
  local ec = "a_white"
  local ac = "a_darkgrey"
  if amt &lt;= 35 then
    ec = "red"
  elseif amt &lt;= 50 then
    ec = "orange_red"
  elseif amt &lt;= 85 then
    ec = "orange"
  elseif amt == 100 then
    ec = "a_green"
    ac = "a_grey"
    ca_count = ca_count + 1
  end

  local nl = ""
  if i % 3 == 0 then
    nl = "\n"
  end

  amt = tostring(amt)
  area = area:truncate(33)

  expl_table = expl_table .. "%s  &lt;%s&gt;%s%% &lt;%s&gt;%s" % {nl, ec, amt:jright(3), ac, area:jleft(33)}
  i = i + 1
end

cecho("\n  &lt;a_white&gt;%s &lt;a_blue&gt;/ &lt;a_white&gt;%s &lt;a_grey&gt;areas completed." % {ca_count, a_count})

cecho("\n" .. expl_table)

moduleFooter()</script>
					<command></command>
					<packageName></packageName>
					<regex>^explo?r?e?d?$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Modules</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Blumenkranz</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Blumenkranz Interface</name>
					<script>cecho("       &lt;dark_orange&gt;|")
cecho("\n &lt;dark_orange&gt;-  -- &lt;white&gt;o &lt;slate_grey&gt;B L U M E N K R A N Z &lt;dark_orange&gt;--  -")
cecho("\n       &lt;dark_orange&gt;|")

echo("\n")

for i, v in ipairs({"Lust", "Rage", "Greed", "Fear"}) do
	local actual_perc = math.random(100)
	perc = math.floor((actual_perc * 60) / 100)

	cecho("\n" .. string.rep(" ", 8 - v:len()) .. "&lt;dim_grey&gt;" .. v .. " &lt;a_red&gt;"
	..	string.rep("|", perc) .. string.rep(" ", 60 - perc) .. "&lt;gold&gt;" .. actual_perc .. "&lt;dark_goldenrod&gt;%")
end

local stuff = [[
  The malice of Ios influences you.
  The spring season brings with it fear and the promises of food.

  You are experiencing intense violent urges.
  You feel the insatiable need to tear someone apart.
  You are unimaginably thirsty.
  Thoughts of heat and wetness course through your mind.
  You are feeling somewhat paranoid.
]]

	cecho("&lt;grey&gt;\n\n" .. stuff)

send("\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^b(?:lumen)?kranz$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Chumhandle Generator</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Make a Handle!</name>
					<script>chg.MakeHandle()</script>
					<command></command>
					<packageName></packageName>
					<regex>^generate chumhandle$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Crafting Convenience</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>[Input Hook] Capture Default Design</name>
					<script>-- This is the only hook that will allow the original command to filter through,
-- so as to avoid repeats.

raiseEvent("ccv.update_working_design", matches[2])
send(matches[1], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^design (\d+).*$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>[Input Hook] Capture Lone Design Verb</name>
					<script>local stack = "design"

if ccv.ValidWorkingDesign() then
	stack = stack .. ccv.separator .. "design " .. ccv.working_design
end

send(stack, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^design$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Streamlined Components/Ingredients</name>
					<script>local components = matches[2]:split(" ")

if not ccv.ValidWorkingDesign() then
	ccv.NoDesignWarning()
	return
end

local stack = "design " .. ccv.working_design .. " add 1 " .. table.concat(components, ccv.separator .. "design " .. ccv.working_design .. " add 1 ")
send(stack, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^dadd (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Design Parameter Shortcuts</name>
					<script>  -- So as to avoid overriding certain commands.
if matches[1]:match("^date") then
	send(matches[1], false)
	return
end

if not ccv.ValidWorkingDesign() then
	ccv.NoDesignWarning()
	return
end

local expanded_commands = {
	["id"] = "identity",
	["ap"] = "appearance",
	["dr"] = "dropped",
	["ex"] = "examined",
	["at"] = "attire",
	["w1p"] = "worn 1p",
	["w3p"] = "worn 3p",
	["r1p"] = "removed 1p",
	["r3p"] = "removed 3p",
	["sm"] = "smell",
	["e1p"] = "eaten 1p",
	["e3p"] = "eaten 3p",
	["ta"] = "taste",
}

local shortcut = matches[2]

local input = matches[3]

if input == nil then
	input = ""
end

send("design " .. ccv.working_design .. " " .. expanded_commands[shortcut] .. input, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^d(id|ap|dr|ex|at|w1p|w3p|r1p|r3p|sm|e1p|e3p|ta)(.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Submit!</name>
					<script>if not ccv.ValidWorkingDesign() then
	ccv.NoDesignWarning()
	return
end

send("design " .. ccv.working_design .. " submit", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^dsub$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Design Clear</name>
					<script>if not ccv.ValidWorkingDesign() then
	ccv.NoDesignWarning()
	return
end

send("design " .. ccv.working_design .. " clearcomponents", false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^dclear$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Design Copy</name>
					<script>local pattern = matches[2]

-- Check if extant working design.
if not ccv.ValidWorkingDesign() then
	ccv.NoDesignWarning()
	return
end

-- Check if word supplied is valid pattern type.
if not ccv.r_designs[pattern] then
	ccv.NoPatternWarning()
	return
end

-- DEBUG: See if the pattern has more than one registered identity.
if #ccv.r_designs[pattern] &gt; 1 then
	ccv.Notify("This design has multiple identity IDs: " .. table.concat(ccv.r_designs[pattern], ", ") .. ".")
end

local pattern_id = ccv.r_designs[pattern][1]

send("design " .. ccv.working_design .. " copy " .. pattern_id, false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^dcopy (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Generic Design Commands</name>
					<script>local full_cmd = {
	list = "list",
	req = "request",
}

send("design " .. full_cmd[matches[2]], false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^d(list|req)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Breakdown</name>
				<script>

send(matches[1], false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^b(unenemy|enemy|unally|ally) (\w+)$</regex>
				<Alias isActive="yes" isFolder="no">
					<name>BD: Enemy Modification</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Trawler</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Fishing Go</name>
					<script>local results = get_fishing_holes(matches[2], true)
if #results == 1 then
	notify("Trawler", "Pathing to " .. results[1].name .. ".")
	results[1].rooms = results[1].rooms or {}

	if #results[1].rooms &lt;= 0 then
		notify("Trawler", "That fishing hole has no rooms saved. Aborting.")
		return
	else
		send("path find " .. results[1].rooms[1], false)
	end

	if gmcp.Char.Vitals.mounted == "0" then
		send("path go", false)
	else
		send("path go gallop", false)
	end

else
	notify("Trawler", "Please specify a unique fishing location.\n")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^fgo (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Fishing Start</name>
					<script></script>
					<command>queue bal fishing cast</command>
					<packageName></packageName>
					<regex>^fish$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Fishing Search</name>
					<script>get_fishing_holes(matches[3], true, (matches[2] ~= ""))
</script>
					<command></command>
					<packageName></packageName>
					<regex>^fishing search\s*(full|info)*\s*(.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle Autofishing</name>
					<script>if auto_fish then
	auto_fish = false
	if currently_fishing then send("queue bal fishing cut") end
	notify("Trawler", "Autofishing disabled.")
else
	auto_fish = true
	if not currently_fishing then send("queue bal fishing cast") end
	notify("Trawler", "Autofishing enabled.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^afish$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<Script isActive="yes" isFolder="no">
			<name>System Initialize</name>
			<packageName></packageName>
			<script>-- Mudlet configuration.
mudlet = mudlet or {}
mudlet.mapper_script = true

-- Establish the core for [Challenger Deep].
cd = cd or {}
loadVars()
setConsoleBufferSize("main", 1000000, 1000)

-- Failsafe GMCP module loading in case the login event is bypassed (from reconnection, etc.).
sendGMCP('Core.Supports.Add ["IRE.Rift"]')
sendGMCP('Core.Supports.Add ["Comm.Channel 1"]')
sendGMCP('Core.Supports.Add ["IRE.Time"] 1')

-- Failsafe for the mapper, so input doesn't get stuck in the map window if you close the game out on some invalid state.
disableTrigger("Map Capture Line")</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>Save Data</name>
			<packageName></packageName>
			<script>-- Master script for handling of important persistent variables.
cd.SaveVars = function ()
	remember("color_table")
  remember("exploration")

	saveVars()
end</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>Lua Library Extensions</name>
			<packageName></packageName>
			<script>-- String

getmetatable("").__mod = function(a, b)
	if not b then
		return a
  elseif type(b) == "table" then
    return string.format(a, unpack(b))
  else
    return string.format(a, b)
  end
end

local noTitleWords = {
	"a", "an", "the", "and", "of", "in"
}

local strip_cecho_tokens = function (str)
  return str:gsub("&lt;[%w_]+&gt;", "")
end

string.title = function (str)
	if type(str) == "string" then
		str = str:gsub("([a-zA-Z']+)", function (word)
			if table.contains(noTitleWords, word) == false or word == str:match("^%w+") then
				word = string.upper(word:sub(1, 1)) .. string.lower(word:sub(2, -1))
				return word
			end
		end)
		return str
	else
	return str
	end
end

string.right = function (str)
	str = tostring(str)
	return string.rep(" ", cd.sys.wrapWidth - string.len(str)) .. str
end

string.center = function (str)
	str = tostring(str)
	return string.rep(" ", (cd.sys.wrapWidth / 2) - math.round(string.len(str) / 2)) .. str
end

string.trim = function (str)
	str = tostring(str)
	return str:gsub("^%s*(.-)%s*$", "%1")
end

string.space = function (x)
	x = x or 0
	return string.rep(" ", x)
end

string.truncate = function (str, n)
	str = tostring(str)

	if str:len() &gt; n then
		return str:sub(1, n - 3) .. "..."
	else
		return str
	end
end

string.wrap = function (str, limit, indent, indent1, tail)
	indent = indent or ""
	indent1 = indent1 or indent
	limit = limit or cd.sys.wrapWidth
	tail = tail or ""

	local here = 1 - #indent1
	return indent1 .. str:gsub("(%s+)()(%S+)()", function(sp, st, word, fi)
		if fi - here &gt; limit then
			here = st - #indent

			return "\n" .. indent .. word
		end
	end)
end

string.wrap2 = function(str, maxLen, ind, dec)
	-- str: The message.
	-- maxLen: Column the message can write to.
	-- ind: How many spaces to indent the message by.
	-- dec: Decoration. Should be a string only.

	maxLen = maxLen or 72
	ind = ind or 0
	dec = dec or ""
	local endDec = dec
	if dec == "[" then endDec = "]"
		elseif dec == "\(" then endDec = "\)"
		elseif dec == "\&lt;" then endDec = "\&gt;"
		elseif dec == "\{" then endDec = "\}"
	end

	local decSpace = ind - (dec:len() + 1)
	if decSpace &lt; 1 then decSpace = 1 end

	-- Output is a table into which lines of text are stored.
	local output = {
		[1] = ""
	}

	-- Break the string apart.
	str = str:split(" ")

	-- Create the head of the string.
	if dec ~= "" then
		table.insert(str, 1, string.space(decSpace) .. dec .. " ")
	elseif ind == 0 then
		table.insert(str, 1, "")
	else
		table.insert(str, 1, string.space(ind))
	end

	-- Form lines based on string length.
	local length = 0
	local line = 1
	for i, txt in ipairs(str) do
		local l = txt:len()
		if i &gt; 2 then l = l + 1 end -- To account for the space.
		length = length + l
		if length &lt;= maxLen then
			if i &gt; 2 then
				output[line] = output[line] .. " " .. txt
			else
				output[line] = output[line] .. txt
			end
		else
			-- New line.
			length = l + ind
			line = line + 1
			output[line] = string.space(ind) .. txt
		end
	end

	-- Put the end decoration on the tail.
	if endDec ~= "" then
		output[line] = output[line] .. string.space(maxLen - string.len(output[line])) .. endDec
	end

	return table.concat(output, "\n")
end

string.jleft = function (str, amt)
	str = tostring(str)

	if not str then error("No string passed to string.jleft().") end
	if not amt or amt &lt; 0 then amt = 0 end

  local len = strip_cecho_tokens(str):len()
	return str .. string.rep(" ", amt - len)
end

string.jright = function (str, amt)
	str = tostring(str)

	if not str then error("No string passed to string.jright().") end
	if not amt or amt &lt; 0 then amt = 0 end

  local len = strip_cecho_tokens(str):len()
	return string.rep(" ", amt - len) .. str
end

string.jcenter = function (str, amt)
	str = tostring(str)

	if not str then error("No string passed to string.jright().") end
	if not amt or amt &lt; 0 then amt = 0 end

  local len = strip_cecho_tokens(str):len()
	local space = amt - len
	local cut1 = math.round(space / 2)
	local cut2 = space - cut1
	return string.rep(" ", cut1) .. str .. string.rep(" ", cut2)
end

string.stripANSI = function (str)
  return str:gsub(string.char(27) .. "%[[%d;]+m", "")
end

string.underscore = function (str)
  return str:gsub("%s", "_")
end

string.us_space = function (str)
  return str:gsub("_", " ")
end

-- Table

table.shuffle = function (t)
	assert(t, "table.shuffle() expected a table, got nil")
	local newTable = t
	local iterations = #newTable
	local j
    
	for i = iterations, 2, -1 do
		j = math.random(i)
		newTable[i], newTable[j] = newTable[j], newTable[i]
	end

	return newTable
end

pairsByKeys = function (t, f)
	local a = {}

	for n in pairs(t) do
		table.insert(a, n)
	end

	table.sort(a, f)
	local i = 0
	local iter = function ()
		i = i + 1
		if a[i] == nil then
			return nil
		else
			return a[i], t[a[i]]
		end
	end

	return iter
end

function spairs(t, order)
  -- collect the keys
  local keys = {}
  for k in pairs(t) do keys[#keys+1] = k end

  -- if order function given, sort by it by passing the table and keys a, b,
  -- otherwise just sort the keys 
  if order then
    table.sort(keys, function(a,b) return order(t, a, b) end)
  else
    table.sort(keys)
  end

  -- return the iterator function
  local i = 0
  return function()
    i = i + 1
    if keys[i] then
      return keys[i], t[keys[i]]
    end
  end
end

table.sentence = function (t)
	assert(t, "table.sentence() expected a table, got nil.")

	local table_string = ""

	if #t == 0 then return "" end
	if #t == 1 then return t[1] end

	for i = 1, #t do
		local append = " "

		if #t &gt; 2 then append = "," .. append end
		if i == #t then append = append .. "and " end
		if i ~= 1 then table_string = table_string .. append end

		table_string = table_string .. t[i]
	end

	return table_string
end

-- Math

math.round = function (num, idp)
	local mult = 10 ^ (idp or 0)
	return math.floor(num * mult + 0.5) / mult
end</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>Color Extension</name>
			<packageName></packageName>
			<script>-- Standard MU* colors.
color_table.a_darkred = {128, 0, 0}
color_table.a_darkgreen = {0, 179, 0}
color_table.a_brown = {128, 128, 0}
color_table.a_darkblue = {0, 0, 128}
color_table.a_darkmagenta = {128, 0, 128}
color_table.a_darkcyan = {0, 128, 128}
color_table.a_grey = {192, 192, 192}
color_table.a_darkgrey = {128, 128, 128}
color_table.a_red = {255, 0, 0}
color_table.a_green = {0, 255, 0}
color_table.a_yellow = {255, 255, 0}
color_table.a_blue = {0, 85, 255}
color_table.a_magenta = {255, 0, 255}
color_table.a_cyan = {0, 255, 255}
color_table.a_white = {255, 255, 255}

-- Very dark colors.
color_table.dead_grey = {18, 27, 27}
color_table.dead_brown = {34, 23, 6}
color_table.dead_green = {0, 51, 0}
color_table.dead_red = {51, 0, 0}
color_table.dead_blue = {0, 0, 51}
color_table.dead_yellow = {34, 34, 0}
color_table.dead_magenta = {34, 6, 34}
color_table.dead_cyan = {6, 34, 34}

-- System colors.
color_table.cd_dark = {25, 25, 112}
color_table.cd_light = {30, 144, 255}
color_table.cd_bright = {255, 69, 0}

-- Prompt colors.
color_table.p_hp = color_table.p_hp or {255, 0, 0}
color_table.p_mp = color_table.p_mp or {255, 0, 0}
color_table.p_end = color_table.p_end or {255, 0, 0}
color_table.p_will = color_table.p_will or {255, 0, 0}
color_table.p_eq = color_table.p_eq or {199, 21, 133}
color_table.p_bal = color_table.p_bal or {65, 105, 225}
color_table.p_ab = color_table.p_ab or {205, 40, 205}
color_table.p_sync = color_table.p_sync or {255, 255, 255}

-- Curative colors.
color_table.c_pill = color_table.c_pill or {143, 188, 143}
color_table.c_poultice = color_table.c_poultice or {184, 134, 11}
color_table.c_pipe = color_table.c_pipe or {147, 112, 219}
color_table.c_elixir = color_table.c_elixir or {64, 224, 208}
color_table.c_anabiotic = color_table.c_moss or {178, 34, 34}
color_table.c_special = color_table.c_special or {205, 130, 0}

-- Special colors for chat replacers, etc.
-- See Scripts: Challenger Deep --&gt; API --&gt; Color API
color_table.darker = {255, 255, 255}
color_table.lighter = {255, 255, 255}
color_table.temp = color_table.temp or {255, 0, 255}

-- color_table.test = return {math.random(255), math.random(255), math.random(255)}</script>
			<eventHandlerList />
		</Script>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Style Sheet</name>
			<packageName>QDarkStyleSheet</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Style Sheet - Challenger Deep</name>
				<packageName></packageName>
				<script>setProfileStyleSheet([[
	QMenuBar {
    background-color: #003;
    color: #07f;
    font-family: Terminus \(TTF\) for Windows;
    font-size: 14px;
    border: none;
  }
	QMenuBar::item:selected {
    background-color: #003;
    color: #0ff;
  }

  TConsole QWidget {font-family: Terminus \(TTF\) for Windows; font-size: 14px;}
	TConsole QScrollBar:vertical {background: #000; width: 14px;}
	TConsole QScrollBar::handle:vertical {background-color: #000; min-height: 50px; border-left: 1px solid #04a;}
  TConsole QScrollBar::handle:vertical:hover {background-color: #07f; min-height: 50px;}
	TConsole QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {background: none; height: 0px;}
	TConsole QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {background: none;}
  TConsole QPlainTextEdit {
    background-color: #000;
    border: none;
    font-family: Terminus \(TTF\) for Windows;
    font-size: 14px;
    padding-left: 44px;
    padding-right: 160px;
  }
  TConsole QLineEdit {
    background-color: #000;
    border: none;
    font-family: Terminus \(TTF\) for Windows;
    font-size: 12px;
    color: #FFF;
  }
  TConsole QToolButton {background-color: #000; border: none;}
  TConsole QToolButton:hover {background-color: #07f;}
  TConsole QToolButton:focus {background-color: #07f;}
]])</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Mudlet Standard Stuff</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>deleteOldProfiles</name>
				<packageName>deleteOldProfiles</packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>deleteOldProfiles</name>
					<packageName></packageName>
					<script>function deleteOldProfiles(keepdays_arg, delete_maps)

--[[
	Deletes old profiles/maps in the "current"/"map" folders of the Mudlet home directory.
	The following files are NOT deleted:
	- Files newer than the amount of days specified as an argument to deleteOldProfiles(), or 31 days if not specified.	
	- One file for every month before that. Specifically: The first available file of every month prior to this.
	Setting the second argument to true will delete maps instead of profiles. (e.g. deleteOldProfiles(10, true))
--]]

	local keepdays = tonumber(keepdays_arg) or 31
	local profile_table = {}
	local used_last_mod_months = {}
	local slash = (string.char(getMudletHomeDir():byte()) == "/") and "/" or "\\"
	local dirpath = getMudletHomeDir()..slash..(delete_maps and "map" or "current")
	local delnum = 0

	-- Traverse the profiles folder and create a table of files:
	for filename in lfs.dir(dirpath) do
		if filename~="." and filename~=".." then
			profile_table[#profile_table+1] = {name = filename, last_mod = lfs.attributes(dirpath..slash..filename, "modification")}
		end
	end

	-- Sort the table according to last modification date from old to new:
	table.sort(profile_table, function (a,b) return a.last_mod &lt; b.last_mod end)

	echo(string.format("\nDeleting old %s. Files newer than %d days and one profile for every month before that will be kept.", delete_maps and "maps" or "profiles", keepdays))
	for i,v in ipairs(profile_table) do
		local days = math.floor(os.difftime(os.time(), v.last_mod)/86400)
		local last_mod_month = os.date("%Y/%m", v.last_mod)
		if days &gt; keepdays then
			-- For profiles older than X days, check if we already kept a table for this month:
			if not table.contains(used_last_mod_months, last_mod_month) then
				-- If not, do nothing and mark this month as "kept".
				used_last_mod_months[#used_last_mod_months+1] = last_mod_month
			else
				-- Otherwise remove the file:
				local success, errorstring = os.remove(dirpath..slash..v.name)
				if success then
					delnum = delnum + 1
				else
					cecho("\n&lt;red&gt;ERROR: "..errorstring)
				end
			end
		end
	end
	echo(string.format("\nDeletion complete. %d/%d files were removed successfully.", delnum, #profile_table))
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Challenger Deep</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>[!] Table Initialize</name>
				<packageName></packageName>
				<script>-- This table master script ensures that all Challenger Deep tables are
-- initialized properly, to keep Lua from throwing a shitfit.

local stamp = os.clock()

cd.player = cd.player or {
  init = true
}

if cd.player.init == true then
  cd.player.init = nil

	for _, v in ipairs({"HP", "MP", "END", "WIL", "XP"}) do
		cd.player[v] = { ["current"] = 1, ["max"] = 1, ["percent"] = 100 }
	end

	for _, v in ipairs({"guild", "order", "city", "class", "restoring", "race"}) do
		cd.player[v] = "none"
	end

	for _, v in ipairs({"gold", "last_gold", "bank", "level", "residual"}) do
		cd.player[v] = 0
	end

	cd.player.title = {["prefix"] = "", ["suffix"] = ""}
  
  cd.player.limb = {}
  for _, v in ipairs({"head", "torso", "left_arm", "right_arm", "left_leg", "right_leg"}) do
    cd.player.limb[v] = 0
  end
end

cd.room = cd.room or {
	["contents"] = {}, ["mobs"] = {}, ["all_replicas"] = {},
	["num"] = 0,
	["desc"] = "",
	["name"] = "Unknown",
	["env"] = "Unknown",
	["area"] = "Unknown",
	["library"] = false,
	["shop"] = false,
	["bank"] = false,
	["coordinates"] = {["x"] = 0, ["y"] = 0, ["z"] = 0},
	["exits"] = {},
	["exits_dir"] = {},
  ["hidden_exits"] = {},
  ["hidden_exits_dir"] = {},
	["areaID"] = 0,
  ["last_mob"] = "",
}

cd.combatMessage = cd.combatMessage or {
	["skill"] = "",
	["message"] = "",
	["caster"] = "",
	["target"] = ""
}

cd.balances = cd.balances or {
	["renew"] = true,
	["elixir"] = true,
	["moss"] = true,
	["focus"] = true,
	["pipe"] = true,
	["tree"] = true,
	["salve"] = true,
	["herb"] = true,
	["affelixir"] = true
}

cd.frame = cd.frame or {
	["parameters"] = {},
	["draw"] = {},
	["update"] = {},
}

cd.frame.winX, cd.frame.winY = getMainWindowSize()

cd.target = cd.target or "nothing"

cd.modules = cd.modules or {
	["autostand"] = true,
	["curing"] = true,
	["enemyaffs"] = false,
	["autodef"] = false,
	["autobashing"] = false,
	["superbashing"] = false,
	["apothecarybashing"] = false,
}

cd.cure = cd.cure or {
	["pipes"] = {
		["elm"] = {["id"] = 0, ["uses"] = 10, ["lit"] = true},
		["valerian"] = {["id"] = 0, ["uses"] = 10, ["lit"] = true},
		["skullcap"] = {["id"] = 0, ["uses"] = 10, ["lit"] = true}
	}
}

cd.time = cd.time or {
	["bal"] = {
		["duration"] = 0,
	},
	["eq"] = {
		["duration"] = 0,
	},
  ["ab"] = {
    ["duration"] = 0,
  }
}

for i = 1, 9 do
	disableKey(tostring(i) .. " (hotkey)")
end

cd.hotKeys = cd.hotKeys or {
	[1] = false,
	[2] = false,
	[3] = false,
	[4] = false,
	[5] = false,
	[6] = false,
	[7] = false,
	[8] = false,
	[9] = false,
}

cd.date = cd.date or {
	["day"] = "Unknown",
	["date"] = "????",
	["month"] = "Unknown",
	["year"] = "???"
}

cd.players = cd.players or {
	["all"] = {}
}

cd.comm = cd.comm or {
	["source"] = "None",
	["channel"] = "None",
	["text"] = "...",
}

cd.clock = cd.clock or {
	["phase"] = "Unknown",
	["day"] = 0,
	["month"] = 0,
	["year"] = 0,
	["desc"] = "None",
	["period"] = 0,
}

cd.enemy = cd.enemy or {
  name = "None",
  afflictions = {},
  defenses = {},
  limbs = {
    ["left_leg"] = 0,
    ["right_leg"] = 0,
    ["left_arm"] = 0,
    ["right_arm"] = 0,
    ["torso"] = 0,
    ["head"] = 0,
  },
  balances = {
    anabiotic = stamp,
    affelixir = stamp,
    pill = stamp,
    endgame = stamp,
    elixir = stamp,
    tree = stamp,
    poultice = stamp,
    focus = stamp,
    pipe = stamp,
  },
  last = {
    parry = "None",
    affliction = "None",
    venom = "None",
    defense = "None",
    cured_affliction = "None",
    void_affliction = "None",
    pill_aff = "None",
    endgame_aff = "None",
    elixir_aff = "None",
    tree_aff = "None",
    poultice_aff = "None",
    focus_aff = "None",
    pipe_aff = "None",
    cured_limb = "None",
    limb_damage = 0,
    attacked_limb = "None",
    resto_limb = nil,
  },
  parry = nil,
  class = "None",
  prone = 0,
  shield = true,
  rebounding = true,
  asleep = false,
  unconscious = false,
}

-- Generic tables.
for _,v in ipairs({"def", "leyline", "bashing", "queue", "afflictions", "throttle",
	"channelInfo", "buffs", "attacks", "concoctions", "class", "frame",
	"inventory", "cache", "channels", "exits", "playersHere", "skills", "inventory",
	"sys", "afflictions", "defenses", "status", "questActions", "map", "waypoints",
	"actions"}) do
	cd[v] = cd[v] or {}
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>System Information</name>
				<packageName></packageName>
				<script>cd.sys.name = "Challenger Deep"
cd.sys.shortname = "CD"
cd.sys.version = "0.5"
cd.sys.wrapWidth = 120

getSysName = function ()
	return cd.sys.name
end

getSysVersion = function ()
	return cd.sys.version
end</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Events</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Mudlet</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>handleMudletEvents</name>
						<packageName></packageName>
						<script>local DataSendRequestHandler = function (...)
	if cd.sys.pause == true then
		denyCurrentSend()
   end
end

local TelnetEventHandler = function (...)
end

local ExitEventHandler = function (...)
end

local LoadEventHandler = function (...)
end

local DownloadDoneHandler = function (...)
  if api_post_download ~= nil then
    local f = io.open(getMudletHomeDir() .. "/files/api/" .. api_post_download)
    local json = f:read("*all")
    display(yajl.to_value(json))
    f:close()
    
    api_post_download = nil
  end
end

local DownloadErrorHandler = function (err)
  notify("Mudlet", "Download error: &lt;a_red&gt;%s&lt;a_grey&gt;." % err)
  api_post_download = nil
end

handleMudletEvents = function (e, ...)
	debugecho("Mudlet raised " .. e .. ".")
	if e == "sysDataSendRequest" then
		DataSendRequestHandler(...)
	elseif e == "sysTelnetEvent" then
		TelnetEventHandler(...)
	elseif e == "sysExitEvent" then
		ExitEventHandler(...)
	elseif e == "sysLoadEvent" then
		LoadEventHandler(...)
  elseif e == "sysDownloadDone" then
    DownloadDoneHandler(...)
  elseif e == "sysDownloadError" then
    DownloadErrorHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>sysDataSendRequest</string>
							<string>sysTelnetEvent</string>
							<string>sysExitEvent</string>
							<string>sysLoadEvent</string>
							<string>sysDownloadDone</string>
							<string>sysDownloadError</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>GMCP</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>handleCharTable</name>
						<packageName></packageName>
						<script>local shortstances = {
	["tiger"] = "tgs",
	["scorpion"] = "scs",
	["dragon"] = "drs",
	["phoenix"] = "phs",
	["cat"] = "cts",
	["horse"] = "hrs",
	["wolf"] = "wfs",
	["bear"] = "brs",
}

local CharStatusHandler = function ()
  for _, n in ipairs({"class", "name", "race"}) do
    cd.player[n] = gmcp.Char.Status[n]
  end

	cd.player.gold = tonumber(gmcp.Char.Status.gold)
	cd.player.bank = tonumber(gmcp.Char.Status.bank)
	cd.player.level = gmcp.Char.Status.level:match("^(%d+)")
	cd.player.level = tonumber(cd.player.level)

	cd.player.title = {["prefix"] = "", ["suffix"] = ""}
	local fullname = gmcp.Char.Status.fullname:split(cd.player.name)
	cd.player.title.prefix, cd.player.title.suffix = fullname[1], fullname[2]

	-- Flush out ugly values.
	for i,v in ipairs({"city", "order", "house", "guild", "class"}) do
		if gmcp.Char.Status[v] == "\(None\)" then
			cd.player[v] = "none"
		else
			cd.player[v] = gmcp.Char.Status[v]
		end
	end

	cd.player.last_gold = cd.player.last_gold or cd.player.gold

	if cd.player.last_gold ~= cd.player.gold then
		raiseEvent("gold changed", cd.player.last_gold, cd.player.gold)
	end
	cd.player.last_gold = cd.player.gold

	if cd.player.class ~= cd.player.last_class then
		raiseEvent("class change", cd.player.class)
	end

	cd.player.last_class = cd.player.class

	initStatus = true
	raiseEvent("ui.update")
end

local CharVitalsHandler = function ()
	-- Core stats.
	cd.player.HP.current = tonumber(gmcp.Char.Vitals.hp)
	cd.player.HP.max = tonumber(gmcp.Char.Vitals.maxhp)
	cd.player.MP.current = tonumber(gmcp.Char.Vitals.mp)
	cd.player.MP.max = tonumber(gmcp.Char.Vitals.maxmp)
	cd.player.END.current = tonumber(gmcp.Char.Vitals.ep)
	cd.player.END.max = tonumber(gmcp.Char.Vitals.maxep)
	cd.player.WIL.current = tonumber(gmcp.Char.Vitals.wp)
	cd.player.WIL.max = tonumber(gmcp.Char.Vitals.maxwp)

	local perc = tostring((cd.player.XP.current * 100 ) / cd.player.XP.max)
	local pre = perc:gsub("^([0-9]+)%.[0-9]+$", "%1")
	local suf = perc:gsub("^[0-9]+%.([0-9]+)$", "%1"):sub(1, 3)

	cd.player.XP = {
		["current"] = tonumber(gmcp.Char.Vitals.xp),
		["max"] = tonumber(gmcp.Char.Vitals.maxxp),
		["percent"] = pre .. "." .. suf
	}

	for k,v in ipairs({"HP", "MP", "END", "WIL"}) do
		cd.player[v]["percent"] = math.round((cd.player[v]["current"] * 100) / cd.player[v]["max"])
	end

	-- Secondary stats.
  for _, n in ipairs({
    "blood", "essence", "devotion", "spark", "energy", "residual", "momentum",
    "soul", "kai", "madness", "fury", "phased", "bio", "psi", "shadowprice"}) do
    cd.player[n] = tonumber(gmcp.Char.Vitals[n])
  end

	-- Defenses.
  cd.status.prone = gmcp.Char.Vitals.prone == "1"
  cd.status.elevation = gmcp.Char.Vitals.elevation
  cd.defenses.cloak = gmcp.Char.Vitals.cloak == "1"
  cd.defenses.fangbarrier = gmcp.Char.Vitals.fangbarrier == "1"
  cd.defenses.deafness = gmcp.Char.Vitals.deaf == "1"
  cd.defenses.blindness = gmcp.Char.Vitals.blind == "1"

	-- Misc.
  cd.player.undead = gmcp.Char.Status.status ~= "Living"
	cd.status.fullstance = gmcp.Char.Vitals.stance
	cd.status.stance = shortstances[cd.status.fullstance]
	cd.status.wieldL = gmcp.Char.Vitals.wield_left
	cd.status.wieldR = gmcp.Char.Vitals.wield_right
	cd.status.bleeding = tonumber(gmcp.Char.Vitals.bleeding)
	cd.status.writhing = gmcp.Char.Vitals.writhing == "1"
  cd.status.mounted = gmcp.Char.Vitals.mounted ~= "0"

	-- Primary balances.
	-- There's no reason to store these in the core cd table, other than that
	-- I want to emphasize their importance.
  cd.BAL = gmcp.Char.Vitals.balance == "1"
  cd.EQ = gmcp.Char.Vitals.equilibrium == "1"
  cd.LBAL = gmcp.Char.Vitals.left_arm == "1"
  cd.RBAL = gmcp.Char.Vitals.right_arm == "1"
  cd.ABBAL = gmcp.Char.Vitals.ability_bal == "1"

	-- Compare with previous values to raise appropriate events.
	for _, bal in ipairs({"BAL", "EQ", "LBAL", "RBAL", "ABBAL"}) do
		if cd["last_" .. bal] == false and cd[bal] == true then
			if bal == "BAL" then raiseEvent("on balance")
			elseif bal == "EQ" then raiseEvent("on equilibrium")
			elseif bal == "LBAL" then raiseEvent("on arm balance", "left")
			elseif bal == "RBAL" then raiseEvent("on arm balance", "right")
      elseif bal == "ABBAL" then raiseEvent("on ability balance")
			end
		end
	end

	-- Set new last values.
	cd.last_BAL = cd.BAL; cd.last_EQ = cd.EQ; cd.last_LBAL = cd.LBAL; cd.last_RBAL = cd.RBAL; cd.last_ABBAL = cd.ABBAL

	-- Secondary balances.
	for i,v in ipairs({"moss", "herb", "renew", "elixir", "affelixir", "focus", "salve", "pipe", "tree"}) do
    cd.balances[v] = gmcp.Char.Vitals[v] == "1"

		if cd.balances["last_" .. v] == false and cd.balances[v] == true then
			raiseEvent("on curing balance", v)
		end
		cd.balances["last_" .. v] = cd.balances[v]
	end

	initVitals = true
	raiseEvent("ui.update")
end

local CharNameHandler = function ()
	cd.player.name = gmcp.Char.Name.name
	cd.player.title = {["prefix"] = "", ["suffix"] = ""}
	local fullname = gmcp.Char.Name.fullname:split(cd.player.name)
	cd.player.title.prefix, cd.player.title.suffix = fullname[1], fullname[2]
end

handleCharTable = function (e, ...)
	debugecho("GMCP raised %s." % e)
	if e == "gmcp.Char.Status" then
		CharStatusHandler(...)
	elseif e == "gmcp.Char.Vitals" then
		CharVitalsHandler(...)
	elseif e == "gmcp.Char.Name" then
		CharNameHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.Char.Status</string>
							<string>gmcp.Char.Vitals</string>
							<string>gmcp.Char.Name</string>
							<string>gmcp.Char.Items</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleSkillsTable</name>
						<packageName></packageName>
						<script>local SkillsGroupsHandler = function (...)
	for t, v in pairs(gmcp.Char.Skills.Groups) do
		local skill = string.lower(gmcp.Char.Skills.Groups[t].name)
		local levelname = string.match(gmcp.Char.Skills.Groups[t].rank, "^(.+) %d+%%$")
		local levelpercent = string.match(gmcp.Char.Skills.Groups[t].rank, "^.+ (%d+)%%$")
		cd.skills[skill] = {["rank"] = levelname:lower(), ["level"] = tonumber(levelpercent)}
	end
end

local SkillsListHandler = function (...)
	local sname = string.lower(gmcp.Char.Skills.List.group)
	if not cd.skills[sname] then cd.skills[sname] = {["rank"] = "unknown", ["level"] = 0} end
	cd.skills[sname].list = gmcp.Char.Skills.List.list
	if cd.skills[sname].rank == "unknown" then
			error("GMCP passed information for " .. sname .. " skills list, but we didn't have an existing table for it.")
	end
end

handleSkillsTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.Char.Skills.Groups" then
		SkillsGroupsHandler(...)
	elseif e == "gmcp.Char.Skills.List" then
		SkillsListHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.Char.Skills.Groups</string>
							<string>gmcp.Char.Skills.List</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleRoomTable</name>
						<packageName></packageName>
						<script>local processMapData = function ()
	if cd.room.coordinates then
		setRoomCoordinates(cd.room.num, cd.room.coordinates.x, cd.room.coordinates.y, cd.room.coordinates.z)
	end

	if cd.room.godname then
		setRoomUserData(cd.room.num, "godname", cd.room.godname)
	end

	cd.room.areaID = getRoomArea(cd.room.num) or 0

	centerview(cd.room.num)
end

local RoomPlayersHandler = function ()
	cd.playersHere = {}
	for i, v in ipairs(gmcp.Room.Players) do
		if gmcp.Room.Players[i].name ~= cd.player.name then
			table.insert(cd.playersHere, gmcp.Room.Players[i].name)
		end
	end
end

local RoomAddPlayerHandler = function ()
	local name = gmcp.Room.AddPlayer.name
	if table.contains(cd.playersHere, name) ~= true then
		table.insert(cd.playersHere, name)
	end
end

local RoomRemovePlayerHandler = function ()
	local name
	if gmcp.Room.RemovePlayer.name then name = gmcp.Room.RemovePlayer.name
	elseif gmcp.Room.RemovePlayer then name = gmcp.Room.RemovePlayer end

	for i, v in ipairs(cd.playersHere) do
		if v == name then
			table.remove(cd.playersHere, i)
			break
		end
	end
end

local RoomInfoHandler = function ()
	cd.room.num = tonumber(gmcp.Room.Info.num) or 0
	cd.room.desc = gmcp.Room.Info.desc or ""
	cd.room.name = gmcp.Room.Info.name or "Unknown Room"
	cd.room.env = gmcp.Room.Info.environment:lower() or "Unknown Environment"
	cd.room.area = gmcp.Room.Info.area or "Unknown Area"

	-- Glean info from details table.
	for _,v in ipairs({"library", "shop", "bank", "indoors", "water", "underwater", "overgrowth", "sandy", "darkness", "light"}) do
		if table.contains(gmcp.Room.Info.details, v) == true then
			cd.room[v] = true
		else
			cd.room[v] = false
		end
	end

	-- Clean up the room name.
	if string.sub(cd.room.name, -1, -1) == "." then
		cd.room.name = string.sub(cd.room.name, 1, -2)
	end

	-- Strip the godname from the room and store that info.
	if cd.room.name:match("^%(.+%)%s") ~= nil then
		cd.room.godname = cd.room.name:match("^%((.+)%)%s")
		cd.room.name = cd.room.name:match("^%(.+%)%s(.*)")
	else
		cd.room.godname = nil
	end

	-- Clean coordinates.
	local coords = gmcp.Room.Info.coords
	if coords and coords ~= "" then
		coords = coords:split(",")
		local x, y, z
		x = tonumber(coords[2])
		y = tonumber(coords[3])
		z = tonumber(coords[4])

		cd.room.coordinates = {["x"] = x, ["y"] = y, ["z"] = z}
	else
		cd.room.coordinates = nil
	end

	-- Add exits.
	cd.room.exits = {}
	cd.room.exits_dir = {}
	for dir, vnum in pairs(gmcp.Room.Info.exits) do
		if tostring(dir) == "in" then dir = "i"
		elseif tostring(dir) == "out" then dir = "o" end
		cd.room.exits[tostring(dir)] = tonumber(vnum)
		table.insert(cd.room.exits_dir, dir)
	end
  
  -- Add hidden exits if map data differs.
  cd.room.hidden_exits = {}
  cd.room.hidden_exits_dir = {}
  if getRoomExits(cd.room.num) then
    for dir, vnum in pairs(getRoomExits(cd.room.num)) do
      dir = getShortDirection(dir)
      if not cd.room.exits[dir] then
        cd.room.hidden_exits[dir] = vnum
        table.insert(cd.room.hidden_exits_dir, dir)
      end
    end
  end

	processMapData()

	if cd.room.num ~= cd.room.lastRoom then raiseEvent("new room", cd.room.num, cd.room.lastRoom) end
	if cd.room.area ~= cd.room.lastArea then raiseEvent("new area", cd.room.area, cd.room.lastArea) end

	cd.room.lastRoom = cd.room.num
	cd.room.lastArea = cd.room.area

	raiseEvent("ui.update", "readout")
end

local RoomWrongDirHandler = function(...)
	cd.room.wrongDir = gmcp.Room.WrongDir
end

handleRoomTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.Room.Players" then
		RoomPlayersHandler(...)
	elseif e == "gmcp.Room.AddPlayer" then
		RoomAddPlayerHandler(...)
	elseif e == "gmcp.Room.RemovePlayer" then
		RoomRemovePlayerHandler(...)
	elseif e == "gmcp.Room.Info" then
		RoomInfoHandler(...)
	elseif e == "gmcp.Room.WrongDir" then
		RoomWrongDirHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.Room.Info</string>
							<string>gmcp.Room.Players</string>
							<string>gmcp.Room.AddPlayer</string>
							<string>gmcp.Room.RemovePlayer</string>
							<string>gmcp.Room.WrongDir</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleRiftTable</name>
						<packageName></packageName>
						<script>local RiftListHandler = function (...)
	cd.cache = {}
	for k,v in pairs(gmcp.IRE.Rift.List) do
		local name = gmcp.IRE.Rift.List[k].name
		local amt = tonumber(gmcp.IRE.Rift.List[k].amount)

		cd.cache[name] = amt
	end
end

local RiftChangeHandler = function (...)
	if not cd.cache then cd.cache = {} end

	local name = gmcp.IRE.Rift.Change.name
	local amt = tonumber(gmcp.IRE.Rift.Change.amount)

	cd.cache[name] = amt
end

handleRiftTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.IRE.Rift.List" then
		RiftListHandler(...)
	elseif e == "gmcp.IRE.Rift.Change" then
		RiftChangeHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.IRE.Rift.List</string>
							<string>gmcp.IRE.Rift.Change</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleItemsTable</name>
						<packageName></packageName>
						<script>local autoGrabList = {
	"42650", -- Rusted flail in Drakuum.
	"216928", -- Charred flail in Drakuum.
}

local itemActionList = {
	["a bush of mistletoe"] = "pull bush",
	["a holly tree"] = "snap tree",
}

local AutoGrabGoodies = function ()
	for id, name in pairs(cd.room.contents) do
		if table.contains(autoGrabList, id) then
			attempt("autoloot " .. id, "get " .. id)
		end

		-- Filtering for general item types.
		if cd.room.areaID == 105 and name == "a durable pickaxe" then
			attempt("autoloot " .. id, "get " .. id)
		end

		if name == "a fulgent shard of Skythrone" or
			name == "a globe of glowing spirit" then
			attempt("autoloot " .. id, "get " .. id)
		end
	end
end

local ExecuteItemActions = function ()
	for id, name in pairs(cd.room.contents) do
		if itemActionList[name] then
			send(itemActionList[name], false)
		end
	end
end

local ItemsListHandler = function (...)
	cd.inventory = {
		["contents"] = {},
		["worn"] = {},
		["containers"] = {},
		["wearable"] = {},
		["pipes"] = {},
		["cacheable"] = {},
		["corpses"] = {},
		["mobs"] = {},
	}

	for k,v in pairs(gmcp.Char.Items.List.items) do
		local id = gmcp.Char.Items.List.items[k].id
		local name = gmcp.Char.Items.List.items[k].name:stripANSI()
		local attr = gmcp.Char.Items.List.items[k].attrib
		local wearslot = gmcp.Char.Items.List.items[k].wearslot

    if name:match("ylemnic thaumizer") then
      my_thaumizer = id
    end

		cd.inventory.contents[id] = {["name"] = name}
		if wearslot then cd.inventory.contents[id].wearslot = wearslot end

		-- Sort the items into appropriate categories.
		if name:find("pipe") then table.insert(cd.inventory.pipes, id) end
		if attr then
			cd.inventory.contents[id].flags = attr
			if attr:match("[wW]") then table.insert(cd.inventory.wearable, id) end
			if attr:match("w") then table.insert(cd.inventory.worn, id) end
			if attr:match("c") then table.insert(cd.inventory.containers, id) end
			if attr:match("r") then table.insert(cd.inventory.cacheable, id) end
			if attr:match("d") then table.insert(cd.inventory.corpses, id) end
			if attr:match("m") then table.insert(cd.inventory.mobs, id) end
		end
	end
end

local ItemsAddHandler = function (...)
  -- Special handling for Lin's mask.
	if maskGiftee ~= nil and gmcp.Char.Items.Add.item.name == "an elegant white letter" then
    local mask_id = "188863"
		maskLetter = gmcp.Char.Items.Add.item.id

		sendStack("open %s" % maskLetter,
			"remove %s" % mask_id,
			"put %s in %s" % {maskLatter, mask_id},
			"close %s" % maskLetter,
			"mail %s to %s" % {maskLetter, maskGiftee})

		maskGiftee = nil
		maskLetter = nil
	end
end

local ItemsRemoveHandler = function (...)
end

local function RoomListHandler(...)
	cd.room.contents = {}
	cd.room.mobs = {}
  cd.room.all_replicas = {}
	cd.room.shrine = nil

	for i,v in ipairs(gmcp.Char.Items.List.items) do
		local id = gmcp.Char.Items.List.items[i].id
		local name = gmcp.Char.Items.List.items[i].name:stripANSI()
		local attr = gmcp.Char.Items.List.items[i].attrib

    -- Add to the master list for questing purposes.
    cd.room.all_replicas[id] = name

		if name:match("^a shrine of ") ~= nil then
			cd.room.shrine = name:match("^a shrine of (.+)$")
		else
			if not attr then
				cd.room.contents[id] = name
			elseif attr:match("m") then
				cd.room.mobs[id] = name
			else
				cd.room.contents[id] = name
			end
		end
	end

	raiseEvent("update actions")
	raiseEvent("ui.update", "readout")
	raiseEvent("update mob list")

	AutoGrabGoodies()
--	ExecuteItemActions()
end

local function RoomAddHandler(...)
	local id = gmcp.Char.Items.Add.item.id
	local name = gmcp.Char.Items.Add.item.name
	local attr = gmcp.Char.Items.Add.item.attrib

	if not attr then
		cd.room.contents[id] = name
		debugecho(id .. " added to contents table.")
	elseif attr and attr:match("m") then
		cd.room.mobs[id] = name
    cd.room.last_mob = id
		debugecho(id .. " added to mobs table.")
		raiseEvent("update mob list")
	end

	raiseEvent("ui.update", "readout")
	raiseEvent("update mob list")

	AutoGrabGoodies()
end

local RoomRemoveHandler = function (...)
	local id = gmcp.Char.Items.Remove.item.id
	local attr = gmcp.Char.Items.Remove.item.attrib

	if not attr then
		cd.room.contents[id] = nil
		debugecho(id .. " removed from contents table.")
	elseif attr and attr:match("m") then
		cd.room.mobs[id] = nil
		debugecho(id .. " removed from mobs table.")
		raiseEvent("update mob list")
	end

	raiseEvent("ui.update", "readout")
	raiseEvent("update mob list")

	AutoGrabGoodies()
end

handleItemsTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.Char.Items.List" then
		if gmcp.Char.Items.List.location == "inv" then
			ItemsListHandler(...)
		elseif gmcp.Char.Items.List.location == "room" then
			RoomListHandler(...)
		end

	elseif e == "gmcp.Char.Items.Add" then
		if gmcp.Char.Items.Add.location == "inv" then
			ItemsAddHandler(...)
		elseif gmcp.Char.Items.Add.location == "room" then
			RoomAddHandler(...)
		end

	elseif e == "gmcp.Char.Items.Remove" then
		if gmcp.Char.Items.Remove.location == "inv" then
			ItemsRemoveHandler(...)
		elseif gmcp.Char.Items.Remove.location == "room" then
			RoomRemoveHandler(...)
		end

	end
end</script>
						<eventHandlerList>
							<string>gmcp.Char.Items.List</string>
							<string>gmcp.Char.Items.Add</string>
							<string>gmcp.Char.Items.Remove</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleAfflictionsTable</name>
						<packageName></packageName>
						<script>local AfflictionsListHandler = function (...)
end

local AfflictionsAddHandler = function (...)
end

local AfflictionsRemoveHandler = function (...)
end

handleAfflictionsTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.Char.Afflictions.List" then
		AfflictionsListHandler(...)
	elseif e == "gmcp.Char.Afflictions.Add" then
		AfflictionsAddHandler(...)
	elseif e == "gmcp.Char.Afflictions.Remove" then
		AfflictionsRemoveHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.Char.Afflictions.List</string>
							<string>gmcp.Char.Afflictions.Remove</string>
							<string>gmcp.Char.Afflictions.Add</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleDeathsightTable</name>
						<packageName></packageName>
						<script>local DeathsightHandler = function (...)
	local victim = gmcp.Deathsight.victim
	local killer = gmcp.Deathsight.killer
	local assist = gmcp.Deathsight.assists
	local message = gmcp.Deathsight.message

  chat:cecho("&lt;a_darkred&gt;%s\n" % message)
end

handleDeathsightTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.Deathsight" then
		DeathsightHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.Deathsight</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleDefensesTable</name>
						<packageName></packageName>
						<script>-- Fuck you, it's "defenses".

local DefensesListHandler = function (...)
	cd.defenses = {}

	for d, _ in ipairs(gmcp.Char.Defences.List) do
		local name = gmcp.Char.Defences.List[d].name
		local desc = gmcp.Char.Defences.List[d].desc

		cd.defenses[name] = true
	end
end

local DefensesAddHandler = function (...)
	local name = gmcp.Char.Defences.Add.name
	local desc = gmcp.Char.Defences.Add.desc

	cd.defenses[name] = true
end

local DefensesRemoveHandler = function (...)
	local name = gmcp.Char.Defences.Remove[1]

	cd.defenses[name] = nil
end

handleDefensesTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.Char.Defences.List" then
		DefensesListHandler(...)
	elseif e == "gmcp.Char.Defences.Add" then
		DefensesAddHandler(...)
	elseif e == "gmcp.Char.Defences.Remove" then
		DefensesRemoveHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.Char.Defences.List</string>
							<string>gmcp.Char.Defences.Add</string>
							<string>gmcp.Char.Defences.Remove</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleCommTable</name>
						<packageName></packageName>
						<script>local fixTime = function (d)
	d = tostring(d)

	return string.rep("0", 2 - d:len()) .. d
end

local CleanGroupName = function (s)
	s = s:gsub("^the Clan of (.+)$", "%1")
	s = s:gsub("^the (.+)$", "%1")
	return s
end

local CleanChannelText = function (s, c)
	if c == "says" then
	end

	-- Strip away the channel/speaker bits. Seriously why is this in there.
	s = s:gsub("^%(.+%)%: .+ says?, %\"(.+)%\"$", "%1")
	return s
end

local ColorizeEmoteText = function (str)
	local quote = false
	
	str = str:gsub("(.)", function (a)
		if a == string.char(34) then -- quotation mark
			if quote == false then
				quote = true
				return "&lt;a_cyan&gt;" .. a
			else
				quote = false
				return a .. "&lt;a_darkcyan&gt;"
			end
		else
			return a
		end
	end)
	
	str = "&lt;a_darkcyan&gt;" .. str
	return str
end

local ChannelPlayersHandler = function ()
	cd.players = {
		["all"] = {}
	}

	for i, _ in ipairs(gmcp.Comm.Channel.Players) do
		local name = gmcp.Comm.Channel.Players[i].name
		local groups = gmcp.Comm.Channel.Players[i].channels

		-- Clean and categorize the groups, adding them to the players table if needed.
		if groups ~= nil then
			for _, g in ipairs(groups) do
				g = CleanGroupName(g)
				if cd.players[g] == nil then
					cd.players[g] = {}
				end

				table.insert(cd.players[g], name)
			end
		end

		table.insert(cd.players.all, name)
	end
end

local ChannelListHandler = function ()

end

local ChannelStartHandler = function ()
	-- wtf is this even for

end

local ChannelEndHandler = function ()
	-- maybe this'll be useful one day idk

end

local ParseChannelText = function (text, speaker, channel)
	cd.comm.source = speaker
	cd.comm.channel = channel
	cd.comm.text = CleanChannelText(text)
end

local ParseSayText = function (text, speaker, channel)
  cd.comm.source = speaker
  cd.comm.channel = channel
  cd.comm.text = CleanChannelText(text)

	local hour = fixTime(getTime().hour)
	local min = fixTime(getTime().min)
  
	chat:cecho("&lt;a_darkblue&gt;\[&lt;orange_red&gt;" .. hour .. ":" .. min .. "&lt;a_darkblue&gt;\] ")
	chat:cecho("&lt;a_cyan&gt;%s\n" % {text})
end

local ParseShoutText = function (text, speaker, channel)
  cd.comm.source = speaker
  cd.comm.channel = channel
  cd.comm.text = CleanChannelText(text)

	local hour = fixTime(getTime().hour)
	local min = fixTime(getTime().min)
  
	chat:cecho("&lt;a_darkblue&gt;\[&lt;orange_red&gt;" .. hour .. ":" .. min .. "&lt;a_darkblue&gt;\] ")
	chat:cecho("&lt;a_magenta&gt;%s\n" % {text})
end

local ParseEmoteText = function (text, speaker, channel)
	-- If it's our emote, remove the "You have emoted" header.
	text = text:gsub("^You have emoted%: ", "")
	
	cd.comm.source = speaker
	cd.comm.channel = channel
	cd.comm.text = text
	
	local hour = fixTime(getTime().hour)
	local min = fixTime(getTime().min)
	
	chat:cecho("&lt;a_darkblue&gt;\[&lt;orange_red&gt;" .. hour .. ":" .. min .. "&lt;a_darkblue&gt;\] ")
	chat:cecho(ColorizeEmoteText(text) .. "\n")
  
  -- Displays the source of the emote if there are more than three people in the room.
  if #cd.playersHere &gt;= 3 then
    if speaker == cd.player.name then
      cecho("&lt;dark_sea_green&gt;You &lt;a_darkgrey&gt;emote...")
    else
      cecho("&lt;light_sea_green&gt;%s &lt;a_darkgrey&gt;emotes..." % speaker)
    end
  end
	
	-- An inadequate hack. Checks to see if the source is a single word before it plays sound,
	-- to block out NPC emote spam. Doesn't work in all situations for obvious reasons.
	if speaker:match("^(%w+)$") ~= nil then
		cd.PlaySound("Link")
	end
end

local ChannelTextHandler = function ()
	cd.comm = {
		["source"] = "None",
		["channel"] = "None",
		["text"] = "...",
	}

	local t = gmcp.Comm.Channel.Text.text
	local l = gmcp.Comm.Channel.Text.talker
	local c = gmcp.Comm.Channel.Text.channel
	
	t = t:stripANSI()

	if c == "emotes" then
		ParseEmoteText(t, l, c)
	elseif c == "says" then
		ParseSayText(t, l, c)
  elseif c == "shout" then
    ParseShoutText(t, l, c)
	else
		ParseChannelText(t, l, c)
	end
end

handleCommTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.Comm.Channel.Players" then
		ChannelPlayersHandler(...)
	elseif e == "gmcp.Comm.Channel.List" then
		ChannelListHandler(...)
	elseif e == "gmcp.Comm.Channel.Start" then
		ChannelStartHandler(...)
	elseif e == "gmcp.Comm.Channel.End" then
		ChannelEndHandler(...)
	elseif e == "gmcp.Comm.Channel.Text" then
		ChannelTextHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.Comm.Channel.Players</string>
							<string>gmcp.Comm.Channel.List</string>
							<string>gmcp.Comm.Channel.Start</string>
							<string>gmcp.Comm.Channel.Text</string>
							<string>gmcp.Comm.Channel.End</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleTimeTable</name>
						<packageName></packageName>
						<script>local TimeUpdateHandler = function ()
	cd.clock.period = tonumber(gmcp.IRE.Time.Update.daynight)
end

local TimeListHandler = function ()
	display("Time event listed.")
	cd.clock.phase = gmcp.IRE.Time.List.moonphase
	cd.clock.day = tonumber(gmcp.IRE.Time.List.day)
	cd.clock.month = tonumber(gmcp.IRE.Time.List.month)
	cd.clock.year = tonumber(gmcp.IRE.Time.List.year)
	cd.clock.desc = gmcp.IRE.Time.List.time
	cd.clock.period = tonumber(gmcp.IRE.Time.List.daynight)
end

handleTimeTable = function (e, ...)
	debugecho("GMCP raised " .. e .. ".")
	if e == "gmcp.IRE.Time.Update" then
		TimeUpdateHandler(...)
	elseif e == "gmcp.IRE.Time.List" then
		TimeListHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>gmcp.IRE.Time.Update</string>
							<string>gmcp.IRE.Time.List</string>
						</eventHandlerList>
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Custom</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>handlePulse</name>
						<packageName></packageName>
						<script>-- Master synchronization timer for the system.
--
-- Anything that requires a throttle (queued actions, curing, etc.)
-- works off of pulses. It's also useful for other scheduled events
-- as well.

local handleDefenseQueue = function ()
	if onSYNC() == true and isThrottled("defup") ~= true then
		attempt("defup", table.remove(classDefenseQueue, 1), false)
	end

	if #classDefenseQueue == 0 then
		classDefenseQueue = nil
	end
end

local PulseHandler = function (...)
	if cd.player.name == nil then
		return
	end

	local args = {...}

	-- 1: Emergency checks, resets, etc.

	-- 2: Curing and defenses.

		-- 2a: Curing module.
--		cd.cure.controller()

		-- 2b: Defense module.
--		cd.def.controller()
		if classDefenseQueue ~= nil and #classDefenseQueue &gt; 0 then
			handleDefenseQueue()
		end

	-- 3: Queue handling, AI checks.

		-- 3a: Autobashing module.
		--     Handles standard bashing, and gathering of ylem mist.
		if cd.modules.autobashing == true then
			cd.AutoBash()
		end

	-- 4: Misc. actions (loot, etc.).
		-- 3a: Auto-collection of parts for Apothecary.
		if autoCollection == true then
			AutoCollectApothecaryParts()
		end
    
  -- 5: Queue Execution
    if #cd.queue &gt; 0 then
      executeQueue()
    end

	-- 6: UI updates, animations, etc.
end

handlePulse = function (e, ...)
	if e == "pulse" then
		PulseHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>pulse</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handlePrompt</name>
						<packageName></packageName>
						<script>local PromptProcessing = function ()
end

local PromptResets = function ()
	autoBlessings = nil
	suppressSpecialMovementWarning = nil
	checkCityFunds = nil
  relic_bypass = nil
  
  if player_wounds_checking then
    player_wounds_checking = nil
    disableTrigger("Player WOUNDS Entry")
  end
  
  if enemy_wounds_checking then
    enemy_wounds_checking = nil
    disableTrigger("Enemy WOUNDS Entry")
  end
end

local PromptReports = function ()
	if mind_net_list ~= nil and #mind_net_list &gt; 0 then
		local list = table.concat(mind_net_list, ", ")
		local dir = mind_net_direction

		cecho("\n&lt;a_cyan&gt;%s %s the area." % {list, dir})
		cd.Broadcast("[MIND NET:] %s %s the area." % {list, dir})

		mind_net_list = nil
		mind_net_direction = nil
	end
end

local colorRamp = function (cur, max)
	-- Returns a color on a gradient for stat values.
	local perc = (cur * 100) / max
	local color = {0, 0, 0}
	local r, g, b; b = 0

	if cur &gt;= max then
		color = {40, 180, 255}
	else
		if perc &gt; 50 then g = 255 else
			g = math.round((255 * perc) / 50)
		end

		if perc &lt; 50 then r = 255 else
			perc = 255 - ((((perc - 50) * 2) * 255) / 100)
			r = math.round(perc)
		end

		if g &gt; 255 then g = 255 elseif g &lt; 0 then g = 0 end
		if r &gt; 255 then r = 255 elseif r &lt; 0 then r = 0 end

		color = {r, g, b}
	end

	return color
end

local stancecolors = {
	["scs"] = "indian_red",
	["drs"] = "forest_green",
	["phs"] = "navajo_white",
	["tgs"] = "dark_orange",
}

cd.DrawPrePrompt = function ()
  if cd.modules.pk == true then
    echo("\n")

    -- Combat Messages.
    -- local c, s, t = cd.combatMessage.caster, cd.combatMessage.skill, cd.combatMessage.target
    -- cecho("&lt;a_darkgrey&gt;Caster: &lt;a_grey&gt;%s &lt;a_darkgrey&gt;Skill: &lt;a_grey&gt;%s &lt;a_darkgrey&gt;Target: &lt;a_grey&gt;%s" % {c, s, t})

    -- Affliction Tokens.
    local aff_string = getEnemyAffString()
    if cd.enemy.prone ~= 0 then
      aff_string = "&lt;a_red&gt;!P! %s" % {aff_string}
    end
    cecho("&lt;a_brown&gt;A&lt;a_darkcyan&gt;|&lt;a_grey&gt;%s\n" % {aff_string})

    -- Limb damage.
    for _, limb in ipairs({"head", "torso", "left_arm", "right_arm", "left_leg", "right_leg"}) do
      local dam = getLimbDamageDisplay(limb)
      decho("&lt;128,72,72&gt;%s&lt;0,128,128&gt;|%s " % {getShortLimb(limb):upper(), dam})
    end
  end
end

cd.DrawPrompt = function ()
	if not lastPrompt then lastPrompt = 0 end

	if getLineNumber() == lastPrompt + 1 then
		-- Gag duplicate prompts.
		deleteLine()
	else
		deleteLine()
    
    -- Draw pre-prompt.
    cd.DrawPrePrompt()

		-- Draw new prompt.

		echo("\n")
		local pColor = {}
		for i, v in ipairs({"HP", "MP", "END", "WIL"}) do
			pColor[v] = colorRamp(cd.player[v].current, cd.player[v].max)
		end

		-- Draw stat block. Go, go!
		for i,v in ipairs({"HP", "MP", "END", "WIL"}) do
			local padding = tostring(cd.player[v].max):len() - tostring(cd.player[v].current):len()
			cecho("&lt;a_darkgrey&gt;%s&lt;a_darkcyan&gt;\|&lt;dead_grey&gt;%s" % {v:sub(1, 1), string.rep("0", padding)})
			decho("&lt;%s,%s,%s&gt;%s " % {pColor[v][1], pColor[v][2], pColor[v][3], cd.player[v].current})
		end

		-- Misc. Stats.

		if isArchivist() == true then -- Bioessence.
			cecho("&lt;a_darkgrey&gt;B&lt;a_darkcyan&gt;\|&lt;light_sea_green&gt;%s" % {cd.player.bio})
			echo(" ")
		end

		if isVampire() == true then -- Blood.
			cecho("&lt;a_darkgrey&gt;B&lt;a_darkcyan&gt;\|&lt;a_red&gt;%s%%" % {cd.player.blood})
			echo(" ")
		end

		if isNecromancer() == true and cd.player.essence ~= nil then -- Essence.
			cecho("&lt;a_darkgrey&gt;E&lt;a_darkcyan&gt;\|&lt;a_magenta&gt;%s" % {cd.player.essence})
			echo(" ")
		end
    
    if isZealot() == true and cd.player.psi ~= nil then -- Psi.
      cecho("&lt;a_darkgrey&gt;P&lt;a_darkcyan&gt;\|&lt;a_magenta&gt;%s" % {cd.player.psi})
      echo(" ")
    end
    
		if isMonk() == true and cd.player.kai ~= nil then -- Kai.
			-- Deliverance: 81
			-- Enfeeble: 61
			-- Banish: 61
			-- Cripple: 41
			-- Strike: 21
			-- Heal: 21
			-- Choke: 10

			local kai = cd.player.kai
			local kColor = "dim_grey"
			if kai &gt;= 81 then kColor = "red"
			elseif kai &gt;= 61 then kColor = "orange_red"
			elseif kai &gt;= 41 then kColor = "orange"
			elseif kai &gt;= 21 then kColor = "gold"
			elseif kai &gt;= 10 then kColor = "a_darkred"
			elseif kai &gt; 0 then kColor = "a_grey"
			end

			cecho("&lt;a_darkgrey&gt;K&lt;a_darkcyan&gt;\|&lt;dead_grey&gt;%s&lt;%s&gt;%s " % {string.rep("0", 3 - tostring(kai):len()), kColor, kai})
		end

		if isWayfarer() == true and cd.player.fury ~= nil then -- Fury.
			local fury = cd.player.fury
			local fColor = "a_red"
      cecho("&lt;a_darkgrey&gt;F&lt;a_darkcyan&gt;\|&lt;dead_grey&gt;%s&lt;%s&gt;%s " % {string.rep("0", 3 - string.len(tostring(fury))), fColor, fury})
		end
    
    if isSciomancer() == true and cd.player.shadowprice ~= nil then -- Shadowprice.
      local sp = cd.player.shadowprice
      local sColor = "light_slate_blue"
      cecho("&lt;a_darkgrey&gt;SP&lt;a_darkcyan&gt;\|&lt;dead_grey&gt;%s&lt;%s&gt;%s " % {string.rep("0", 3 - string.len(tostring(sp))), sColor, sp})
    end
		
		-- God statuses, such as fire and invisibility.
		local godString = ""
		if cd.player.fire == "&amp;" then godString = godString .. "&lt;gold&gt;F" end
		if cd.player.invis then godString = godString .. "&lt;dodger_blue&gt;" .. cd.player.invis end
		if godString ~= "" then godString = godString .. " " end
		cecho(godString)

		-- Statuses.
		local statString = ""
		if cd.status.prone == true then statString = statString .. "&lt;a_darkgrey&gt;p" end
		if cd.status.elevation == "flying" then
      statString = statString .. "&lt;a_darkgrey&gt;f"
    elseif cd.status.elevation == "buried_shallow" then
      statString = statString .. "&lt;a_darkgrey&gt;b"
    elseif cd.status.elevation == "buried_deep" then
      statString = statString .. "&lt;a_darkgrey&gt;B"
    end
		if statString ~= "" then statString = statString .. " " end
		cecho(statString)

		-- Defenses.
		local defString = ""
		if cd.defenses.tunnelvision == true then defString = defString .. "&lt;a_darkmagenta&gt;t" end
		if cd.defenses.cloak == true then defString = defString .. "&lt;forest_green&gt;c" end
		if cd.defenses.fangbarrier == true then defString = defString .. "&lt;forest_green&gt;s" end
		if cd.defenses.deafness == true then defString = defString .. "&lt;spring_green&gt;d" end
		if cd.defenses.blindness == true then defString = defString .. "&lt;spring_green&gt;b" end
		if cd.defenses.disregarding == true then defString = defString .. "&lt;orange_red&gt;d" end
		if cd.player.phased == 1 then defString = defString .. "&lt;deep_sky_blue&gt;@" end

		if defString ~= "" then defString = defString .. " " end
		cecho(defString)

		-- Common Healing Balances.
		for _, v in ipairs({"elixir", "moss"}) do
			if cd.balances[v] == true then
				cecho("&lt;lawn_green&gt;%s" % v:sub(1, 1))
			else
				cecho("&lt;dark_green&gt;_")
			end
		end
		echo(" ")

		-- BAL/EQ.
		if onEQ() == true then cecho("&lt;p_eq&gt;e") else cecho("&lt;a_darkred&gt;_") end
		if onBAL() == true then cecho("&lt;p_bal&gt;b") else cecho("&lt;a_darkred&gt;_") end

		-- Tekura Stance.
		if cd.status.stance and cd.status.stance ~= "" then
			local stColor = "a_darkgrey"
			if stancecolors[cd.status.stance] then stColor = stancecolors[cd.status.stance] end

			cecho(" &lt;" .. stColor .. "&gt;" .. cd.status.stance)
		end

		-- Shapeshifter Madness.
		if isLycan() == true then
			local madness_color = "grey"
			local bracket_color = "a_darkgrey"
			if cd.player.madness &gt;= 80 then
				madness_color = "white"
				bracket_color = "red"
			elseif cd.player.madness &gt;= 60 then
				madness_color = "red"
				bracket_color = "a_darkred"
			elseif cd.player.madness &gt;= 40 then
				madness_color = "red"
			elseif cd.player.madness &gt;= 20 then
				madness_color = "dark_orange"
			elseif cd.player.madness &gt;= 1 then
				madness_color = "pale_violet_red"
			end

			cecho(" &lt;" .. bracket_color .. "&gt;[&lt;" .. madness_color .. "&gt;" .. cd.player.madness .. "&lt;" .. bracket_color .. "&gt;]")
		end

		-- Shamanic Energy.
		if isShaman() == true then
			local e_color = "dark_slate_grey"
			cecho(" &lt;dark_green&gt;G&lt;a_darkcyan&gt;\|")

			if cd.player.energy &lt;= 2 then
				e_color = "dark_olive_green"
			elseif cd.player.energy &lt;= 4 then
				e_color = "medium_sea_green"
			elseif cd.player.energy == 5 then
				e_color = "lawn_green"
			end

			cecho("&lt;" .. e_color .. "&gt;" .. string.rep("*", cd.player.energy) .. "&lt;dark_slate_grey&gt;" .. string.rep("-", 5 - cd.player.energy))
		end

		-- Terminating character.
		cecho("&lt;a_darkgrey&gt; \- ")
	end

	lastPrompt = getLineNumber()
	resetFormat()
end

local PromptHandler = function (...)
	local fire, invis, date
	local args = {...}
	if args and #args &gt; 1 then		-- Special god prompt options.
		fire = args[1]
		invis = args[2]
		date = args[3]
	elseif args then					-- Normal prompt options.
		date = args[1]
	end

	PromptReports()

	if gagPrompt == true then
		deleteLine()
		gagPrompt = nil
	else
		gagPrompt = nil		-- Just in case.
		cd.DrawPrompt()
	end

	PromptProcessing()
	PromptResets()
end

local MiscPromptHandler = function (...)
	-- Something might end up here later, but for now, just make sure the prompt isn't overwritten!
	local time = getTime().month .. "/" .. getTime().day .. "/" .. getTime().year
	cecho("\n&lt;a_darkblue&gt;\-\- &lt;a_white&gt;Challenger Deep &lt;a_darkblue&gt;" .. string.rep("-", 57 - time:len()) .. "&lt;a_white&gt; " .. time .. " &lt;a_darkblue&gt;\-\-")
end

handlePrompt = function (e, ...)
	if e == "prompt" then
		PromptHandler(...)
	elseif e == "misc prompt" then
		MiscPromptHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>prompt</string>
							<string>misc prompt</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleIRCEvents</name>
						<packageName></packageName>
						<script>local IRCMessageHandler = function (user, channel, message)
	if channel ~= cd.sys.IRCChannel then
		return
	end
	
	cecho("\n  &lt;sea_green&gt;[&lt;light_sea_green&gt;IRC&lt;sea_green&gt;] &lt;a_darkgreen&gt;" .. user .. ": &lt;spring_green&gt;" .. message)
end

function handleIRCEvents(e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "sysIrcMessage" then
		IRCMessageHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>sysIrcMessage</string>
						</eventHandlerList>
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Enemy Tracking</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>handleEnemyStatusEvents</name>
							<packageName></packageName>
							<script>local function aff_add(a, avoidable)
  cd.enemy.afflictions[a] = os.clock()
  if avoidable then
    cd.enemy.last.affliction = a
  else
    cd.enemy.last.affliction = nil
  end
end

local function aff_remove(a)
  if a == "paralysis" then
    cd.enemy.afflictions.paresis = nil
  end
  
  if a == "writhe_necklock" and my_lock == "necklock" then my_lock = nil
  elseif a == "writhe_armpitlock" and my_lock == "armpitlock" then my_lock = nil
  elseif a == "writhe_thighlock" and my_lock == "thighlock" then my_lock = nil
  end

  cd.enemy.afflictions[a] = nil
  cd.enemy.last.cured_affliction = a
end

local function AddAfflictionHandler(aff, avoidable)
  avoidable = avoidable == true

  if type(aff) == "table" then
    for _, a in ipairs(aff) do
      if cd.enemy.afflictions[a] == nil then
        aff_add(a, avoidable)
      end
    end
  else
    if cd.enemy.afflictions[aff] == nil then
      aff_add(aff, avoidable)
    end
  end
end

local function RemoveAfflictionHandler(aff)
  if type(aff) == "table" then
    for _, a in ipairs(aff) do
      if cd.enemy.afflictions[a] then
        -- One-time use variable to process how long it took the enemy to cure the aff.
        cd.enemy.aff_cure_time = os.clock() - cd.enemy.afflictions[a]
      end
    
      aff_remove(a)
    end
  else
    if cd.enemy.afflictions[aff] then
      -- One-time use variable to process how long it took the enemy to cure the aff.
      cd.enemy.aff_cure_time = os.clock() - cd.enemy.afflictions[aff]
    end

    aff_remove(aff)
  end
end

local function AddDefenseHandler(def)
  cd.enemy.defenses[def] = true
end

local function RemoveDefenseHandler(def)
  cd.enemy.defenses[def] = nil
end

local function ProneHandler()
  cd.enemy.prone = os.clock()
end

local function NotProneHandler(t)
  cd.enemy.prone_time = os.clock() - cd.enemy.prone
  cd.enemy.prone = 0

  raiseEvent("enemy.remove_affliction", getTarget(), {
    "frozen", "paralysis",
    "left_leg_broken", "right_leg_broken",
    "left_leg_damaged", "right_leg_damaged",
    "left_leg_mangled", "right_leg_mangled",
    "left_leg_amputated", "right_leg_amputated"
  })
  
  if eaff.has("backstrain") then
    raiseEvent("enemy.limb_damage", t, "torso", 10)
  end
end

local function LimbDamageHandler(limb, damage, avoidable)
  avoidable = avoidable == true
  cd.enemy.last.attacked_limb = limb
  damage = cd.enemy.limbs[limb] + damage
  if damage &gt; 100 then damage = 100 end
  cd.enemy.limbs[limb] = damage

  if avoidable then
    cd.enemy.last.limb_damage = damage
  else
    cd.enemy.last.limb_damage = nil
  end
end

local function FixLimbDamageHandler(limb, min_damage, avoidable)
  avoidable = avoidable == true
  cd.enemy.last.attacked_limb = limb
  local damage = 0

  if cd.enemy.limbs[limb] &lt; min_damage then
    damage = min_damage - cd.enemy.limbs[limb]
  end

  if damage &gt; 100 then damage = 100 end
  cd.enemy.limbs[limb] = min_damage

  if avoidable then
    cd.enemy.last.limb_damage = damage
  else
    cd.enemy.last.limb_damage = nil
  end
end

local function CureLimbDamageHandler(limb, damage)
  cd.enemy.limbs[limb] = cd.enemy.limbs[limb] - damage
  if cd.enemy.limbs[limb] &lt; 0 then cd.enemy.limbs[limb] = 0 end
end

local function AsleepHandler()
  cd.enemy.asleep = true
end

local function NotAsleepHandler()
  cd.enemy.asleep = false
end

local function UnconsciousHandler()
  cd.enemy.unconscious = true
end

local function NotUnconsciousHandler()
  cd.enemy.unconscious = false
end

local function ClearAfflictionsHandler()
  cd.enemy.afflictions = {}
end

local function ClearDefensesHandler()
  cd.enemy.defenses = {}
end

local function DeathHandler()
  enemy.reset()
end

--------------------------------------------------------------------------------

function handleEnemyStatusEvents(e, t, ...)
  if t:lower() ~= getTarget():lower() then
    return
  end
  
  if e == "enemy.add_affliction" then
    -- Enemy receives a basic affliction.
      -- Args: affliction
    AddAfflictionHandler(...)
  elseif e == "enemy.remove_affliction" then
    -- Enemy loses a basic affliction.
      -- Args: affliction
    RemoveAfflictionHandler(...)
  elseif e == "enemy.add_defense" then
    -- Enemy gains a defense.
      -- Args: defense
    AddDefenseHandler(...)
  elseif e == "enemy.remove_defense" then
    -- Enemy loses a defense.
      -- Args: defense
    RemoveDefenseHandler(...)
  elseif e == "enemy.prone" then
    -- Enemy is made prone.
    ProneHandler()
  elseif e == "enemy.not_prone" then
    -- Enemy is no longer prone.
    NotProneHandler(t)
  elseif e == "enemy.limb_damage" then
    -- Enemy receives limb damage.
      -- Args: limb, damage
    LimbDamageHandler(...)
  elseif e == "enemy.fix_limb_damage" then
    -- Like limb_damage, but sets the value to a minimum.
      -- Args: limb, min_damage
    FixLimbDamageHandler(...)
  elseif e == "enemy.asleep" then
    -- Enemy has fallen asleep.
    AsleepHandler()
  elseif e == "enemy.not_asleep" then
    -- Enemy is no longer asleep by whatever means.
    NotAsleepHandler()
  elseif e == "enemy.unconscious" then
    -- Enemy has fallen unconscious.
    UnconsciousHandler()
  elseif e == "enemy.not_unconscious" then
    -- Enemy has regained consciousness.
    NotUnconsciousHandler()
  elseif e == "enemy.clear_afflictions" then
    -- Enemy has lost all affs, whether via death or leaving the room.
    ClearAfflictionsHandler()
  elseif e == "enemy.clear_defenses" then
    -- Enemy has lost all defs, whether via death or leaving the room.
    ClearDefensesHandler()
  elseif e == "enemy.cure_limb_damage" then
    CureLimbDamageHandler(...)
  elseif e == "enemy.death" then
    -- Enemy has died or starbursted and should reset their status entirely.
    DeathHandler(...)
  end
end</script>
							<eventHandlerList>
								<string>enemy.add_affliction</string>
								<string>enemy.remove_affliction</string>
								<string>enemy.add_defense</string>
								<string>enemy.remove_defense</string>
								<string>enemy.prone</string>
								<string>enemy.limb_damage</string>
								<string>enemy.fix_limb_damage</string>
								<string>enemy.not_prone</string>
								<string>enemy.asleep</string>
								<string>enemy.not_asleep</string>
								<string>enemy.unconscious</string>
								<string>enemy.not_unconscious</string>
								<string>enemy.clear_afflictions</string>
								<string>enemy.clear_defenses</string>
								<string>enemy.cure_limb_damage</string>
								<string>enemy.death</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleEnemyCuringEvents</name>
							<packageName></packageName>
							<script>local function PipeHandler(t, herb)
  raiseEvent("enemy.remove_affliction", t, {"asthma", "flared"})
  local stack = cure_stack[herb]
  if not stack then
    return
  end
  
  for _, aff in ipairs(stack) do
    if eaff.has(aff) then
      cd.enemy.last.cured_affliction = aff
      cd.enemy.last.void_affliction = aff
      cd.enemy.last.pipe_aff = aff
      raiseEvent("enemy.remove_affliction", t, aff)
      
      return
    end
  end
end

local function PoulticeHandler(t, poultice, limb, instant)
  raiseEvent("enemy.remove_affliction", t, {"slickness", "sandrot"})

  instant = (instant == true or poultice ~= "restoration")
  limb = limb:underscore()
  cd.enemy.last.cured_limb = limb
  cd.enemy.last.resto_limb = nil
  cd.enemy.last.resto_time = nil

  if poultice == "restoration" and instant then
    raiseEvent("enemy.cure_limb_damage", t, limb, 30)
  end

  local try_stack = "%s_%s" % {poultice, limb}
  local stack = cure_stack[try_stack]
  local timer = 4.2

  if stack then
    for _, aff in ipairs(stack) do
      if eaff.has(aff) then
        if poultice == "restoration" and (aff == "crushed_chest" or aff == "mauled_face") then
          instant = true
        end
  
        if instant then
          cd.enemy.last.cured_affliction = aff
          cd.enemy.last.void_affliction = aff
          cd.enemy.last.poultice_aff = aff
          raiseEvent("enemy.remove_affliction", t, aff)
        end
        
        break
      end
    end
  end

  if not instant then
    cd.enemy.last.resto_time = os.clock()
    cd.enemy.last.resto_limb = limb
    resto_timer = tempTimer(timer, function ()
      raiseEvent("enemy.cure.poultice", t, "restoration", limb, true)
    end)
  end
end

local function FocusHandler(t)
  raiseEvent("enemy.remove_affliction", t, "impatience")
  cd.enemy.balances.focus = os.clock()
  if eaff.has("mental_disruption") then
    -- Shift the focus timestamp forward 5 seconds to reflect 5 extra seconds of balance time.
    cd.enemy.balances.focus = cd.enemy.balances.focus + 5
  end
  
  local stack = cure_stack.focus
  if not stack then
    return
  end
  
  for _, aff in ipairs(stack) do
    if eaff.has(aff) then
      cd.enemy.last.cured_affliction = aff
      cd.enemy.last.focus_aff = aff
      raiseEvent("enemy.remove_affliction", t, aff)
      
      return
    end
  end
end

local function TreeHandler(t)
  raiseEvent("enemy.remove_affliction", t, {"paresis", "paralysis"})
  cd.enemy.balances.tree = os.clock()
  if eaff.has("numbed_skin") then
    -- Shift the tree timestamp forward 5 seconds to reflect 50% extra balance time.
    cd.enemy.balances.tree = cd.enemy.balances.tree + 5
  end
end

local function RageHandler(t)
  local stack = cure_stack.steroid
  if not stack then
    return
  end
  
  for _, aff in ipairs(stack) do
    if eaff.has(aff) then
      cd.enemy.last.cured_affliction = aff
      raiseEvent("enemy.remove_affliction", t, aff)
      
      return
    end
  end
end

local function RestoreHandler(t)
  local to_restore = {
    left_leg = true,
    right_leg = true,
    left_arm = true,
    right_arm = true,
    torso = true,
    head = true,
  }

  for _, limb in ipairs({"left_leg", "right_leg", "left_arm", "right_arm", "torso", "head"}) do
    if eaff.has(limb .. "_damaged") then
      to_restore[limb] = nil
    end
  end
  
  for limb, status in pairs(to_restore) do
    if status == true then
      cd.enemy.last.cured_affliction = limb .. "_broken"
      raiseEvent("enemy.remove_affliction", t, limb .. "_broken")
    end
  end
end

local function ConcentrateHandler(t)
  raiseEvent("enemy.remove_affliction", t, {"disrupted", "confusion"})
end

local function InsomniaHandler(t)
  raiseEvent("enemy.add_defense", t, "insomnia")
end

local function WritheHandler(t, writhe_aff)
  raiseEvent("enemy.remove_affliction", t, {
    "writhe_armpitlock", "writhe_bind", "writhe_grappled", "writhe_gunk",
    "writhe_hoist", "writhe_impaled", "writhe_lure", "writhe_necklock",
    "writhe_ropes", "writhe_stasis", "writhe_thighlock", "writhe_transfix",
    "writhe_vines", "writhe_web"
  })
end

local function EndgameHandler(t)
  raiseEvent("enemy.remove_affliction", t, "impairment")
  cd.enemy.balances.endgame = os.clock()
end

local function ElixirHandler(t, elixir)
  if eaff.has("whiplash") then
    raiseEvent("enemy.limb_damage", t, "head", 6.49)
  end
end

local function ImmunityHandler(t)
  raiseEvent("enemy.remove_affliction", t, venom_aff(cd.enemy.last.venom))
end

local function PillHandler(t, pill)
  raiseEvent("enemy.remove_affliction", t, {"anorexia", "destroyed_throat"})

  local stack = cure_stack[pill]
  if not stack then
    return
  end
  
  for _, aff in ipairs(stack) do
    if eaff.has(aff) then
      cd.enemy.last.cured_affliction = aff
      cd.enemy.last.void_affliction = aff
      cd.enemy.last.pill_aff = aff
      raiseEvent("enemy.remove_affliction", t, aff)
      
      return
    end
  end
end

local function GenericHandler(t, aff)
  raiseEvent("enemy.remove_affliction", t, aff)
end

--------------------------------------------------------------------------------

function handleEnemyCuringEvents(e, t, ...)
  if t:lower() ~= getTarget():lower() then
    return
  end

  if e == "enemy.cure.pipe" then
    PipeHandler(t, ...)
  elseif e == "enemy.cure.poultice" then
    PoulticeHandler(t, ...)
  elseif e == "enemy.cure.focus" then
    FocusHandler(t, ...)
  elseif e == "enemy.cure.tree" then
    TreeHandler(t, ...)
  elseif e == "enemy.cure.rage" then
    RageHandler(t, ...)
  elseif e == "enemy.cure.restore" then
    RestoreHandler(t, ...)
  elseif e == "enemy.cure.concentrate" then
    ConcentrateHandler(t, ...)
  elseif e == "enemy.cure.insomnia" then
    InsomniaHandler(t, ...)
  elseif e == "enemy.cure.writhe" then
    WritheHandler(t, ...)
  elseif e == "enemy.cure.endgame" then
    EndgameHandler(t, ...)
  elseif e == "enemy.cure.elixir" then
    ElixirHandler(t, ...)
  elseif e == "enemy.cure.immunity" then
    ImmunityHandler(t, ...)
  elseif e == "enemy.cure.pill" then
    PillHandler(t, ...)
  elseif e == "enemy.cure.generic" then
    GenericHandler(t, ...)
  end
end</script>
							<eventHandlerList>
								<string>enemy.cure.pipe</string>
								<string>enemy.cure.poultice</string>
								<string>enemy.cure.focus</string>
								<string>enemy.cure.tree</string>
								<string>enemy.cure.rage</string>
								<string>enemy.cure.restore</string>
								<string>enemy.cure.concentrate</string>
								<string>enemy.cure.insomnia</string>
								<string>enemy.cure.writhe</string>
								<string>enemy.cure.endgame</string>
								<string>enemy.cure.elixir</string>
								<string>enemy.cure.immunity</string>
								<string>enemy.cure.pill</string>
								<string>enemy.cure.generic</string>
							</eventHandlerList>
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Player Tracking</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>handleRoomChanges</name>
							<packageName></packageName>
							<script>local NewRoomResets = function ()
	ylemMistInRoom = nil
	autoLearnLessons = nil
	autoLearnSkill = nil
	autolearnTutor = nil
	natureAnimation = nil
end

local NewRoomHandler = function (new, old)
	cd.map.updateRoom(cd.room.num)

	NewRoomResets()

	raiseEvent("ui.update", "readout")
end

local NewAreaHandler = function (...)
	area_worm_warps = nil

	raiseEvent("ui.update", "readout")
end

local RoomDisplayedHandler = function (...)
	local s_dir, s_com = cd.GetSpecialExit(cd.room.num)

  if #cd.room.hidden_exits_dir &gt; 0 then
    local h_exits = {}
    for _, dir in ipairs(cd.room.hidden_exits_dir) do
      table.insert(h_exits, getProperDirection(dir))
    end
    local h_exitstring = table.concat(h_exits, ", ")
    cecho(" &lt;a_darkgrey&gt;(&lt;deep_sky_blue&gt;%s&lt;a_darkgrey&gt;)" % h_exitstring)
  end

	if s_dir ~= nil and s_com ~= nil then
    if type(s_com) ~= "string" then
      s_com = "special"
    end
    
		cecho("\n&lt;a_darkgrey&gt;&lt;&lt;light_sky_blue&gt;X&lt;a_darkgrey&gt;&gt;: &lt;a_blue&gt;" .. s_dir:title() .. " &lt;a_darkgrey&gt;(" .. s_com .. ")&lt;a_blue&gt;.")
	end
	
	if cd.room.shrine ~= nil then
		cecho("\n&lt;a_darkgrey&gt;[&lt;gold&gt;S&lt;a_darkgrey&gt;]: &lt;a_grey&gt;" .. cd.room.shrine .. ".")
	end
  
  if area_worm_warps and table.size(area_worm_warps) &gt; 0 then
    if area_worm_warps[cd.room.num] ~= nil then
      local dst_num, dst = area_worm_warps[cd.room.num].dst_num, area_worm_warps[cd.room.num].dst
      cecho("\n&lt;a_darkgreen&gt;[&lt;a_green&gt;W&lt;a_darkgreen&gt;]&lt;a_darkgrey&gt;: &lt;a_grey&gt;%s &lt;a_darkgrey&gt;(%s)" % {dst, dst_num})
    end
  end

	cd.FindQuestReplicas()
	cd.FindQuestItems()
end

handleRoomChanges = function (e, ...)
	if e == "new room" then
		NewRoomHandler(...)
	elseif e == "new area" then
		NewAreaHandler(...)
	elseif e == "room displayed" then
		RoomDisplayedHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>new room</string>
								<string>new area</string>
								<string>room displayed</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleCommunication</name>
							<packageName></packageName>
							<script>local fixTime = function (d)
	d = tostring(d)

	return string.rep("0", 2 - d:len()) .. d
end

local userColors = {
	["You"] = "a_grey",
	["Omei"] = "magenta",
}

local chanSymbols = {
	-- Special symbols to prepend before a channel's name for easy identification.
	["Gods"] = "!",
	["Newbie"] = "n",
	["Market"] = "$",
	["The Azure Guard"] = "c",
	["Azurites"] = "c",
}

local chanColors = {
	["Gods"] = "dark_orange",
	["Newbie"] = "pale_turquoise",
	["Liaisons"] = "indian_red",
	["Congregation"] = "dark_goldenrod",
  ["Faithful"] = "dark_goldenrod",
	["Laity"] = "dark_goldenrod",
	["Order"] = "goldenrod",
  ["Chosen"] = "goldenrod",
	["Builders"] = "medium_spring_green",
	["Guides"] = "steel_blue",
	["Market"] = "khaki",
	["Sect"] = "medium_violet_red",
	["Web"] = "white",

	["Duiran"] = "magenta",
	["Spinesreach"] = "magenta",
	["Enorian"] = "magenta",
	["Bloodloch"] = "magenta",

	["Arbitrary Anamnesis"] = "orange",
	["Dion an Duir"] = "medium_sea_green",
	["Dynaughden"] = "rosy_brown",
	["Kelsys Labs Ltd"] = "forest_green",
	["Ishin Street"] = "medium_purple",
	["House Ve'kahi"] = "medium_purple",
	["House D'baen"] = "medium_purple",
	["Eyes of the Wilds"] = "chocolate",
	["The Benandanti Consulate"] = "gold",
	["The Crafting Guild of Sapience"] = "rosy_brown",
	["The dur Naya Line"] = "dark_orchid",
	["The Front Line"] = "deep_sky_blue",
	["The Peregrine Cadre"] = "deep_sky_blue",
	["The Yew Council"] = "sandy_brown",
	["The Engraver's Guild"] = "orange_red",
	["Clandestine"] = "yellow_green",
	["The Gambit"] = "spring_green",
	["Spirean Hunters"] = "sky_blue",
	["The Stormcaller Research Society"] = "cadet_blue",
	["Research"] = "deep_sky_blue",
	["The Roleplay Syndicate"] = "medium_aquamarine",
	["The Azure Guard"] = "violet_red",
	["Azurites"] = "violet_red",
	["Speakers of Duiran"] = "dark_sea_green",
	["Council of Elders"] = "tomato",
	["dur Naya"] = "peru",
	["Imperial Dominion"] = "indian_red",
}

local badWords = {"bluewaffle", "goatse", "semen", "fuck", "shit", "dick", "cock", "cunt",
	"piss", "damn", "ass", "bitch", "bollock", "pussy", "fag", "genital", "galleus", "nigg",
	"spick", "chink", "kike", "penis", "pussy", "cum", "cuck", "fucc", "cucc", "meme", "heck",
	"dang"
}

local rebukes = {
	"Iosyne, the Muse didn't invent the Aetolian language just so you could sully it with your disgusting mouth, NAME. Issued.",
	"The only thing Damariel hates more than His Brother Haern is a foulmouth, NAME.",
	"NAME, your language is so awful that you killed Rahn for the third time. Issued.",
	"I thought it was pretty bad when the Kerrithrim attacked Esterport, NAME, but your nasty language really takes the cake. Enjoy your issue.",
	"When Severn descended from Chatou Rehl to save the world from the Shadow Mother, what He really meant was that mother of a foul mouth you've got there, NAME. I'm issuing you.",
	"NAME, your dirty language is so bad, it's pushing Albedos's release date to 2021.",
	"You know, NAME, Xon Vekato was given the Revelation with the hopes that there would be a new Age free of your bad language.",
	"When Abhorash became the Great Mhunna, it was in the hopes that he could liberate the Mhun race from NAME's atrocious language. Issued.",
	"Clearly we need to return to a day when Galleus monitored Aetolia for 12 hours a day, so people like NAME couldn't ruin it with their bad language.",
	"I object to your bad language, NAME, and I will contest you!",
	"I was relieved when the Nazedha stopped bombing the Yggdrasil, but NAME's awful language reminded me that the horror is not yet over.",
	"I'm issuing you, NAME, for your foul mouth. If She weren't currently jailed in the Master Crystal, Niuri would be furious with you.",
	"Do you know why Zoharim set fire to the Dominion, NAME? Because of bad language like yours.",
	"Did you know that when She was hatched from a phoenix egg, Avareti's first words were 'I hope My children never swear as badly as NAME does'?",
	"I hear at the Vegas God Meet, Jeremy Saunders had proposed shutting down Aetolia forever because he could never get NAME to stop swearing.",
	"NAME, your foul mouth is bad enough to split Severn and Ivoln up again.",
	"Issued.",
	"When Baelak Shipbreaker sunk Ashtan underneath the sea, he was hoping he could take NAME's filthy mouth with it.",
}

local trolledChannels = {
	["Spirean Hunters"] = "clan shunt tell",
--	["The Front Line"] = "clan frontline tell",
--	["Web"] = "wt",
	["The Side Line"] = "clan sideline tell",
}

local GetWebTarget = function (msg)
	selectString(msg, 1)
	if isAnsiFgColor(15) ~= true then
		display("Wrong color.")
		return
	end

	local t
	if msg:match("^Target%: (.+)%.$") == nil then
		return
	end

	t = msg:match("^Target%: (.+)%.$")

	cd.target = t
	changeTarget(getTarget())
end

local DisplayTell = function (io, name, msg, ooc)
	local bgC = "black"
	local wrapC = "\""
	if ooc == 1 then
		bgC = "dead_grey"
		wrapC = "\("
	end

	erase()

	if io == "in" then
		if ooc == 1 then
			cecho("&lt;a_darkgrey,dead_grey&gt;" .. string.space(64 - name:len()) .. "\(&lt;orange,dead_grey&gt;OOC&lt;a_darkgrey,dead_grey&gt;\) ")
		else
			cecho("&lt;a_white,black&gt;" .. string.space(70 - name:len()))
		end
		cecho("&lt;a_white," .. bgC .. "&gt;" .. name .. " &lt;a_darkgrey&gt;\&gt;\&gt;\&gt; &lt;gold&gt;You  ")
	else
		cecho("&lt;a_white,"..bgC.."&gt;  You &lt;a_darkgrey&gt;\&gt;\&gt;\&gt; &lt;gold&gt;" .. name)
		if ooc == 1 then
			cecho("&lt;a_darkgrey,dead_grey&gt; \(&lt;orange,dead_grey&gt;OOC&lt;a_darkgrey,dead_grey&gt;\)" .. string.space(64 - name:len()))
		end
	end

	cecho("\n&lt;a_yellow&gt;" .. string.wrap2(msg, 76, 2, ""))

	local hour = fixTime(getTime().hour)
	local min = fixTime(getTime().min)

	chat:cecho("&lt;a_darkblue&gt;\[&lt;orange_red&gt;" .. hour .. ":" .. min .. "&lt;a_darkblue&gt;\] ")
	chat:cecho("&lt;a_yellow&gt;" .. msg .. "\n")
	cd.PlaySound("Text 1")
end

local TrollBadLanguage = function (chan, user, mesg)
	if user == "You" or user ~= "Michi" then
		return
	end

	if trolledChannels[chan] then
		local s = trolledChannels[chan]
		for _, word in ipairs(badWords) do
			if string.find(mesg:lower(), word) ~= nil then
				local r = rebukes[math.random(#rebukes)]
				r = r:gsub("NAME", user)
				send(s .. " " .. r, false)
				break
			end
		end
	end
end

local ChannelTalkHandler = function (chan, user, says, msg)
	msg = tostring(msg)

	if msg:match("^Target%:") ~= nil and user ~= "You" then
		GetWebTarget(msg)
	end

	local chanColor, userColor, symbol
	selectString(line, 1)
	local chanR, chanG, chanB = getFgColor() -- For use with the temp color setting.
	deselect()
	if chanColors[chan] then
		chanColor = chanColors[chan]
	else
		color_table.temp = {chanR, chanG, chanB}
		chanColor = "temp"
	end
	if chanSymbols[chan] then symbol = chanSymbols[chan] .. " " else symbol = "  " end
	if userColors[user] then userColor = userColors[user] else userColor = "a_darkgrey" end

	erase()

  cecho("&lt;a_white&gt;%s&lt;a_darkgrey&gt;\[&lt;%s&gt;%s&lt;a_darkgrey&gt;\] &lt;%s&gt;%s&lt;a_darkgrey&gt;: &lt;%s&gt;%s" %
    {symbol, darkColor(chanColor), chan, userColor, user, chanColor, msg}
  )

	local hour = fixTime(getTime().hour)
	local min = fixTime(getTime().min)

	chat:cecho(
		"&lt;a_darkblue&gt;\[&lt;orange_red&gt;" .. hour .. ":" .. min .. "&lt;a_darkblue&gt;\] "
		.. "&lt;a_darkgrey&gt;\[&lt;" .. darkColor(chanColor) .. "&gt;" .. chan .. "&lt;a_darkgrey&gt;]"
		.. " &lt;" .. userColor .. "&gt;" .. user .. "&lt;a_darkgrey&gt;: &lt;" .. chanColor .. "&gt;" .. msg .. "\n"
	)

	TrollBadLanguage(chan, user, msg)

	if chan == "Market" and user == "Takezo" then
		playSoundFile([[C:\Users\Brendon\Google Drive\kabuki_sound.mp3]])
	end
end

local TattooTalkHandler = function (user, msg)
	msg = tostring(msg)

	selectString(line, 1)
	local chanR, chanG, chanB = getFgColor() -- For use with the temp color setting.
	deselect()
	color_table.temp = {chanR, chanG, chanB}

  erase()

  cecho("&lt;a_white&gt;~ &lt;a_darkgrey&gt;from %s; &lt;temp&gt;%s" % {user, msg})

	local hour = fixTime(getTime().hour)
	local min = fixTime(getTime().min)

  chat:cecho("&lt;a_darkblue&gt;\[&lt;orange_red&gt;%s:%s&lt;a_darkblue&gt;\] &lt;a_darkgrey&gt;from %s; &lt;temp&gt;%s\n" % {hour, min, user, msg})
end

local CityFocusAlertHandler = function (...)
end

local IncomingTellHandler = function (src, msg, ooc)
	DisplayTell("in", src, msg, ooc)
end

local OutgoingTellHandler = function (dest, msg, ooc)
	DisplayTell("out", dest, msg, ooc)
end

handleCommunication = function (e, ...)
	if e == "channel talk" then
		ChannelTalkHandler(...)
  elseif e == "tattoo talk" then
    TattooTalkHandler(...)
	elseif e == "city focus alert" then
		CityFocusAlertHandler(...)
	elseif e == "incoming tell" then
		IncomingTellHandler(...)
	elseif e == "outgoing tell" then
		OutgoingTellHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>channel talk</string>
								<string>city focus alert</string>
								<string>incoming tell</string>
								<string>outgoing tell</string>
								<string>tattoo talk</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleDefenseChanges</name>
							<packageName></packageName>
							<script>local DefenseGainedHandler = function (name)
	debugecho("DefenseGainedHandler(): adding " .. name .. ".")
	if name == "miasma" or name == "warmth" or name == "safeguard" then
		def.add("endgame_buff")
	else
		if name == "fangbarrier" then
			attemptingFangbarrier = nil
		end

		def.add(name)
	end
end

local DefenseStrippedHandler = function (name)
	debugecho("DefenseStrippedHandler(): removing " .. name .. ".")
	if name == "miasma" or name == "warmth" or name == "safeguard" then
		def.rem("endgame_buff")
	else
		def.rem(name)
	end
end

local DefenseListUpdateHandler = function (name)
	if name == "miasma" or name == "warmth" or name == "safeguard" then
		def.add("endgame_buff")
	else
		if name == "fangbarrier" then
			attemptingFangbarrier = nil
		end

		def.add(name)
	end
end

local DefenseDroppedHandler = function (name)
	if name == "miasma" or name == "warmth" or name == "safeguard" then
		def.rem("endgame_buff")
	else
		def.rem(name)
	end
end

handleDefenseChanges = function (e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "defense gained" then
		DefenseGainedHandler(...)
	elseif e == "defense stripped" then
		DefenseStrippedHandler(...)
	elseif e == "defense list update" then
		DefenseListUpdateHandler(...)
	elseif e == "defense dropped" then
		DefenseDroppedHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>defense stripped</string>
								<string>defense gained</string>
								<string>defense list update</string>
								<string>defense dropped</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleGoldChanges</name>
							<packageName></packageName>
							<script>local GoldChangedHandler = function (last, new)
	local cColor, cSymbol, cChange
	if last &lt; new then
		cColor = "gold"
		cSymbol = "+"
		cChange = new - last
	elseif last &gt; new then
		cColor = "firebrick"
		cSymbol = "-"
		cChange = last - new
	end

	cecho("\n&lt;a_darkgrey&gt;You have &lt;a_yellow&gt;" .. pNum(cd.player.gold) .. " &lt;a_darkgrey&gt;gold. &lt;dark_goldenrod&gt;\(&lt;" .. cColor .. "&gt;" .. cSymbol .. pNum(cChange) .. "&lt;dark_goldenrod&gt;\)")
end

handleGoldChanges = function (e, ...)
	if e == "gold changed" then
		GoldChangedHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>gold changed</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleCombatEvents</name>
							<packageName></packageName>
							<script>local function DeathHandler()
	corpseRoom = cd.room.num
	cd.status.dead = true
	openPK = false
	aff.clearAll()
end

local function KillingBlowHandler(kill, type, fullname)
	if type == "mob" then
		if cd.modules.superbashing == true then
			raiseEvent("update mob list")
			raiseEvent("ui.update", "readout")
		end
	end

	fullname = fullname or kill

	erase()
	cecho("&lt;a_darkred&gt;\-\- &lt;a_darkgrey&gt;You have slain &lt;a_red&gt;" .. fullname .. "&lt;a_darkgrey&gt;. &lt;a_darkred&gt;" .. string.rep("-", (cd.sys.wrapWidth - 20) - fullname:len()))
end

local StoodUpHandler = function ()
end

local FellDownHandler = function ()
end

local FlyingHandler = function (status)
end

local FangbarrierHandler = function (status)
end

local CloakHandler = function (status)
end

local BlindnessHandler = function (status)
end

local DeafnessHandler = function (status)
end

handleCombatEvents = function (e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "killing blow" then
		KillingBlowHandler(...)
	elseif e == "stood up" then
		StoodUpHandler(...)
	elseif e == "fell down" then
		FellDownHandler(...)
	elseif e == "flying change" then
		FlyingHandler(...)
	elseif e == "fangbarrier change" then
		FangbarrierHandler(...)
	elseif e == "cloak change" then
		CloakHandler(...)
	elseif e == "blindness change" then
		BlindnessHandler(...)
	elseif e == "deafness change" then
		DeafnessHandler(...)
	elseif e == "death" then
		DeathHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>killing blow</string>
								<string>flying change</string>
								<string>fangbarrier change</string>
								<string>cloak change</string>
								<string>blindness change</string>
								<string>deafness change</string>
								<string>death</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleBashingEvents</name>
							<packageName></packageName>
							<script>local item_aliases = {
	["a lion's claw"] = "lionclaw",
	["a small pile of fish scales"] = "scales",
	["a durable pickaxe"] = "pickaxe",
	["the tongue of a large canine"] = "tongue",
	["snow wight essence"] = "essence",
	["a delicate dragonfly wing"] = "wing",
	["a boar's heart"] = "heart",
	["a pile of crushed bone powder"] = "powder",
	["a small vial of snake oil"] = "snakeoil",
	["a slice of boar's heart"] = "boarheart",
	["a puff of crystal powder"] = "powder",
}

local BashingRoomClearHandler = function (override)
  if override == true then
    cd.bashing.currentlyAttacking = false
    attempt("bash notification", notify, "Auto-bashing", "Bashing is forbidden here, aborting.", false)
  end

  if cd.modules.autobashing == true then
  	erase()

  	if cd.modules.superbashing ~= true or sb.currentTarget == nil then
  		cd.bashing.currentlyAttacking = false
  		if cd.bashing.notifications == true then
  			attempt("bash notification", notify, "Auto-bashing", "Room clear.", false)
  		end
  
  	else
  		if cd.bashing.notifications == true then
  			attempt("bash notification", notify, "Superbashing", "Target dead. Acquiring new target.", false)
  		end
  	end
  end
end

local MobDropHandler = function (item, mob)
	item = item:lower()

	if item_aliases[item] ~= nil then
		AddAutoLoot(item_aliases[item])
	end
end

function handleBashingEvents(e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "bashing.room_clear" then
		BashingRoomClearHandler(...)
	elseif e == "mob drop" then
		MobDropHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>mob drop</string>
								<string>bashing.room_clear</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleClassEvents</name>
							<packageName></packageName>
							<script>local classes = {
	"Monk", "Praenomen", "Sentinel", "Templar", "Indorani", "Luminary",
	"Syssin", "Carnifex", "Zealot", "Archivist", "Bloodborn", "Teradrim",
	"Shapeshifter", "Ascendril", "Sciomancer", "Shaman", "Wayfarer"}

local UpdateClassAliases = function ()
	if isActive("CA - " .. cd.player.class, "alias") ~= 1 then
		enableAlias("CA - " .. cd.player.class)
	end
end

local ClassChangeHandler = function (class, ...)
	if class == "Nightstalker" then
		class = "Praenomen"
	end

	for _, v in ipairs(classes) do
		if v ~= class then
			disableAlias("CA - " .. v)
		end
	end

	enableAlias("CA - " .. class)
end

function handleClassEvents(e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "class change" then
		ClassChangeHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>class change</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleBroadcasts</name>
							<packageName></packageName>
							<script>local TappedLesserHandler = function (...)
	if cd.player.name == "Lin" then
		-- send("clan frontline tell I just met you, and this is crazy... but there's a leyline, let's take it maybe!", false)
	end
end

handleBroadcasts = function (e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "tapped lesser" then
		TappedLesserHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>tapped lesser</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleApothecaryEvents</name>
							<packageName></packageName>
							<script>local ApothecaryBeginHandler = function (part)
	autoCollectPart = part
	autoCollection = true
	autoCollectionNeedScalpel = nil

	notify("APC", "Beginning auto-collection of &lt;a_white&gt;" .. autoCollectPart .. "&lt;a_grey&gt;.", false)
end

local ApothecaryWieldScalpelHandler = function ()
	autoCollectionNeedScalpel = true
end

local ApothecaryFinishedHandler = function ()
	autoCollectPart = nil
	autoCollection = nil
	autoCollectionNeedScalpel = nil
	echo("\n")
	notify("APC", "Auto-collection ended.", false)
	sendStack("unwield scalpel", "incall")
end

local ApothecaryNoScalpelHandler = function ()
	if autoCollection == true then
		erase()
		notify("APC", "No scalpel found in inventory. &lt;a_red&gt;Aborting&lt;a_grey&gt;.")
	end

	ApothecaryFinishedHandler()
end

local ApothecaryWieldedScalpelHandler = function ()
	autoCollectionNeedScalpel = nil
end

AutoCollectApothecaryParts = function ()
	if onSYNC() ~= true then
		return
	end

	if autoCollectionNeedScalpel == true then
		attempt("auto-collection", "wield scalpel")
		return
	end

	attempt("auto-collection", "collect " .. autoCollectPart .. " from corpse")
end

handleApothecaryEvents = function (e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "part collection begin" then
		ApothecaryBeginHandler(...)
	elseif e == "part collection need scalpel" then
		ApothecaryWieldScalpelHandler(...)
	elseif e == "part collection no scalpel" then
		ApothecaryNoScalpelHandler(...)
	elseif e == "part collection finish" then
		ApothecaryFinishedHandler(...)
	elseif e == "part collection wielded scalpel" then
		ApothecaryWieldedScalpelHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>part collection begin</string>
								<string>part collection finish</string>
								<string>part collection need scalpel</string>
								<string>part collection no scalpel</string>
								<string>part collection wielded scalpel</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleMiscGameEvents</name>
							<packageName></packageName>
							<script>local chars = {
	["Lin"] = {
		"disguise as living human",
	},
}

local CustomCharacterLoginHandler = function ()
	if not cd.player.name or cd.player.name == "" or not table.contains(chars, cd.player.name) then
		return
	end

	sendStack(chars[cd.player.name])
end

local LoginHandler = function ()
	sendGMCP('Core.Supports.Add ["IRE.Rift"]')
	sendGMCP('Core.Supports.Add ["Comm.Channel 1"]')
	sendGMCP('Core.Supports.Add ["IRE.Time"]')

	CustomCharacterLoginHandler()
end

NewDayHandler = function ()
	-- erase()
	-- tempTimer(2, [[displayHowlingDate()]])
	-- tempTimer(4, [[displayQuote()]])
end

function handleMiscGameEvents(e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "login" then
		LoginHandler(...)
	elseif e == "new day" then
		NewDayHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>new day</string>
								<string>login</string>
							</eventHandlerList>
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleBalances</name>
							<packageName></packageName>
							<script>local OnCuringHandler = function (bal, ...)
	debugecho("Regained " .. bal .. " balance.")
end

local OnArmBalHandler = function (...)
end

local OnBalHandler = function (...)
end

local OnEqHandler = function (...)
end

local OnAbilityHandler = function (...)
end

local OnSyncHandler = function (...)
	debugecho("On Sync.")
	if autoLoot and #autoLoot &gt;= 1 then
		for i,v in ipairs(autoLoot) do
			attempt("autoloot " .. v, "get " .. v)
		end
	end

	autoLoot = {}
end

handleBalances = function (e, ...)
	debugecho("Custom Event: " .. e .. ".")
	if e == "on balance" then
		if cd.EQ == true then
			OnSyncHandler(...)
		else
			OnBalHandler(...)
		end
	elseif e == "on equilibrium" then
		if cd.BAL == true then
			OnSyncHandler(...)
		else
			OnEqHandler(...)
		end
	elseif e == "on arm balance" then
		if onArmBAL() == true then
			OnSyncHandler(...)
		else
			OnArmBalHandler(...)
		end
	elseif e == "on curing balance" then
		OnCuringHandler(...)
  elseif e == "on ability balance" then
    OnAbilityHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>on balance</string>
								<string>on equilibrium</string>
								<string>on curing balance</string>
								<string>on arm balance</string>
								<string>on ability balance</string>
							</eventHandlerList>
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Queue</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>handleQueueEvents</name>
							<packageName></packageName>
							<script>-- local function BalHandler(cmd)
-- end
-- 
-- local function EqHandler(cmd)
-- end

local function EqBalHandler(cmd)
  erase()
  queue_override = false
  clearQueue()
end

function handleQueueEvents(e, ...)
  EqBalHandler(...)
  -- if e == "queue.bal" then
    -- BalQueueHandler(...)
  -- elseif e == "queue.eq" then
    -- EqQueueHandler(...)
  -- elseif e == "queue.eqbal" then
    -- EqBalHandler(...)
  -- end
end</script>
							<eventHandlerList>
								<string>queue.bal</string>
								<string>queue.eq</string>
								<string>queue.eqbal</string>
							</eventHandlerList>
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Context Actions</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>handleContextActionEvents</name>
							<packageName></packageName>
							<script>-- For now, actions are purely room-based, but this may change in the future.

-- The nested table structure is cumbersome, but allows for multiple action
-- sets per room.
local rooms_with_actions = {
	-- Enorian Prayer Altar.
	[56136] = {{"prayer1", "Cleanse before prayer.", "clean"}, {"prayer2", "Worship your God.", "worship dhar joyously"}},
}

local AddActionHandler = function (id, desc, command, index)
	cd.addAction(id, desc, command, index)
end

local RemoveActionHandler = function (id)
	cd.removeAction(id)
end

local ClearActionHandler = function ()
	cd.clearActions()
end

local UpdateActionHandler = function ()
	cd.clearActions()
	
	-- 1. Room flag-based actions, e.g. shop, library, etc.
		if cd.room.shop == true then
			cd.addAction("shop", "Peruse local goods.", "wares")
		end
		
		if cd.room.library == true then
			cd.addAction("library", "Browse the catalog.", "library catalog")
		end
	
	-- 2. Specific room checks.
		if rooms_with_actions[cd.room.num] then
			local i, d, c
			if type(rooms_with_actions[cd.room.num]) == "table" then
				for _, t in ipairs(rooms_with_actions[cd.room.num]) do
					i, d, c = t[1], t[2], t[3]
					cd.addAction(i, d, c)
				end
			else
				i, d, c = rooms_with_actions[cd.room.num][1], rooms_with_actions[cd.room.num][2], rooms_with_actions[cd.room.num][3]
				cd.addAction(i, d, c)
			end
		end
	
	-- 3. NPC checks.
	
	-- 4. Misc. checks.
		if cd.room.shrine ~= nil then
			cd.addAction("shrine", "Offer sacrifice to the resident God.", "offer corpses")
		end
	
	raiseEvent("ui.update", "actions")
end

handleContextActionEvents = function (e, ...)
	if e == "add action" then
		AddActionHandler(...)
	elseif e == "remove action" then
		RemoveActionHandler(...)
	elseif e == "clear actions" then
		ClearActionHandler(...)
	elseif e == "update actions" then
		UpdateActionHandler(...)
	end
end</script>
							<eventHandlerList>
								<string>add action</string>
								<string>remove action</string>
								<string>clear actions</string>
								<string>update actions</string>
							</eventHandlerList>
						</Script>
					</ScriptGroup>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>API</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Aetolian Environment API</name>
					<packageName></packageName>
					<script>-- Definition of the Aetolian environment.
aetolia = {}

-- The Aetolian year.
aetolia.calendar = {"Variach", "Severin", "Ios", "Arios", "Chakros", "Khepary", "Midsummer", "Lleian", "Lanosian", "Niuran", "Slyphian", "Haernos"}

-- Concoctions, and how to make them.
aetolia.concoctions = {
	["health"] = {"valerian", "valerian", "goldenseal", "ginseng", "myrrh"},
	["vigor"] = {"dust", "dust", "moss", "shard"},
	["epidermal"] = {"kuzu", "kuzu", "bloodroot", "hawthorn", "ginseng"},
	["mending"] = {"dust", "kelp", "kuzu", "ginger", "ginger"},
	["frost"] = {"kelp", "pear", "ginseng"},
	["mass"] = {"moss", "bloodroot", "kuzu", "dust"},
	["mana"] = {"slipper", "bellwort", "hawthorn", "bloodroot"},
	["caloric"] = {"kuzu", "kuzu", "valerian", "kelp", "kelp", "bellwort"},
	["immunity"] = {"sac", "ash", "echinacea", "echinacea"},
	["levitation"] = {"kelp", "kelp", "pear", "feather"},
	["venom"] = {"sac", "cohosh", "kelp", "skullcap"},
	["speed"] = {"skin", "skin", "kuzu", "goldenseal", "ginger"},
}

-- List of herbs, organs, and other curatives.
aetolia.curatives = {
	herbs = {
		"ash", "goldenseal", "kelp", "lobelia", "ginseng", "bellwort", "bloodroot",
		"moss", "skullcap", "kola", "cohosh", "hawthorn", "bayberry", "echinacea",
		"elm", "valerian", "sileris", "myrrh"
	},
	elixirs = {
		"health", "mana", "levitation", "immunity", "venom", "speed", "frost"
	},
	salves = {
		"epidermal", "mending", "caloric", "mass", "restoration"
	},
	organs = {
		"bladder", "liver", "eyeball", "testis", "ovary", "castorite", "lung",
		"kidney", "pineal", "sulphurite", "tongue", "heart", "stomach", "spleen",
		"tumor", "bone"
	},
	tinctures = {
		"demulcent", "antispasmadic", "sudorific"
	},
	serums = {
		"analeptic", "stimulant", "euphoric", "calmative", "carminative", "nervine",
		"refrigerative"
	},
	poultices = {
		"oculi", "orbis", "fumeae", "pueri", "jecis"
	},
	venoms = {
		"xentio", "oleander", "eurypteria", "kalmia", "strophanthus", "digitalis",
		"darkshade", "curare", "epteth", "prefarar", "monkshood", "euphorbia",
		"colocasia", "oculus", "hepafarin", "jalk", "vernalius", "epseth", "larkspur",
		"slike", "araceae", "voyria", "delphinium", "vardrax", "loki", "aconite",
		"selarnia", "gecko", "scytherus"
	}
}

-- List of commodities.
aetolia.commodities = {
	"steel", "wood", "iron", "leather", "coal", "obsidian", "cloth", "gold", "rope", "ice", "silver", "ash"
}

aetolia.comm_shops = {
	["Duiran"] = 43840,
	["Enorian"] = 2093,
	["Bloodloch"] = 9376,
	["Spinesreach"] = 12655,
	["Aureliana"] = 34249,
	["Hubride"] = 4546,
	["El'jazira"] = 4123,
	["Moghedu"] = 30,
	["Saluria"] = 10119,
	["Scidve"] = 10197,
	["Torston"] = 20278,
	["Bihrkaen"] = 3846,
	["Esterport"] = 53381,
}

aetolia.city_funds = {
	["Duiran"] = {
		["Emissary of the Consulate"] = {["ministry"] = "ambassador", ["budget"] = 20000},
		["Fury of the Wilds"] = {["ministry"] = "war", ["budget"] = 0},
		["Ranger of the Heartwood"] = {["ministry"] = "security", ["budget"] = 600000},
		["Communal Actuary"] = {["ministry"] = "chancellor", ["budget"] = 0},
		["Wildwood Chamberlain"] = {["ministry"] = "treasurer", ["budget"] = 1000000},
		["Reaper of Harvests"] = {["ministry"] = "trade", ["budget"] = 0},
		["Lorekeeper"] = {["ministry"] = "culture", ["budget"] = 0},
		["Artisan of Wealds"] = {["ministry"] = "development", ["budget"] = 10000},
		["Prophet of the Hollow"] = {["ministry"] = "research", ["budget"] = 0},
	},
}

aetolia.ministries = {
	-- Misc
	["Divine Patron"] = "patron",
	["Divine Advisory"] = "advisory",

	-- Duiran
	["Speakers of the Heartwood"] = "leaders",
	["Voice of the Wilds"] = "cardinal",
	["Emissary of the Consulate"] = "ambassador",
	["Fury of the Wilds"] = "war",
	["Ranger of the Heartwood"] = "security",
	["Wildwood Chamberlain"] = "treasurer",
	["Seneschal"] = "steward",
	["Reaper of Harvests"] = "trade",
	["Communal Actuary"] = "chancellor",
	["Lorekeeper"] = "culture",
	["Artisan of Wealds"] = "development",
	["Prophet of the Hollow"] = "research",

   -- Spinesreach
   ["Chair of the Secretariat"] = "leader",
   ["Senators"] = "council",
   ["Primary Iterator"] = "cardinal",
   ["Proletarian Relations"] = "ambassador",
   ["Strategos"] = "war",
   ["Warden"] = "security",
   ["Adjutant of the Interior"] = "treasurer",
   ["Viceroy"] = "steward",
   ["Quartermaster General"] = "trade",
   ["Adjutant of Merchantry"] = "chancellor",
   ["Adjutant of Culture"] = "culture",
   ["Chief Engineer"] = "development",
   ["Grand Courser"] = "research",

   -- Enorian
   ["Vanguard"] = "leader",
   ["Heralds"] = "council",
   ["Cardinal"] = "cardinal",
   ["Ambassador"] = "ambassador",
   ["Knight-Marshall"] = "war",
   ["Lord Protector"] = "security",
   ["Treasurer"] = "treasurer",
   ["Steward"] = "steward",
   ["Minister of Trade"] = "trade",
   ["Chancellor"] = "chancellor",
   ["Minister of Cultural Affairs"] = "culture",
   ["Minister of Development"] = "development",
   ["Guardian of the Pylon"] = "research",

   -- Bloodloch
   ["Primus"] = "source",
   ["Regent"] = "leader",
   ["Overlords"] = "council",
   ["Weaver of Pain"] = "cardinal",
   ["Ambassador"] = "ambassador",
   ["Minister of War"] = "war",
   ["Minister of Security"] = "security",
   ["Treasurer"] = "treasurer",
   ["Steward"] = "steward",
   ["Minister of Trade"] = "trade",
   ["Magister of Commerce"] = "chancellor",
   ["Minister of Cultural Affairs"] = "culture",
   ["Minister of Development"] = "development",
   ["Minister of Research"] = "research",
}

balanceCityBudget = function ()
	display("Ding!")
end

aetolia.tattoos = {
	["firefly"] = {"yellow"},
	["moss"] = {"yellow", "blue", "red"},
	["feather"] = {"2 blue", "red"},
	["shield"] = {"2 red", "green"},
	["mindseye"] = {"green", "2 blue"},
	["hammer"] = {"2 red", "purple"},
	["cloak"] = {"3 blue"},
	["bell"] = {"3 blue", "2 red"},
	["crystal"] = {"green", "yellow", "purple"},
	["moon"] = {"red", "blue", "yellow"},
	["starburst"] = {"blue"},
	["boar"] = {"purple", "2 red"},
	["web"] = {"green", "yellow"},
	["tentacle"] = {"2 green", "purple"},
	["hourglass"] = {"2 yellow", "blue"},
	["owl"] = {"blue", "2 red", "purple"},
	["brazier"] = {"2 yellow", "2 red"},
	["prism"] = {"red", "blue", "yellow", "green", "purple"},
	["tree"] = {"5 green"},
	["mountain"] = {"green", "blue", "gold"},
	["chameleon"] = {"gold", "purple", "yellow"},
	["book"] = {"5 gold", "3 obsidian"},
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Balance API</name>
					<packageName></packageName>
					<script>onEQ = function ()
	if cd.EQ == true then return true else return false end
end

onBAL = function ()
	if cd.BAL == true then return true else return false end
end

onArmBAL = function ()
	if cd.LBAL == true and cd.RBAL == true then return true else return false end
end

onSYNC = function ()
	if onEQ() == true and onBAL() == true and onArmBAL() == true then return true else return false end
end

function showBalanceReturn(b)
	erase()
	cecho("&lt;a_green&gt;^" .. " &lt;a_darkgrey&gt;" .. b:upper() .. " balance returned! &lt;a_green&gt;^")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>System Display API</name>
					<packageName></packageName>
					<script>erase = function ()
	deleteLine()
	echo("\n")
end

notify = function (...)
	local module, str, skip_newline
	local args = {...}

	if args[#args] == false then
		skip_newline = true
		args[#args] = nil
	end

	if #args == 2 then
		module = args[1]
		str = args[2]
	elseif #args == 1 then
		module = cd.sys.shortname
		str = args[1]
	else
		error("Passed too many arguments to notify().")
	end

	cecho("&lt;a_darkgrey&gt;[" .. "&lt;dodger_blue&gt;" .. module .. "&lt;a_darkgrey&gt;]: &lt;grey&gt;" .. str)
	if skip_newline ~= true then
		send("\n")
	end
end

moduleHeader = function(modname, ...)
	-- Creates a unified header for all module displays in Razorbird.
	structure = {...}

	cecho(" &lt;a_darkblue&gt;\-\- &lt;orange_red&gt;" ..  modname .. " &lt;a_darkblue&gt;" .. string.rep("-", (cd.sys.wrapWidth - 5) - modname:len()))

	if #structure == 0 then
		cecho("\n    &lt;a_grey&gt;main &lt;a_darkgrey&gt;\&gt; &lt;dodger_blue&gt;" .. string.lower(modname) .. "\n")
	else
		local structString = ""
		for i,v in ipairs(structure) do
			if i == #structure then
				structString = structString .. " \&gt; &lt;dodger_blue&gt;" .. v
			else
				structString = structString .. " \&gt; " .. v
			end
		end
		
		cecho("\n    &lt;a_grey&gt;main&lt;a_darkgrey&gt;" .. structString .. "\n")
	end
end

moduleFooter = function ()
	cecho("\n &lt;a_darkblue&gt;" .. string.rep("-", cd.sys.wrapWidth - 2))
	send("\n")
end

iecho = function (output)
	-- iecho, or infoEcho.
	-- This interesting little ditty will reformat
	-- echoes to insert symbols, colors, and other things.

	-- Default to Aetolian grey.
	output = "&lt;a_grey&gt;" .. output

	-- Differentiating slashes, colons, etc.
	output = output:gsub("[\:\/\(\)]", "&lt;a_darkgrey&gt;%1&lt;a_grey&gt;")

	-- Player/NPC names.
	output = output:gsub("#(%w+)", "&lt;a_cyan&gt;%1&lt;a_grey&gt;")

	-- Parameter names.
	output = output:gsub("&amp;(%w+)", "&lt;a_green&gt;%1&lt;a_grey&gt;")

	-- Razorbird modules.
	output = output:gsub("@(%w+)", "&lt;orange_red&gt;%1&lt;a_grey&gt;")

	-- Special characters.
	output = output:gsub("!o", "&lt;a_green&gt;" .. string.char(7) .. "&lt;a_grey&gt;")
	output = output:gsub("!x", "&lt;a_red&gt;" .. string.char(7) .. "&lt;a_grey&gt;")
	output = output:gsub("!&lt;", "&lt;a_darkcyan&gt;" .. string.char(171) .. "&lt;a_grey&gt;")
	output = output:gsub("!&gt;", "&lt;a_darkcyan&gt;" .. string.char(187) .. "&lt;a_grey&gt;")

	cecho(output)
end

debugecho = function (str, token)
	token = token or "D"
	if cd.sys.debugging == true then
		cecho("\n&lt;dim_gray&gt;\&lt;&lt;yellow&gt;" .. token .. "&lt;dim_gray&gt;\&gt; &lt;grey&gt;" .. str)
	end
end

sysLine = function (str)
	echo("\n")
	if str then
		cecho("&lt;a_darkblue&gt;\-\- &lt;a_white&gt;" .. str .. " &lt;a_darkblue&gt;" .. string.rep("-", (cd.sys.wrapWidth - 4) - str:len()))
	else
		cecho("&lt;a_darkblue&gt;" .. string.rep("-", cd.sys.wrapWidth))
	end
end

getRGB = function (colorName)
	local red = color_table[colorName][1]
	local green = color_table[colorName][2]
	local blue = color_table[colorName][3]

	return red, green, blue
end

function pNum(n)
	-- pNum, aka prettyNumber().
	-- Inserts commas into number values.

	if type(n) ~= "string" and type(n) ~= "number" then
		error("Passed invalid type (" .. type(n) .. ") to pNum().")
		return
	end

	n = tostring(n)

	if n:match("^%d+$") == nil then
		return n
	elseif n:len() &lt;= 3 then
		return n
	end

	local output = ""

	local count = 0
	for i = n:len(), 1, -1 do
		count = count + 1
		local x = n:sub(i, i)
		if i == n:len() then
			output = x
		elseif i == 1 then
			output = x .. output
		else
			if count == 3 then
				count = 0
				output = "," .. x .. output
			else
				output = x .. output
			end
		end
	end

	return output
end

instakillWarning = function (attack)
	echo("\n")
	sysLine("Instakill Warning")
	cecho("     &lt;a_red&gt;" .. attack:upper() .. "!\n")
	sysLine()
end

rewrite = function (str)
  erase()
  cecho(str)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Player API</name>
					<packageName></packageName>
					<script>-- Status checks.

local openPKAreas = {
	"the Hunting Grounds",
	"the Shattered Vortex",
}

isEndgame = function () -- Checks for endgame curing, so tekal doesn't count.
	if cd.player.race == "yeleni" or
		cd.player.race == "azudim" or
		cd.player.race == "idreth" or
		cd.player.race == "ankyrean" or
		cd.player.race == "chaos lord" or
    cd.player.race == "titan" or
    cd.player.race == "nocturn" then
		return true
	else
		return false
	end
end

isGod = function ()
	if cd.player.race == "celani" or
		cd.player.race == "immortal" or
		cd.player.race == "god" then
		return true
	else
		return false
	end
end

isUndead = function ()
	return cd.player.undead
end

isClassless = function () return cd.player.class == "none" end
isMonk = function () return cd.player.class == "Monk" end
isZealot = function () return cd.player.class == "Zealot" end
isNecromancer = function () return cd.player.class == "Indorani" end
isMage = function () return cd.player.class == "Ascendril" end
isSciomancer = function () return cd.player.class == "Sciomancer" end
isLycan = function () return cd.player.class == "Shapeshifter" end
isVampire = function () return cd.player.class == "Praenomen" end
isTemplar = function () return cd.player.class == "Templar" end
isShaman = function () return cd.player.class == "Shaman" end
isWayfarer = function () return cd.player.class == "Wayfarer" end
isArchivist = function () return cd.player.class == "Archivist" end
isSyssin = function () return cd.player.class == "Syssin" end

-- Condition checks.

isProne = function () return cd.status.prone == true end
isBleeding = function () if cd.status.bleeding ~= 0 then return cd.status.bleeding else return false end end
isStanced = function () if cd.status.stance ~= "" then return cd.status.stance else return false end end

changeTarget = function (tar, broadcast)
  cd.enemy.name = getTarget()

	if broadcast ~= true then broadcast = nil end

	if cd.modules.pk == true then
		send("tunnelvision " .. getTarget(), false)

		-- if isLycan() == true then
			-- send("qeb snarling " .. getTarget(), false)
		-- end
	end

	if cd.modules.calling == true and broadcast == true then
		cd.Broadcast("Target: " .. tar:title())
	end
end

hasOpenPKAura = function ()
	if openPK == true then
		return true
	end

	if table.contains(openPKAreas, cd.room.area) == true then
		return true
	end

	return false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>GMCP Request Hooks</name>
					<packageName></packageName>
					<script>function RefreshInventory()
	sendGMCP("Char.Items.Inv")
	send(" ")
end

function RefreshPlayers()
	sendGMCP("Comm.Channel.Players")
	send(" ")
end

function RefreshCache()
	sendGMCP("IRE.Rift.Request")
	send(" ")
end

function SupportsCache()
	sendGMCP("core.supports.add \[\"IRE.Rift 1\"\]")
	send(" ")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Mapper API</name>
					<packageName></packageName>
					<script>cd.map.envids = {
	["undefined"] =					0,
	["chaos"] = 						1,
	["constructed underground"] = 	2,
	["natural underground"] = 		3,
	["forest"] = 						4,
	["beach"] = 						5,
	["desert"] = 						6,
	["grasslands"] = 					7,
	["urban"] = 						8,
	["hills"] = 						9,
	["river"] = 						10,
	["path"] = 						11,
	["road"] = 						12,
	["valley"] = 						13,
	["mountains"] = 					14,
	["swamp"] = 						15,
	["tundra"] = 						16,
	["jungle"] = 						17,
	["tsol'aa city"] = 				19,
	["ocean"] = 						20,
	["garden"] = 						21,
	["freshwater"] = 					22,
	["sewer"] = 						23,
	["deep ocean"] = 					24,
	["reef"] = 						25,
	["ruins"] = 						26,
	["village"] = 						27,
	["underwater city"] = 			28,
	["temple"] = 						29,
	["ice"] = 							30,
	["graveyard"] = 					31,
	["mines"] = 						32,
	["onboard"] = 						33,
	["canyon"] = 						34,
	["within a tree"] = 				36,
	["crater"] = 						37,
	["lava"] = 						39,
	["lifeless sands"] = 				54,
	["a bridge"] = 					55,
	["logged forest"] = 				56,
	["camp site"] = 					57,
	["shadows"] = 						58,
	["cliffs"] =						59,
	["castle"] = 						61,
	["airship wreckage"] = 			62,
	["ethereal"] = 					67,
	["cavern"] = 						69,
	["grotto"] = 						70,
	["haven"] =						71,
	["petrified forest"] =          73,
	["primordial earth"] =          74,
	["ancient forest"] = 75,
}

cd.map.envidsr = {};
for name, id in pairs(cd.map.envids) do
	cd.map.envidsr[id] = name
end

cd.map.environInfo = {
	["undefined"] = {["short"] = "error", ["color"] = "a_red"},
	["chaos"] = {["short"] = "chaos", ["color"] = "medium_violet_red"},
	["constructed underground"] = {["short"] = "csund", ["color"] = "light_slate_grey"},
	["natural underground"] = {["short"] = "ntund", ["color"] = "saddle_brown"},
	["forest"] = {["short"] = "frest", ["color"] = "forest_green"}, -- durr hurr forest green
	["beach"] = {["short"] = "beach", ["color"] = "light_goldenrod"},
	["desert"] = {["short"] = "desrt", ["color"] = "gold"},
	["grasslands"] = {["short"] = "grass", ["color"] = "yellow_green"},
	["urban"] = {["short"] = "urban", ["color"] = "dim_grey"},
	["hills"] = {["short"] = "hills", ["color"] = "a_darkgreen"},
	["river"] = {["short"] = "river", ["color"] = "royal_blue"},
	["path"] = {["short"] = "path", ["color"] = "rosy_brown"},
	["road"] = {["short"] = "road", ["color"] = "grey"},
	["valley"] = {["short"] = "vlley", ["color"] = "sea_green"},
	["mountains"] = {["short"] = "mntns", ["color"] = "dark_goldenrod"},
	["swamp"] = {["short"] = "swamp", ["color"] = "medium_sea_green"},
	["tundra"] = {["short"] = "tndra", ["color"] = "powder_blue"},
	["jungle"] = {["short"] = "jungl", ["color"] = "lawn_green"},
	["tsol'aa city"] = {["short"] = "tslct", ["color"] = "light_slate_grey"},
	["ocean"] = {["short"] = "ocean", ["color"] = "deep_sky_blue"},
	["garden"] = {["short"] = "gardn", ["color"] = "spring_green"},
	["freshwater"] = {["short"] = "frshw", ["color"] = "a_blue"},
	["sewer"] = {["short"] = "sewer", ["color"] = "sea_green"},
	["deep ocean"] = {["short"] = "dpocn", ["color"] = "a_darkblue"},
	["reef"] = {["short"] = "reef", ["color"] = "turquoise"},
	["ruins"] = {["short"] = "ruins", ["color"] = "cadet_blue"},
	["village"] = {["short"] = "villa", ["color"] = "grey"},
	["underwater city"] = {["short"] = "unwct", ["color"] = ""},
	["temple"] = {["short"] = "templ", ["color"] = ""},
	["ice"] = {["short"] = "ice", ["color"] = ""},
	["graveyard"] = {["short"] = "gvyrd", ["color"] = "dark_slate_grey"},
	["mines"] = {["short"] = "mines", ["color"] = "dim_grey"},
	["onboard"] = {["short"] = "onbrd", ["color"] = ""},
	["canyon"] = {["short"] = "canyn", ["color"] = "orange_red"},
	["within a tree"] = {["short"] = "intre", ["color"] = "sandy_brown"},
	["crater"] = {["short"] = "cratr", ["color"] = "dead_brown"},
	["lava"] = {["short"] = "lava", ["color"] = ""},
	["lifeless sands"] = {["short"] = "lfsnd", ["color"] = ""},
	["a bridge"] = {["short"] = "bridg", ["color"] = "chocolate"},
	["logged forest"] = {["short"] = "lgfst", ["color"] = ""},
	["camp site"] = {["short"] = "cmpst", ["color"] = ""},
	["shadows"] = {["short"] = "shdws", ["color"] = ""},
	["castle"] = {["short"] = "castl", ["color"] = ""},
	["airship wreckage"] = {["short"] = "wreck", ["color"] = ""},
	["ethereal"] = {["short"] = "ether", ["color"] = ""},
	["cavern"] = {["short"] = "cavrn", ["color"] = "saddle_brown"},
	["grotto"] = {["short"] = "groto", ["color"] = "dim_grey"},
	["haven"] = {["short"] = "haven", ["color"] = "ghost_white"},
	["cliffs"] = {["short"] = "cliff", ["color"] = "rosy_brown"},
	["petrified forest"] = {["short"] = "petri", ["color"] = "dark_olive_green"},
	["primordial earth"] = {["short"] = "earth", ["color"] = "saddle_brown"},
	["deep subterrane"] = {["short"] = "deep", ["color"] = "saddle_brown"},
	["open air"] = {["short"] = "air", ["color"] = "a_cyan"},
	["ancient forest"] = {["short"] = "afrst", ["color"] = "medium_sea_green"},
}

for env, id in pairs(cd.map.envids) do
	if cd.map.environInfo[env]["color"] ~= "" then
		local r, g, b = unpack(color_table[cd.map.environInfo[env]["color"]])
		setCustomEnvColor(id, r, g, b, 255)
	end
end

local isValidRoom = function (r)
	if r == nil then return false end
	if tonumber(r) == nil then return false end
	if r &lt; 0 or r &gt; 100000 then return false end
	return true
end

getEnvironmentID = function (env)
	if type(env) == "number" and cd.map.envidsr[env] ~= nil then
		return env
	end

	if cd.map.envids[env] ~= nil then
		return cd.map.envids[env]
	end

	return nil
end

getEnvironmentColor = function (env)
	local c = "a_red"

	if type(env) == "number" then
		local e = cd.map.envidsr[env]
		if e then
			c = cd.map.environInfo[e].color
		end

	elseif type(env) == "string" then
		if cd.map.environInfo[env] then
			c = cd.map.environInfo[env].color
		end
	end

	if c == "" then
		return "a_red"
	else
		return c
	end
end

-- Tallies up what environments are present in each area.
getAreaEnvironments = function (areaid)
	local roomlist, environments = getAreaRooms(areaid), {}
	-- Handler, on the occasion that getAreaRooms() fails for whatever reason.
	if not roomlist then
		iecho("getAreaRooms("..areaid..") didn't give us any results (Mudlet problem - redownloading the map might help fix it).")
		return
	end

	-- Collect the environment for each room, tally up to master table.
	for _,id in pairs(roomlist) do
		local env = getRoomEnv(id)
		if not environments[env] then
			environments[env] = 1
		else
			environments[env] = environments[env] + 1
		end
	end

	return environments
end

-- Creates an aesthetic display of an area's environments.
areaEnvironmentSurvey = function (areaid)
	-- Assume current area if none is supplied.
	if not areaid then
		areaid = getRoomArea(cd.room.num)
	end

	-- If the area doesn't exist, throw an error.
	if getRoomAreaName(areaid) == -1 then
		error("Area ID " .. areaid .. " does not exist.")
		return
	end

	-- Get the area's environments, convert to a readable list.
	local list = getAreaEnvironments(areaid)
	local list2 = {}
	-- "longest" defines the length of the longest area name.
	local longest = 0
	-- +1 is added since table key "0" isn't counted.
	local roomcount = #getAreaRooms(areaid) + 1
	for id, count in pairs(list) do
		local name = "undefined"
		if id ~= 0 and cd.map.envidsr[id] ~= nil then
			name = cd.map.envidsr[id]
		end
		if name:len() &gt; longest then
			longest = name:len()
		end
		list2[name] = count
	end

	moduleHeader("mapper", "area", "area information")

	cecho("\n&lt;a_brown&gt;  Area name:  &lt;a_grey&gt;" .. getRoomAreaName(areaid) .. ".")
	cecho("\n&lt;a_brown&gt;  Room count: &lt;a_grey&gt;" .. roomcount .. ".\n")

	for k,v in pairs(list2) do
		-- Tally up what percentage of the area this environment takes up.
		local perc = math.round((v * 100) / roomcount, 2)

		cecho("\n  " .. string.rep(" ", 5 - string.len(tostring(perc))) .. "&lt;a_darkgrey&gt;\[&lt;a_grey&gt;" .. perc .. "&lt;a_darkgrey&gt;\%\] ")
		if cd.map.environInfo[k]["color"] and cd.map.environInfo[k]["color"] ~= "" then
			fg(cd.map.environInfo[k]["color"])
		else
			fg("a_red")
		end
		echo(k:title())
		cecho(" &lt;dead_grey&gt;" .. string.rep(".", (longest + 2) - k:len()) .. " &lt;a_grey&gt;" .. v .. string.rep(" ", 2 - string.len(tostring(v))) .. " &lt;a_darkgrey&gt;rooms")
	end

  cecho("\n\n  &lt;a_brown&gt;Exits from this area:")
  areaFindAdjacentAreas(areaid)

	moduleFooter()
end

-- For finding specific environments.
areaFindEnvironments = function (env)
	if not env then
		error("No environment type supplied to areaFindEnvironments().")
		return
	end

	-- If the environment doesn't exist, throw an error.
	if getEnvironmentID(env) == nil then
		notify("Mapper", "No environment by that name or ID was found.")
		return
	end

	env = getEnvironmentID(env)

	local area_list = {}

	for i, n in pairs(getRooms()) do
		local a = getRoomArea(i)
		local e = getRoomEnv(i)
		if e == env then
			if not area_list[a] then area_list[a] = {} end
			table.insert(area_list[a], i)
		end
	end

	moduleHeader("mapper", "area", "environment search")

	cecho("\n&lt;a_brown&gt;  All areas with environment type &lt;" .. getEnvironmentColor(env) .. "&gt;" .. cd.map.envidsr[env]:title() .. "&lt;a_brown&gt;.\n")

	for a, _ in pairs(area_list) do
		local a_name = getCleanAreaName(a)
		cecho("\n  &lt;a_darkgrey&gt;" .. a_name:jright(32) .. ": &lt;a_grey&gt;" .. #area_list[a] .. " rooms.")
	end

	moduleFooter()
end

areaFindAdjacentAreas = function (area)
  area = area or getRoomArea(cd.room.num)

	local exitlist = {}

	if type(area) == "number" then
		if getRoomAreaName(area) == -1 or getRoomAreaName(area) == "" then
			error("Area not found.")
			return
		end
	elseif type(area) == "string" then
		area = mmp.findAreaID(area)
	else
		error("Invalid area type!")
		return
	end

	if area == nil then
		error("Area not found.")
		return
	end

	local roomlist = getAreaRooms(area)

	for i, vnum in ipairs(roomlist) do
		local thisArea, endArea, exits
		thisArea = getRoomArea(vnum)
		exits = getRoomExits(vnum)

		if exits ~= nil then
			for dir, evnum in pairs(exits) do
				endArea = getRoomArea(evnum)

				if thisArea ~= endArea and endArea ~= nil then
					exitlist[evnum] = {["name"] = getRoomName(evnum), ["area"] = getRoomAreaName(endArea)}
				end
			end
		end
	end

	if table.size(exitlist) &gt; 0 then
		for k, v in pairs(exitlist) do
			local area = exitlist[k].area

      cecho("\n  &lt;a_grey&gt;%s&lt;a_darkgrey&gt;: &lt;a_darkcyan&gt;%s" % {tostring(k):jright(5), area})
		end
	else
		echo("\nNothin'.")
	end
end

cd.map.updateRoom = function (r)
	r = r or cd.room.num

	if roomExists(r) ~= true then
		return
	end

	setRoomArea(r, getRoomArea(r))

	centerview(r)
end

cd.map.getPlot = function (r, span_x, span_y)
	r = r or cd.room.num

	if type(r) ~= "number" then
		error("Passed a non-numeric value to cd.map.getPlot().")
		return
	elseif r &lt; 0 then
		error("Passed an invalid (negative) number to cd.map.getPlot().")
		return
	end

	span_x = span_x or 2
	span_y = span_y or 2

	if span_x &lt; 1 or span_y &lt; 1 then
		error("Passed a span of less than 1 to cd.map.getPlot().")
		return
	end

	local x_rows = (span_x * 2) + 1
	local y_rows = (span_y * 2) + 1

	local origin = cd.room.coordinates

	local mapTable = {}

	local mod_y = span_y
	for y = 1, y_rows do
		mapTable[y] = {}
		local mod_x = -span_x

		for x = 1, x_rows do
			mapTable[y][x] = {
				["x"] = mod_x,
				["y"] = mod_y,
			}

			mod_x = mod_x + 1
		end

		mod_y = mod_y - 1
	end

	for y, _ in ipairs(mapTable) do
		for x, _ in ipairs(mapTable[y]) do
			-- Coordinates.
			mapTable[y][x].x = mapTable[y][x].x + origin.x
			mapTable[y][x].y = mapTable[y][x].y + origin.y

			-- Vnum.
			local v = getRoomsByPosition(getRoomArea(r), mapTable[y][x].x, mapTable[y][x].y, origin.z)
			local vnum
			if table.size(v) &gt; 1 then
				vnum = 100000 -- Dummy value. Means there's a room conflict.
			elseif table.size(v) == 1 then
				vnum = v[0]
			end

			if vnum ~= nil then
				mapTable[y][x].vnum = vnum
			end

			-- Environment.
			local env
			if isValidRoom(vnum) then
				env = getRoomEnv(vnum)
				if env ~= nil then
					mapTable[y][x].env = env
				end

				mapTable[y][x].env_color = getEnvironmentColor(env)
			end

			-- Exits.
			if isValidRoom(vnum) then
				mapTable[y][x].exits = getRoomExits(vnum)
			end
		end
	end

	return mapTable
end

cd.map.draw = function (win, r, size_x, size_y)
	r = r or cd.room.num
	size_x = size_x or 5
	size_y = size_y or 5

	if type(r) ~= "number" then
		error("Passed a non-numeric value to cd.map.draw().")
		return
	elseif r &lt; 0 then
		error("Passed an invalid (negative) number to cd.map.draw().")
		return
	end

	if not win or type(win) ~= "string" then
		win = "main"
	end

	-- Header.
	cecho(win, "&lt;yellow,dead_blue&gt;  " .. cd.room.area .. "." .. string.space(77 - string.len(cd.room.area)))
	cecho(win, "\n&lt;a_brown,dead_blue&gt;  " .. cd.room.name .. ". &lt;dark_violet&gt;(v&lt;violet&gt;" .. cd.room.num .. "&lt;dark_violet&gt;)" .. string.space(73 - (cd.room.name:len() + string.len(tostring(cd.room.num)))))

	local mapTable = cd.map.getPlot(r, size_x, size_y)

	for row, _ in ipairs(mapTable) do
		cecho(win, "\n\n")
		for col, _ in ipairs(mapTable[row]) do
			local vnum = mapTable[row][col].vnum
			if vnum ~= nil then
				if vnum == 100000 then
					cecho(win, "  &lt;a_yellow&gt;? ")
				else
					local env = mapTable[row][col].env
					local env_color = mapTable[row][col].env_color or "a_red"

					local label = " "
					if vnum == cd.room.num then
						label = "@"
					end

					cecho(win, " &lt;" .. env_color .. "&gt;[" .. label .. "]")
				end
			else
				cecho(win, "    ")
			end
		end
	end

	cecho(win, "\n")

	-- Footer.
	cecho(win, "\n&lt;yellow,dead_blue&gt;" .. string.space(80))
	if win == "main" then
		send("\n")
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Room API</name>
					<packageName></packageName>
					<script>local properDirs = {
	["nw"] = "northwest",
	["n"] = "north",
	["ne"] = "northeast",
	["w"] = "west",
	["e"] = "east",
	["sw"] = "southwest",
	["s"] = "south",
	["se"] = "southeast",
	["u"] = "up",
	["d"] = "down",
	["i"] = "in",
	["o"] = "out",
}

local shortDirs = {
  ["northwest"] = "nw",
  ["north"] = "n",
  ["northeast"] = "ne",
  ["west"] = "w",
  ["east"] = "e",
  ["southwest"] = "sw",
  ["south"] = "s",
  ["southeast"] = "se",
  ["up"] = "u",
  ["down"] = "d",
  ["in"] = "i",
  ["out"] = "o",
}

local oppositeDirs = {
	["southeast"] = "northwest",
	["south"] = "north",
	["southwest"] = "northeast",
	["east"] = "west",
	["west"] = "east",
	["northeast"] = "southwest",
	["north"] = "south",
	["northwest"] = "southeast",
	["down"] = "up",
	["up"] = "down",
	["out"] = "in",
	["in"] = "out",
}

cd.watchedRooms = {
	["Ivoln"] = {
		"SUMMAN1", "SUMMAN2", "SUMMAN3", "SUMMAN4", "SUMMAN5", "SUMMAN6"
	},
}

function getProperDirection(dir)
	local pDir = dir
	for short, long in pairs(properDirs) do
		if dir == short then
			pDir = long
		end
	end

	return pDir
end

function getShortDirection(dir)
  local sDir = dir
  for long, short in pairs(shortDirs) do
    if dir == long then
      sDir = short
    end
  end
  
  return sDir
end

function getOppositeDirection(dir)
	dir = getProperDirection(dir)
	local oDir
	for reg, opp in pairs(oppositeDirs) do
		if dir == reg then
			oDir = opp
		end
	end

	return oDir
end

function getLongExits()
	local e_table = {}

	-- Iterate through our main dirs table to ensure they're in the proper order.
	for dir, name in pairs(properDirs) do
		if cd.room.exits[dir] ~= nil then
			e_table[#e_table + 1] = name
		end
	end

	return table.sentence(e_table)
end

function getCleanAreaName(area)
	area = area or cd.room.area

	if type(area) == "number" then
		area = getRoomAreaName(area)
	end

	if area == nil then area = "" end

  area = area:gsub("^an unstable section of ", "")
  area = area:gsub("^the ", "")

	return area
end

roomFlags = {
	["indoors"]    = {["value"] = function () return cd.room.indoors end,    ["abbr"] = "INDR", ["color"] = "light_slate_grey"},
	["sandy"]      = {["value"] = function () return cd.room.sandy end,      ["abbr"] = "SAND", ["color"] = "light_goldenrod"},
	["water"]      = {["value"] = function () return cd.room.water end,      ["abbr"] = "WATR", ["color"] = "dodger_blue"},
	["shop"]       = {["value"] = function () return cd.room.shop end,       ["abbr"] = "$$$$", ["color"] = "goldenrod"},
	["library"]    = {["value"] = function () return cd.room.library end,    ["abbr"] = "LBRY", ["color"] = "pale_green"},
	["darkness"]   = {["value"] = function () return cd.room.darkness end,   ["abbr"] = "DARK", ["color"] = "dark_violet"},
	["light"]      = {["value"] = function () return cd.room.light end,      ["abbr"] = "LITE", ["color"] = "navajo_white"},
	["underwater"] = {["value"] = function () return cd.room.underwater end, ["abbr"] = "UNDW", ["color"] = "dark_slate_blue"},
	["overgrowth"] = {["value"] = function () return cd.room.overgrowth end, ["abbr"] = "OVGR", ["color"] = "sea_green"},
	["bank"]       = {["value"] = function () return cd.room.bank end,       ["abbr"] = "BANK", ["color"] = "saddle_brown"},
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>UI API</name>
					<packageName></packageName>
					<script>local fixTime = function (d)
	d = tostring(d)

	return string.rep("0", 2 - d:len()) .. d
end

createFrameParameters = function (id, width, height, x, y, bg)
	UpdateWindowSize()

	return {
		["id"] = id,
		["width"] = width,
		["height"] = height,
		["x"] = x,
		["y"] = y,
		["bg"] = bg
	}
end

getFrameParameters = function (tbl)
	if cd.frame.parameters[tbl] then
		local paramTable = {}

		for _, parameter in ipairs({"id", "width", "height", "x", "y", "bg"}) do
			if	not cd.frame.parameters[tbl][parameter] then
				error("getFrameParameters(): frame " .. tbl .. " has no " .. parameter .. " parameter.")
				return
			end

			if type(cd.frame.parameters[tbl][parameter]) == "function" then
				paramTable[parameter] = cd.frame.parameters[tbl][parameter]()
			else
				paramTable[parameter] = cd.frame.parameters[tbl][parameter]
			end
		end

		return paramTable
	else
		error("Tried to look up a nonexistent table with getFrameParameters().")
		return
	end
end

SendToFrame = function (id, gag, stamp)
	local hour = fixTime(getTime().hour)
	local min = fixTime(getTime().min)

	if not cd.frame.parameters[id] then
		error("SendToFrame() tried to write the current line to \"" .. id .. "\", which doesn't exist.")
		return
	end

	if gag then
		gagPrompt = true
	end

	selectString(line, 1)
	copy()

	if stamp ~= false then
		cecho(id, "&lt;a_darkblue&gt;\[&lt;orange_red&gt;" .. hour .. ":" .. min .. "&lt;a_darkblue&gt;\] ")
	end

	appendBuffer(id)
	deselect()
	deleteLine()
end

WriteToFrame = function (id, msg, gag)
	-- WriteToFrame() is used to erase a line and write custom
	-- output to a given frame.
	local hour = fixTime(getTime().hour)
	local min = fixTime(getTime().min)

	if not cd.frame.parameters[id] then
		error("WriteToFrame() tried to write the current line to \"" .. id .. "\", which doesn't exist.")
		return
	elseif not msg then
		error("WriteToFrame() tried to send an empty message to the " .. id .. " frame.")
		return
	end

	if gag then
		gagPrompt = true
	end

	deleteLine()
	cecho(id, "&lt;a_darkblue&gt;\[&lt;orange_red&gt;" .. hour .. ":" .. min .. "&lt;a_darkblue&gt;\] ")
	cecho(id, msg .. "\n")
end

UpdateWindowSize = function ()
	cd.frame.winX, cd.frame.winY = getMainWindowSize()

	return cd.frame.winX, cd.frame.winY
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Prompt API</name>
					<packageName></packageName>
					<script>cd.Gag = function (lines)
	-- This'll be set up to gag a variable number of lines later on.
	deleteLine()
	gagPrompt = true
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Combat API</name>
					<packageName></packageName>
					<script>getTarget = function ()
	if cd.modules.superbashing == true then
		if sb.currentTarget == nil then
			return "none"
		else
			return sb.currentTarget
		end
	else
		return cd.target or "none"
	end
end

AddAutoLoot = function (n)
	if not autoLoot then
		autoLoot = {n}
	else
		table.insert(autoLoot, n)
	end
end

canUseAbility = function (...)
	local opts = {...}

	if #opts == 0 then return true end

	for _, option in ipairs(opts) do
		if option == "pvp" then
		elseif option == "mobile" or option == "mob" then
		elseif option == "eqbal" then
		elseif option == "eq" then
		elseif option == "bal" then
		elseif option == "no_prone" then
		elseif option == "unhindered" then
		elseif option == "aggressive" then
		elseif option == "both_arms" then
		elseif option == "one_arm" then
		elseif option == "both_legs" then
		elseif option == "one_leg" then
		elseif option == "no_paralysis" then
		elseif option == "no_paresis" then
		elseif option == "unbound" then
		elseif option == "no_defend" then
		elseif option == "no_grace" then
		elseif option == "no_shield" then
		elseif option == "no_barrier" then
		elseif option == "unstoppable" then
		elseif option == "assist" then
		elseif option == "allow_impale" then
		elseif option == "ignore_shield" then
		elseif option == "ignore_barrier" then
		elseif option == "no_shield_bounce" then
		
		end
	end

	return false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Class API</name>
					<packageName></packageName>
					<script>-- Monk.

getStance = function ()
	return cd.status.stance or "none"
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Color API</name>
					<packageName></packageName>
					<script>darkColor = function (color)
	local dR, dG, dB
	local R, G, B = unpack(color_table[color])
	dR = R - 90
   dG = G - 90
   dB = B - 90
   if dR &lt; 0 then dR = 0 end
   if dG &lt; 0 then dG = 0 end
   if dB &lt; 0 then dB = 0 end
	color_table.darker = {dR, dG, dB}
	return "darker"
end

lightColor = function (color)
	local lR, lG, lB
	local R, G, B = unpack(color_table[color])
	lR = R + 75
   lG = G + 75
   lB = B + 75
   if lR &gt; 255 then lR = 255 end
   if lB &gt; 255 then lG = 255 end
   if lG &gt; 255 then lB = 255 end
	color_table.lighter = {lR, lG, lB}
	return "lighter"
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Sound API</name>
					<packageName></packageName>
					<script>local soundBank = {
	["Affirmative 1"] = "COMMU01_00000",
	["Affirmative 2"] = "COMMU01_00004",
	["Affirmative 3"] = "COMMU01_00005",
	["Affirmative 4"] = "COMMU01_00006",

	["Error 1"] = "COMMU01_00003",
	["Error 2"] = "A108SE2_00001",

	["Reward 1"] = "COMMU01_00008",

	["Warp 1"] = "A085SE2_00009",

	["Aura 1"] = "A108SE2_00007",

	["Bell 1"] = "A108SE2_00008",
	["Bell 2"] = "DEMO_00010",
	["Bell 3"] = "Bell",
	
	["Ding"] = "ding",
	["Chime"] = "Chime",
	["Heart"] = "Heart",
	["IM"] = "IM",
	["Info"] = "Info",
	["Kachink"] = "Kachink",
	["Link"] = "Link",
	["Text 1"] = "Text1",
	["Text 2"] = "Text2",
	["Xylo"] = "Xylo",
	
	["New Day"] = "MM_Dawn",	
}

cd.PlaySound = function (s)
	if not soundBank[s] then
		error("cd.PlaySound() tried to play an undefined sound.")
		return
	end

	playSoundFile(getMudletHomeDir() .. [[\sounds\]] .. soundBank[s] .. [[.wav]])
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>God API</name>
					<packageName></packageName>
					<script>local essTiers = {
	[1] = {225000, "blessing", 3},
	[2] = {150000, "blessing", 2},
	[3] = {120000, "favor", 3},
	[4] = {80000, "favor", 2},
	[5] = {75000, "blessing", 1},
	[6] = {45000, "boon", 3},
	[7] = {40000, "favor", 1},
	[8] = {30000, "boon", 2},
	[9] = {15000, "boon", 1},
}

doAutoBlessing = function (name, amt)
	-- Warning: Hacky!
	amt = math.round(amt / 2)
	local blessType, blessDays

	for i, _ in ipairs(essTiers) do
		local cost = essTiers[i][1]
		if amt &gt;= tonumber(cost) then
			blessType = essTiers[i][2]
			blessDays = essTiers[i][3]
			break
		end
	end

	if blessType and blessDays then
    send("bestow %s on %s for %s days" % {blessType, name, blessDays}, false)
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Misc.</name>
					<packageName></packageName>
					<script>timeTest = function (func, ...)
	local args = {...}

	if type(_G[func]) ~= "function" then
		error("timeTest() expects a function, got " .. type(_G[func]) .. ".")
		return
	end

	-- Get the time.
	local time = os.clock()
  if #args &gt; 0 then
    _G[func](unpack(args))
  else
    _G[func]()
  end
	local finish = (os.clock() - time) * 1000

  cecho("\n\n&lt;gold&gt;%s() executed in %ss" % {func, finish})
end

getAveragePing = function ()
	if not pingCount then
		return
	end

	local total = 0

	for _, v in ipairs(pingCount) do
		total = total + v
	end

	total = total / #pingCount

	return total
end

sendStack = function (...)
	local separator = "|"
	local cmds = {...}
	if #cmds == 0 then
		return
	end

	if type(cmds[1]) == "table" then
		local t = cmds[1]
		cmds = {}
		for _, command in ipairs(t) do
			table.insert(cmds, command)
		end
	end

	local stack = {[1] = {}}
	local index = 1

	for _, command in ipairs(cmds) do
		if #stack[index] == 15 then
			index = index + 1
			stack[index] = {}
		end

		table.insert(stack[index], command)
	end

	for i, _ in pairs(stack) do
		send(table.concat(stack[i], separator), false)
	end
end

function datestamp()
  return os.date("%m%d%y")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>CD Module API</name>
					<packageName></packageName>
					<script>cd.ToggleModule = function (var, color, sym, name, note, note2)
	local sym2 = "&lt;" .. darkColor(color) .. "&gt;\[&lt;" .. color .. "&gt;" .. sym .. "&lt;darker&gt;]"

	if cd.modules[var] ~= true then
		cd.modules[var] = true
		cecho(sym2)
		cecho("&lt;a_grey&gt;: " .. name .. " &lt;a_green&gt;activated&lt;a_grey&gt;.")
		if note and note ~= "" then
			cecho(note)
		end
		send("\n")
	else
		cd.modules[var] = false
		cecho("&lt;dark_slate_grey&gt;\[&lt;a_darkgrey&gt;" .. sym .. "&lt;dark_slate_grey&gt;\]&lt;a_grey&gt;: " .. name .. " &lt;a_red&gt;deactivated&lt;a_grey&gt;.")
		if note2 and note2 ~= "" then
			cecho(note2)
		end
		send("\n")
	end
end

-- Broadcast.

cd.Broadcast = function (msg)
	cd.modules.broadcasting = cd.modules.broadcasting or "web"

	if cd.modules.broadcasting ~= false then
		if cd.modules.broadcasting == "web" then
			send("wt " .. msg, false)
		else
			send("clan " .. cd.modules.broadcasting .. " tell " .. msg, false)
		end
	end
end

-- Autostand.

isAutostanding = function () if cd.modules.autostand ~= true then return false end; return true end

-- Automass.

isAutomassing = function () if cd.modules.automass ~= true then return false end; return true end

-- Curing.

isCuring = function () if cd.modules.curing ~= true then return false end; return true end

-- Autosanc.

isAutosanctifying = function () if cd.modules.autosanc ~= true then return false end; return true end

-- Autodefile.

isAutodefiling = function () if cd.modules.autodefile ~= true then return false end; return true end

-- Calling.

isCalling = function () if cd.modules.calling ~= true then return false end; return true end

-- Auto-BBT.

isAutobbting = function () if cd.modules.autobbt ~= true then return false end; return true end

-- Enemyaffs.

isTrackingEnemy = function () if cd.modules.enemyaffs ~= true then return false end; return true end

-- Auto-deffing.

isAutodeffing = function () if cd.modules.autodef ~= true then return false end; return true end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Throttling</name>
					<packageName></packageName>
					<script>local minimumThrottleTime = 0.3

setThrottleTime = function ()
	-- Set the throttle to a minimum of 0.2 seconds,
	-- assuming an ideal of 80ms ping or lower.
	local lag = getNetworkLatency()
	throttleTime = (lag * 10) * 0.2

	if throttleTime &lt;= minimumThrottleTime then
		throttleTime = minimumThrottleTime
	elseif throttleTime &gt; 0.75 then
		throttleTime = 0.75
	end
end

throttleTime = throttleTime or 0.2

attempt = function (action, syntax, ...)
	syntax = syntax or action
	if type(syntax) == "string" then
		syntax = syntax:split("%|")
	end

	if not cd.throttle[action] then
		debugecho("Attempting &lt;a_darkcyan&gt;" .. action .. "&lt;a_grey&gt;.")
		cd.Throttle(action)
		if type(syntax) == "function" then
			syntax(...)
		else
			for i,v in ipairs(syntax) do
				send(v, false)
			end
		end

		tempTimer(0.5, [[cd.Unthrottle("]] .. action .. [[")]])
	else
		debugecho("&lt;a_darkgrey&gt;Attempted to &lt;a_darkcyan&gt;" .. action .. "&lt;a_darkgrey&gt;, but throttled.")
	end
end

cd.Throttle = function (action)
	cd.throttle[action] = true
end

cd.Unthrottle = function (action)
	cd.throttle[action] = nil
end

isThrottled = function (action)
	if cd.throttle[action] then
		return true
	end

	return false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Affliction Database</name>
					<packageName></packageName>
					<script>-- This is very, very obsolete.
-- You want CD &gt; System &gt; Combat &gt; Afflictions &gt; Affliction Database.

afflictionList = {
-- Conventional afflictions.
--
-- "special" governs things like immunity, sileris, and more. They have special
-- rules specified in their curing functions.

-- HERBS/ORGANS -----------------------------------------------------

-- Ash/Bladder
	["sadness"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},
	["dementia"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},
	["hallucinations"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},
	["confusion"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},
	["paranoia"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},
	["hypersomnia"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},
	["blood_curse"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},
	["hatred"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},
	["blighted"] = {["balance"] = "HO", ["living"] = "ash", ["undead"] = "bladder"},

-- Goldenseal/Liver
	["self-pity"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},
	["stupidity"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},
	["dizziness"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},
	["shyness"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},
	["epilepsy"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},
	["impatience"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},
	["dissonance"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},
	["resonance"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},
	["infested"] = {["balance"] = "HO", ["living"] = "goldenseal", ["undead"] = "liver"},

-- Kelp/Eyeball
	["baldness"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["clumsiness"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["weariness"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["asthma"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["sensitivity"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["impairment"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["hypochondria"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["blood_poison"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["limp_veins"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},
	["magic_impaired"] = {["balance"] = "HO", ["living"] = "kelp", ["undead"] = "eyeball"},

-- Lobelia/Testis
	["commitment_fear"] = {["balance"] = "HO", ["living"] = "lobelia", ["undead"] = "testis"},
	["recklessness"] = {["balance"] = "HO", ["living"] = "lobelia", ["undead"] = "testis"},
	["masochism"] = {["balance"] = "HO", ["living"] = "lobelia", ["undead"] = "testis"},
	["agoraphobia"] = {["balance"] = "HO", ["living"] = "lobelia", ["undead"] = "testis"},
	["loneliness"] = {["balance"] = "HO", ["living"] = "lobelia", ["undead"] = "testis"},
	["vertigo"] = {["balance"] = "HO", ["living"] = "lobelia", ["undead"] = "testis"},
	["claustrophobia"] = {["balance"] = "HO", ["living"] = "lobelia", ["undead"] = "testis"},
	["berserking"] = {["balance"] = "HO", ["living"] = "lobelia", ["undead"] = "testis"},

-- Ginseng/Ovary
	["body_odor"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["haemophilia"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["sunlight_allergy"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["lethargy"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["vomiting"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["thin_blood"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["addiction"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["rend"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["physical_disruption"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},
	["mental_disruption"] = {["balance"] = "HO", ["living"] = "ginseng", ["undead"] = "ovary"},

-- Bellwort/Castorite
	["hubris"] = {["balance"] = "HO", ["living"] = "bellwort", ["undead"] = "castorite"},
	["pacifism"] = {["balance"] = "HO", ["living"] = "bellwort", ["undead"] = "castorite"},
	["peace"] = {["balance"] = "HO", ["living"] = "bellwort", ["undead"] = "castorite"},
	["justice"] = {["balance"] = "HO", ["living"] = "bellwort", ["undead"] = "castorite"},
	["magnanimity"] = {["balance"] = "HO", ["living"] = "bellwort", ["undead"] = "castorite"},
	["generosity"] = {["balance"] = "HO", ["living"] = "bellwort", ["undead"] = "castorite"},
	["lovers_effect"] = {["balance"] = "HO", ["living"] = "bellwort", ["undead"] = "castorite"},
	["superstition"] = {["balance"] = "HO", ["living"] = "bellwort", ["undead"] = "castorite"},

-- Bloodroot/Lung
	["paresis"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},
	["paralysis"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},
	["mirroring"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},
	["slickness"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},
	["heartflutter"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},
	["earthrot"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},
	["sandrot"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},
	["crippled"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},
	["crippled_body"] = {["balance"] = "HO", ["living"] = "bloodroot", ["undead"] = "lung"},

-- Bayberry/Stomach
	["need_blindness"] = {["balance"] = "HO", ["living"] = "bayberry", ["undead"] = "stomach"},

-- Hawthorn/Heart
	["need_deafness"] = {["balance"] = "HO", ["living"] = "hawthorn", ["undead"] = "heart"},

-- Moss/Kidney
	["plodding"] = {["balance"] = "HO", ["living"] = "moss", ["undead"] = "kidney"},
	["idiocy"] = {["balance"] = "HO", ["living"] = "moss", ["undead"] = "kidney"},

-- SMOKING/TINCTURES ------------------------------------------------

-- Elm/Demulcent
	["aeon"] = {["balance"] = "ST", ["living"] = "elm", ["undead"] = "demulcent"},
	["hellsight"] = {["balance"] = "ST", ["living"] = "elm", ["undead"] = "demulcent"},
	["deadening"] = {["balance"] = "ST", ["living"] = "elm", ["undead"] = "demulcent"},

-- Valerian/Antispasmadic
	["slickness"] = {["balance"] = "ST", ["living"] = "valerian", ["undead"] = "antispasmadic"},
	["disfigurement"] = {["balance"] = "ST", ["living"] = "valerian", ["undead"] = "antispasmadic"},

-- ELIXIRS/SERUMS ---------------------------------------------------

-- Immunity/Calmative
	["voyria"] = {["balance"] = "ES", ["living"] = "immunity", ["undead"] = "calmative"},

-- SALVES/POULTICES -------------------------------------------------

-- Epidermal/Oculi
	["anorexia"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["gorged"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["effused_blood"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["effused_phlegm"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["effused_yellowbile"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["effused_blackbile"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["indifference"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["stuttering"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["blurry_vision"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},
	["burnt_eyes"] = {["balance"] = "SP", ["living"] = "epidermal", ["undead"] = "oculi"},

-- Mending/Orbis
	["left_arm_broken"] = {["balance"] = "SP", ["living"] = "mending to left arm", ["undead"] = "orbis to left arm"},
	["right_arm_broken"] = {["balance"] = "SP", ["living"] = "mending to right arm", ["undead"] = "orbis to right arm"},
	["left_leg_broken"] = {["balance"] = "SP", ["living"] = "mending to left leg", ["undead"] = "orbis to left leg"},
	["right_leg_broken"] = {["balance"] = "SP", ["living"] = "mending to right leg", ["undead"] = "orbis to right leg"},
	["left_arm_bruised"] = {["balance"] = "SP", ["living"] = "mending to left arm", ["undead"] = "orbis to left arm"},
	["right_arm_bruised"] = {["balance"] = "SP", ["living"] = "mending to right arm", ["undead"] = "orbis to right arm"},
	["left_leg_bruised"] = {["balance"] = "SP", ["living"] = "mending to left leg", ["undead"] = "orbis to left leg"},
	["right_leg_bruised"] = {["balance"] = "SP", ["living"] = "mending to right leg", ["undead"] = "orbis to right leg"},
	["unknown_limb_broken"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},
	["unknown_arm_broken"] = {["balance"] = "SP", ["living"] = "mending to arms", ["undead"] = "orbis to arms"},
	["unknown_leg_broken"] = {["balance"] = "SP", ["living"] = "mending to legs", ["undead"] = "orbis to legs"},
	["selarnia"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},
	["ablaze"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},
	["throatclaw"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},
	["cracked_ribs"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},
	["crippled_throat"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},
	["destroyed_throat"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},
	["crushed_elbows"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},
	["crushed_kneecaps"] = {["balance"] = "SP", ["living"] = "mending", ["undead"] = "orbis"},

-- Caloric/Fumeae
	["frozen"] = {["balance"] = "SP", ["living"] = "caloric", ["undead"] = "fumeae"},
	["shivering"] = {["balance"] = "SP", ["living"] = "caloric", ["undead"] = "fumeae"},

-- Restoration/Jecis
	["left_arm_pre"] = {["balance"] = "SP", ["living"] = "restoration to left arm", ["undead"] = "jecis to left arm"},
	["right_arm_pre"] = {["balance"] = "SP", ["living"] = "restoration to right arm", ["undead"] = "jecis to right arm"},
	["right_leg_pre"] = {["balance"] = "SP", ["living"] = "restoration to right leg", ["undead"] = "jecis to right leg"},
	["left_leg_pre"] = {["balance"] = "SP", ["living"] = "restoration to left leg", ["undead"] = "jecis to left leg"},
	["head_pre"] = {["balance"] = "SP", ["living"] = "restoration to head", ["undead"] = "jecis to head"},
	["torso_pre"] = {["balance"] = "SP", ["living"] = "restoration to torso", ["undead"] = "jecis to head"},

	["left_arm_mangled"] = {["balance"] = "SP", ["living"] = "restoration to left arm", ["undead"] = "jecis to left arm"},
	["right_arm_mangled"] = {["balance"] = "SP", ["living"] = "restoration to right arm", ["undead"] = "jecis to right arm"},
	["right_leg_mangled"] = {["balance"] = "SP", ["living"] = "restoration to right leg", ["undead"] = "jecis to right leg"},
	["left_leg_mangled"] = {["balance"] = "SP", ["living"] = "restoration to left leg", ["undead"] = "jecis to left leg"},
	["left_arm_amputated"] = {["balance"] = "SP", ["living"] = "restoration to left arm", ["undead"] = "jecis to left arm"},
	["right_arm_amputated"] = {["balance"] = "SP", ["living"] = "restoration to right arm", ["undead"] = "jecis to right arm"},
	["right_leg_amputated"] = {["balance"] = "SP", ["living"] = "restoration to right leg", ["undead"] = "jecis to right leg"},
	["left_leg_amputated"] = {["balance"] = "SP", ["living"] = "restoration to left leg", ["undead"] = "jecis to left leg"},
	["left_arm_damaged"] = {["balance"] = "SP", ["living"] = "restoration to left arm", ["undead"] = "jecis to left arm"},
	["right_arm_damaged"] = {["balance"] = "SP", ["living"] = "restoration to right arm", ["undead"] = "jecis to right arm"},
	["right_leg_damaged"] = {["balance"] = "SP", ["living"] = "restoration to right leg", ["undead"] = "jecis to right leg"},
	["left_leg_damaged"] = {["balance"] = "SP", ["living"] = "restoration to left leg", ["undead"] = "jecis to left leg"},
	["head_damaged"] = {["balance"] = "SP", ["living"] = "restoration to head", ["undead"] = "jecis to head"},
	["head_mangled"] = {["balance"] = "SP", ["living"] = "restoration to head", ["undead"] = "jecis to head"},
	["torso_damaged"] = {["balance"] = "SP", ["living"] = "restoration to torso", ["undead"] = "jecis to head"},
	["torso_mangled"] = {["balance"] = "SP", ["living"] = "restoration to torso", ["undead"] = "jecis to head"},
	["spinal_rip"] = {["balance"] = "SP", ["living"] = "restoration", ["undead"] = "jecis"},
	["crushed_chest"] = {["balance"] = "SP", ["living"] = "restoration", ["undead"] = "jecis"},
	["mauled_face"] = {["balance"] = "SP", ["living"] = "restoration", ["undead"] = "jecis"},
	["smashed_throat"] = {["balance"] = "SP", ["living"] = "restoration", ["undead"] = "jecis"},

-- Pueri
	["belonephobia"] = {["balance"] = "SP", ["living"] = "none", ["undead"] = "pueri"},

-- Bindings
	["writhe_bind"] = {["balance"] = "binds", ["cure"] = "writhe from bind"},
	["writhe_ropes"] = {["balance"] = "binds", ["cure"] = "writhe from ropes"},
	["writhe_transfix"] = {["balance"] = "binds", ["cure"] = "writhe from transfix"},
	["writhe_vines"] = {["balance"] = "binds", ["cure"] = "writhe from vines"},
	["writhe_web"] = {["balance"] = "binds", ["cure"] = "writhe from web"},
	["writhe_impaled"] = {["balance"] = "binds", ["cure"] = "writhe from impale"},
	["writhe_thighlock"] = {["balance"] = "binds", ["cure"] = "writhe from thigh-jawlock"},
	["writhe_necklock"] = {["balance"] = "binds", ["cure"] = "writhe from neck-jawlock"},
	["writhe_armpitlock"] = {["balance"] = "binds", ["cure"] = "writhe from armpit-jawlock"},
	["writhe_lure"] = {["balance"] = "binds", ["cure"] = "writhe from lure"},
	["writhe_feed"] = {["balance"] = "binds", ["cure"] = "writhe from feed"},
	["writhe_hoist"] = {["balance"] = "binds", ["cure"] = "writhe from claws"},
	["mob_impaled"] = {["balance"] = "binds", ["cure"] = "writhe"},
	["grappled"] = {["balance"] = "binds", ["cure"] = "writhe from grapple"},
}

local specialAffs = {
	"shadow_coat", "numbed_skin", "void", "weakvoid", "hepafarin",
	"cocoon",
	"premonition", "stun", "unconscious", "fear", "disrupted", "blackout", "asleep",
	"spiritbrand", "stonebrand", "windbrand",
	"mind_blank", "mind_daze", "numb_arms",
	"petrified",
	"disturb_confidence", "disturb_impulse", "disturb_inhibition", "disturb_sanity",
	"sand_trapped",
}

for _, aff in ipairs(specialAffs) do
	afflictionList[aff] = {["balance"] = "special"}
end

local curativeDefenses = {
	["deathsight"] = {["balance"] = "HO", ["skullcap"] = "moss", ["undead"] = "pineal"},
	["energetic"] = {["balance"] = "HO", ["kola"] = "moss", ["undead"] = "sulphurite"},
	["insomnia"] = {["balance"] = "HO", ["living"] = "cohosh", ["undead"] = "tongue"},
	["deaf"] = {["balance"] = "HO", ["living"] = "hawthorn", ["undead"] = "heart"},
	["blind"] = {["balance"] = "HO", ["living"] = "bayberry", ["undead"] = "stomach"},
	["thirdeye"] = {["balance"] = "HO", ["living"] = "echinacea", ["undead"] = "spleen"},
	["rebounding"] = {["balance"] = "ST", ["living"] = "skullcap", ["undead"] = "sudorific"},
	["levitation"] = {["balance"] = "ES", ["living"] = "levitation", ["undead"] = "euphoric"},
	["venom"] = {["balance"] = "ES", ["living"] = "venom", ["undead"] = "carminative"},
	["speed"] = {["balance"] = "ES", ["living"] = "speed", ["undead"] = "nervine"},
	["frost"] = {["balance"] = "ES", ["living"] = "frost", ["undead"] = "refrigerative"},
	["mass"] = {["balance"] = "SP", ["living"] = "mass", ["undead"] = "pueri"},
	["hardened_skin"] = {["balance"] = "special", ["living"] = "sileris", ["undead"] = "bone"},
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Affliction API</name>
					<packageName></packageName>
					<script>local mental_afflictions = {
	"stupidity", "anorexia", "epilepsy", "mirroring", "mental_disruption", "peace", "paranoia", "hallucinations",
	"shyness", "stuttering", "dizziness", "indifference", "berserking", "pacifism", "lovers_effect", "hatred",
	"generosity", "claustrophobia", "vertigo", "loneliness", "agoraphobia", "masochism", "recklessness",
	"weariness", "impatience", "confusion", "dementia", "premonition"
}

aff = {}

aff.has = function (a)
	return cd.afflictions[a]
end

aff.add = function (a)
	if cd.afflictions[a] ~= nil then
		return
	end

	cd.afflictions[a] = os.clock()

	raiseEvent("ui.update", "readout")
end

aff.rem = function (a)
	if not cd.afflictions[a] then
		return 0
	end

	local t = os.clock() - cd.afflictions[a]
	cd.afflictions[a] = nil
	raiseEvent("ui.update", "readout")

	return t
end

aff.addHidden = function ()
	if cd.hiddenAffs == nil then
		cd.hiddenAffs = 1
	else
		cd.hiddenAffs = cd.hiddenAffs + 1
	end

	raiseEvent("ui.update", "readout")
end

aff.remHidden = function ()
	if cd.hiddenAffs ~= nil and cd.hiddenAffs &gt; 0 then
		cd.hiddenAffs = cd.hiddenAffs - 1
		if cd.hiddenAffs == 0 then
			cd.hiddenAffs = nil
		end
	end

	raiseEvent("ui.update", "readout")
end

aff.sym = function (a)
	local hidden = false
	if not aff.has(a) then
		hidden = true
	end

	aff.add(a)

	if hidden == false then
		return
	end

	aff.remHidden()

	raiseEvent("ui.update", "readout")
end

aff.getCure = function (a)
	local cureAction, cureString, suffix = "", "", ""

	if afflictionList[a].balance == "HO" or afflictionList[a].balance == "MK" then
		cureAction = "eat"
		if isUndead() == true then
			suffix = "_slice"
		end

	elseif afflictionList[a].balance == "SP" then
		if isUndead() == true then
			cureAction = "press"
		else
			cureAction = "apply"
		end

	elseif afflictionList[a].balance == "ST" then
		if isUndead() == true then
			cureAction = "inject"
		else
			cureAction = "smoke"
		end

	elseif afflictionList[a].balance == "ES" then
		if isUndead() == true then
			cureAction = "stick"
		else
			cureAction = "drink"
		end

	end

	if isUndead() == true then
		cureString = afflictionList[a].undead
	else
		cureString = afflictionList[a].living
	end

	if afflictionList[a].balance == "HO" or afflictionList[a].balance == "MK" then
		return "outc " .. cureString .. suffix .. "|" .. cureAction .. " " .. cureString .. suffix
	else
		return cureAction .. " " .. cureString .. suffix
	end
end

aff.clearAll = function()
	cd.afflictions = {}
end

getEnemyMentalAfflictions = function (t)
	t = t or getTarget()
	local aff_list = {}

	for _, aff in ipairs(mental_afflictions) do
		if AFFThaveAffliction(aff, t) then
			table.insert(aff_list, aff)
		end
	end

	return aff_list
end

countEnemyMentalAfflictions = function (t)
	t = t or getTarget()

	return #getEnemyMentalAfflictions(t)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Defense Database</name>
					<packageName></packageName>
					<script>defenseList = {
--	[""] =					{["name"] = "",					["desc"] = "",
--		["BAL"] = true, ["EQ"] = true},

	["barkskin"] = 		{["name"] = "Barkskin", 			["desc"] = "A powerful Sentinel defense against damage.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "class"},

	["blind"] = 			{["name"] = "Blind", 				["desc"] = "Protects you from transfixion, and other visual effects.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "mandatory"},

	["book"] = 			{["name"] = "Book Tattoo", 		["desc"] = "You benefit from a +5\% experience increase.",
		["BAL"] = true, ["EQ"] = true, ["situational"] = true},

	["boost"] =			{["name"] = "Boost",				["desc"] = "Increases the amount healed by your regeneration.",
		["BAL"] = false, ["EQ"] = false, ["type"] = "class"},

	["caloric"] = 		{["name"] = "Caloric", 			["desc"] = "Shields you from excessive fire damage.",
		["BAL"] = false, ["EQ"] = false},

	["celerity"] = 		{["name"] = "Celerity", 			["desc"] = "Allows you to move through three rooms at once.",
		["BAL"] = true, ["EQ"] = true},

	["chameleon"] = 	{["name"] = "Chameleon",			["desc"] = "Changes your name on the WHO list and when entering/exiting.",
		["BAL"] = false, ["EQ"] = false, ["situational"] = true},

	["clarity"] =		{["name"] = "Clarity",			["desc"] = "Will prevent you from being mentally disrupted once.",
		["BAL"] = true, ["EQ"] = true},

	["cloak"] =		 	{["name"] = "Cloak",				["desc"] = "Conceals a Syssin's movement and many actions.",
		["BAL"] = false, ["EQ"] = false, ["situational"] = true},

	["cloak_tattoo"] = {["name"] = "Cloak Tattoo",		["desc"] = "Prevents many summoning techniques.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "mandatory"},

	["constitution"] =	{["name"] = "Constitution",		["desc"] = "Will protect you once against vomiting, and other effects.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "class"},

	["deaf"] = 			{["name"] = "Deaf", 				["desc"] = "Protects you from howling, and other auditory effects.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "mandatory"},

	["deathsight"] = 	{["name"] = "Deathsight", 		["desc"] = "Allows you to detect the death of other players.",
		["BAL"] = false, ["EQ"] = false, ["type"] = "mandatory"},

	["detection"] =	 	{["name"] = "Detection",	 		["desc"] = "Ylem focal points are visible to you.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "watch"},

	["diverting"] = 	{["name"] = "Diverting", 		["desc"] = "You have a chance to reduce incoming damage.",
		["BAL"] = false, ["EQ"] = false, ["type"] = "mandatory"},

	["dodging"] = 		{["name"] = "Dodging", 			["desc"] = "You have a chance to avoid incoming damage.",
		["BAL"] = false, ["EQ"] = false, ["type"] = "mandatory"},

	["energetic"] = 	{["name"] = "Energetic", 		["desc"] = "Allows you to wake instantly.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "mandatory"},

	["fangbarrier"] = 	{["name"] = "Fang Barrier", 		["desc"] = "Prevents Syssin bites, Vampiric feeding, and more.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "mandatory"},

	["fitness"] = 		{["name"] = "Fitness", 			["desc"] = "Protects briefly against asthma.",
		["BAL"] = true, ["EQ"] = true},

	["flexibility"] = 	{["name"] = "Flexibility", 		["desc"] = "Reduces the time taken to writhe free of bindings.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "class"},

	["fortify"] = 		{["name"] = "Fortify", 			["desc"] = "A vampiric resilience to damage.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "class"},

	["grace"] = 			{["name"] = "Grace", 				["desc"] = "Your God blesses you with their speed.",
		["BAL"] = true, ["EQ"] = true},

	["guard"] = 			{["name"] = "Guard", 				["desc"] = "An improved parry that throws stunned foes to the ground.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "parry"},

	["hide"] = 			{["name"] = "Hide", 				["desc"] = "Conceals your presence in the room.",
		["BAL"] = true, ["EQ"] = true, ["situational"] = true},

	["immunity"] =		{["name"] = "Immunity",			["desc"] = "A one-time defense against venoms.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "class"},

	["insomnia"] = 		{["name"] = "Insomnia", 			["desc"] = "This defense protects you once against being put to sleep.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "mandatory"},

	["levitation"] = 	{["name"] = "Levitation", 		["desc"] = "Protects you from ground-based attacks, and nasty falls.",
		["BAL"] = true, ["EQ"] = true},

	["lifevision"] = 	{["name"] = "Lifevision", 		["desc"] = "Detects the presence of hidden players and illusions.",
		["BAL"] = true, ["EQ"] = true},

	["mounted"] =		{["name"] = "Mounted",			["desc"] = "Your mount will carry you across the land.",
		["BAL"] = true, ["EQ"] = true},

	["mindlink"] =		{["name"] = "Mind Link",			["desc"] = "Speeds mind locks, and allows certain telepathic abilities.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "class"},

	["mindlock"] =		{["name"] = "Mind Lock",			["desc"] = "Allows the use of many telepathic abilities.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "vital"},

	["mindnet"] =		{["name"] = "Mind Net",			["desc"] = "Detects the movement of players into and out of the area.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "watch"},

	["mindseye"] = 		{["name"] = "Mindseye", 			["desc"] = "Grants you sight and hearing, even while blind and deaf.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "mandatory"},

	["nightsight"] = 	{["name"] = "Nightsight", 		["desc"] = "Allows you to see other rooms in low-light conditions.",
		["BAL"] = false, ["EQ"] = false},

	["numlink"] = 		{["name"] = "Link", 				["desc"] = "Combines your health and mana pools.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "class"},

	["quickfoot"] = 	{["name"] = "Quickfoot", 		["desc"] = "Dramatically speeds dhurive-based combat.",
		["BAL"] = true, ["EQ"] = true, ["situational"] = true, ["type"] = "class"},

	["regeneration"] =	{["name"] = "Regeneration",		["desc"] = "Restores health over time.",
		["BAL"] = false, ["EQ"] = false, ["type"] = "class"},

	["resistance"] = 	{["name"] = "Resistance", 		["desc"] = "A substantial defense against magic damage.",
		["BAL"] = false, ["EQ"] = false},

	["sapience"] = 		{["name"] = "Mind Sapience",		["desc"] = "You see the commands of your mind locked victim.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "watch"},

	["shroud"] =			{["name"] = "Shroud",				["desc"] = "Conceals your movement and other actions.",
		["BAL"] = true, ["EQ"] = true, ["situational"] = true},

	["speed"] = 			{["name"] = "Speed", 				["desc"] = "A one-time defense against the aeon curse.",
		["BAL"] = false, ["EQ"] = false},

	["splitmind"] =		{["name"] = "Split Mind",		["desc"] = "Slowly regenerates mana over time.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "class"},

	["stalking"] = 		{["name"] = "Stalking", 			["desc"] = "Conceals movement and other actions.",
		["BAL"] = true, ["EQ"] = true, ["situational"] = true},

	["starburst"] = 	{["name"] = "Starburst", 		["desc"] = "Will save you from death, only once.",
		["BAL"] = true, ["EQ"] = true, ["situational"] = true},

	["thirdeye"] = 		{["name"] = "Thirdeye", 			["desc"] = "Reveals the location of players on the WHO list.",
		["BAL"] = false, ["EQ"] = false, ["type"] = "mandatory"},

	["toughness"] =		{["name"] = "Toughness",			["desc"] = "A monk's defense against physical damage.",
		["BAL"] = false, ["EQ"] = false, ["type"] = "class"},

	["tunnelvision"] =	{["name"] = "Tunnelvision",		["desc"] = "You will see only your target's attacks.",
		["BAL"] = false, ["EQ"] = false, ["situational"] = true},

	["venom"] = 			{["name"] = "Venom", 				["desc"] = "Resistance to the camus venom.",
		["BAL"] = true, ["EQ"] = true},

	["vitality"] = 		{["name"] = "Vitality", 			["desc"] = "Heals you significantly should your health drop too low.",
		["BAL"] = true, ["EQ"] = true},

	["warding"] =		{["name"] = "Warding", 			["desc"] = "A Syssin oath to lessen incoming damage.",
		["BAL"] = true, ["EQ"] = true},

	["warmth"] = 		{["name"] = "Warmth", 			["desc"] = "The warmth of a Yeleni. A physical damage shield.",
		["BAL"] = true, ["EQ"] = true, ["situational"] = true},

	["waterbreathing"] = 	{["name"] = "Waterbreathing", 	["desc"] = "Allows you to breathe underwater.",
		["BAL"] = true, ["EQ"] = true, ["type"] = "mandatory"},

	["weathering"] = 	{["name"] = "Weathering", 		["desc"] = "I have no goddamn clue what this does.",
		["BAL"] = false, ["EQ"] = false},
}

classDefenses = {
	["Sentinel"] = {"fitness", "resistance", "flexibility", "vitality", "barkskin", "quickfoot"},
	["Monk"] = {"weathering", "vitality", "toughness", "resistance", "fitness", "constitution", "splitmind", "immunity", "clarity", "regeneration", "boost"},
	["Paladin"] = {"weathering", "fitness", "resistance"},
	["Teradrim"] = {"surefooted", "stonebind", "resonance"},
	["Archivist"] = {"numlink"},
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Defenses</name>
					<packageName></packageName>
					<script>def = {}

local special_characters = {
  Lin = {
  	lifevision = {BAL = false, EQ = false, command = "goggle toggle lifevision"},
    nightsight = {BAL = false, EQ = false, command = "goggle toggle nightsight"},
    heatsight = {BAL = false, EQ = false, command = "goggle toggle heatsight"},
    overwatch = {BAL = false, EQ = false, command = "goggle toggle overwatch"},
    insight = {BAL = false, EQ = false, command = "goggle toggle insight"},
  },
}

getDefenses = function ()
	-- Sanitizes the defense list, returning defenses the player
	-- actually has active.
	local list = {}

	for def, val in pairs(cd.defenses) do
		if val == true then
			table.insert(list, def)
		end
	end

	return list
end

getExpectedDefenses = function ()
	-- Creates a table consisting of common defenses, including
	-- those usable by the current class.

	-- Common defenses.
	local list = {
		"blindness", "deafness", "fangbarrier", "cloak", "deathsight",
		"mindseye", "nightsight", "speed", "thirdeye", "venom_resistance",
	}

	if isUndead() ~= true then
		table.insert(list, "waterbreathing")
	end

	if cd.player.race == "yeleni" or cd.player.race == "azudim" or cd.player.race == "idreth" then
		table.insert(list, "endgame_buff")
	end

	return list
end

getNeededDefenses = function ()
	local list1, list2 = getDefenses(), getExpectedDefenses()
	local list3 = {}

	for _, def in ipairs(list2) do
		if table.contains(list1, def) ~= true then
			table.insert(list3, def)
		end
	end

	return list3
end

getCharacterDefenses = function ()
  -- Special snowflake function to add specific defenses that may be available to particular characters.
  -- Refer to the special_characters table at the top of this script file.
  local n = cd.player.name
  
  if not special_characters[n] then
    return {}
  end
  
  return special_characters[n]
end

getClassDefenses = function ()
	-- Divide the buffs into two tables: those that need to be queued, and those
	-- that can be raised instantly.

	if not cd.player.class or cd.player.class == "" then
		error("getClassDefenses() could not find the player's class.")
		return
	end

	local c = cd.player.class

	if not cd.buffs[c] then
		return
	end

	local non_queued, queued = {}, {}
	for def, _ in pairs(cd.buffs[c]) do
		local com = cd.buffs[c][def].command or def
		if cd.buffs[c][def].BAL == false and cd.buffs[c][def].EQ == false then
      non_queued[def] = com
		else
      queued[def] = com
		end
	end

  local char_defs = getCharacterDefenses()
  for def, _ in pairs(char_defs) do
    local com = char_defs[def].command or def
    if char_defs[def].BAL == false and char_defs[def].EQ == false then
      non_queued[def] = com
    else
      queued[def] = com
    end
  end

	return non_queued, queued
end

raiseClassDefenses = function ()
	local nq, q = getClassDefenses()
  local non_queued, queued = {}, {}
  
  for _, com in pairs(nq) do
    non_queued[#non_queued + 1] = com
  end
  
  for _, com in pairs(q) do
    queued[#queued + 1] = com
  end

	classDefenseQueue = queued
	sendStack(non_queued)
end

def.has = function (a)
	if a == "waterbreathing" and isUndead() == true then
		return true
	elseif cd.defenses[a] == true then
		return true
	else
		return nil
	end
end

def.add = function (a)
	cd.defenses[a] = true
end

def.rem = function (a)
	cd.defenses[a] = nil
end

def.reset = function ()
	cd.defenses = {}
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Waypoints</name>
					<packageName></packageName>
					<script>cd.waypoints = {
	["Neicel Arget"] = {
		["bathing pool"] = 52331,
		["facepaint"] = 52295,
		["brothel"] = 52303,
	},
	["Dhar"] = {
		["temple"] = 5732,
	},
	["Enorian"] = {
		["templars"] = 4589,
	},
	["Spinesreach"] = {
		["thuneron"] = 52762,
	},
	["Dendara"] = {
		["abelaas"] = 60017,
	},
	["Bloodloch"] = {
		["entrance"] = 9194,
	},
}

for a, v in pairs(aetolia.comm_shops) do
	cd.waypoints[a] = cd.waypoints[a] or {}
	cd.waypoints[a]["comms"] = v
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Context Actions</name>
					<packageName></packageName>
					<script>cd.hotKey = function (num)
	display("You pressed " .. num .. ".")
end

cd.toggleKey = function (num)
	local name = tostring(num) .. " (hotkey)"

	if cd.hotKeys[num] == true then
		disableKey(name)
		cd.hotKeys[num] = false
	else
		enableKey(name)
		cd.hotKeys[num] = true
	end
end

cd.addAction = function (id, desc, command, index)
	-- Sanity check.
	if not id then
		error("AddActionHandler(): Attempted to add an action with no \"id\" specified.")
		return
	end

	if not desc then
		error("AddActionHandler(): Attempted to add an action with no \"desc\" specified.")
		return
	end

	if not command then
		command = id
	end

	if id == "" then
		error("AddActionHandler(): Attempted to add an action with a blank id string.")
		return
	end

	if desc == "" then
		error("AddActionHandler(): Attempted to add an action with a blank desc string.")
		return
	end

	-- Check existing actions by ID.
	for i, _ in ipairs(cd.actions) do
		local check_id = cd.actions[i]["id"]
		if check_id == id then
			return
		end
	end

	-- Create the table to represent our action.
	local t = {
		["id"] = id,
		["desc"] = desc,
		["command"] = command
	}

	if index then
		table.insert(cd.actions, index, t)
	else
		table.insert(cd.actions, t)
	end
	
	raiseEvent("ui.update", "actions")
end

cd.removeAction = function (id)
	for i, _ in ipairs(cd.actions) do
		local check_id = cd.actions[i]["id"]
		if check_id == id then
			table.remove(cd.actions, i)
			return
		end
	end
	
	raiseEvent("ui.update", "actions")
end

cd.clearActions = function ()
	cd.actions = {}
	raiseEvent("ui.update", "actions")
end

cd.getAction = function (id)
	for i, _ in ipairs(cd.actions) do
		local check_id = cd.actions[i].id
		if check_id == id then
			return i
		end
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Inventory API</name>
					<packageName></packageName>
					<script>getWornItems = function ()
	return cd.inventory.worn or {}
end

getWornAttire = function (id)
	return cd.inventory.contents[id].wearslot or "concealed"
end

saveWornAttires = function ()
	savedAttires = {}
	for _, id in ipairs(getWornItems()) do
		savedAttires[id] = getWornAttire(id)
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Aetolia Web Request API</name>
					<packageName></packageName>
					<script>API = API or {}

--------------------------------------------------------------------------------

local path = getMudletHomeDir() .. "/files/api/"

local function valid_password()
  if api_password == nil or api_password == "" then
    notify("Aetolia API", "Password not set. Enter &lt;a_red&gt;apipass &lt;password&gt;&lt;a_grey&gt; to set it.")
    return false
  end
  
  return true
end

local function cred_string()
  if api_password ~= nil and api_password ~= "" then
    return "?character=%s&amp;password=%s" % {cd.player.name:lower(), api_password}
  end

  return ""
end

local function api_path(file)
  return "https://api.aetolia.com/%s%s" % {file, cred_string()}
end

local function get_api_file(file, ext_file, quiet)
  ext_file = ext_file or file
  downloadFile(path .. file, api_path(ext_file))

  if quiet ~= true then
    api_post_download = file
  end
end

--------------------------------------------------------------------------------

function API.SetPassword(pwd)
  local warning = "This password is stored in Challenger Deep in the variable 'api_password' and does not persist between sessions. You may search for 'api_password' in Mudlet's script window to see when and where this is used."
  
  api_password = pwd
  
  notify("Aetolia API", "API password set. You may use this to conduct API queries.")
  cecho("&lt;a_darkgrey&gt;" .. warning:wrap2(cd.sys.wrapWidth, 15))
end

function API.RequestCharacters()
  if not valid_password() then
    return
  end

  get_api_file("characters.json")
end

function API.RequestNews(section, article)
  if not valid_password() then
    return
  end

  if section and article then -- Player supplied section and article.
    get_api_file("news.json", "news/%s/%s.json" % {section, article})
  elseif section then -- Player supplied only section.
    get_api_file("news.json", "news/%s.json" % {section})
  else -- Player supplied nothing.
    get_api_file("news.json")
  end
end

function API.RequestFeed()
  if not valid_password() then
    return
  end

  get_api_file("gamefeed.json")
end

function API.RequestOrgLogs(org)
  if not valid_password() then
    return
  end

  if org then -- Player supplied organization.
    get_api_file("orglogs.json", "orglogs/%s.json" % org)
  else -- Player supplied nothing.
    get_api_file("orglogs.json")
  end
end

function API.RequestMessages()
  if not valid_password() then
    return
  end
  
  get_api_file("messages.json", "messages.json", true)
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>System</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Movement, Navigation</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Utility</name>
						<packageName></packageName>
						<script>local specialExits = {
	["19719"] = {dir = "down", command = "touch carving"},
	["19089"] = {dir = "up", command = "touch carving"},
	["19752"] = {dir = "down", command = "pull candelabra"},
	["18801"] = {dir = "up", command = "pull brazier"},
	["19773"] = {dir = "down", command = "turn statue"},
	["18761"] = {dir = "up", command = "turn statue"},
	["19753"] = {dir = "in", command = "enter maiden"},
	["19764"] = {dir = "in", command = "enter portal"},
	["19763"] = {dir = "in", command = "enter portal"},
	["43795"] = {dir = "in", command = "sentaaribow statue"},
  ["58957"] = {dir = "in", command = teshenUndercroftDialSolver},
  ["13497"] = {dir = "in", command = "surrender 142367"},
  ["13217"] = {dir = "out", command = "surrender 70710"},
  ["15068"] = {dir = "down", command = "say ever downwards"},
  ["64821"] = {dir = "up", command = "say i have desires to claim"},
  ["64822"] = {dir = "down", command = "say i desire knowledge"},
  ["44033"] = {dir = "down", command = "heartbeat ayani"},
  
  -- Tecpatl's Cradle.
  ["18078"] = {dir = "down", command = "descend wall"},
  ["18076"] = {dir = "down", command = "descend wall"},
}

cd.GetSpecialExit = function (room)
	room = tostring(room)
	if specialExits[room] then
		return specialExits[room].dir, specialExits[room].command
	end
	
	return nil
end

local moveMods = {
  ["control"] = function ()
    if cd.status.mounted == true then
      return "gallop"
    elseif isWayfarer() == true then
      return "sprint"
    else
      return "dash"
    end
  end,
	["alt"] = function ()
		return "dash"
  end,
}

local function getSpecialMovement()
  if isSyssin() then
    return "worm warp"
  end
  
  return "look"
end

cd.Move = function (dir, mod)
	cd.lastDir = dir
	suppressSpecialMovementWarning = true
  
  if dir == "special" then
    send(getSpecialMovement(), false)
    return
  end
	
	local special_dir, special_command = cd.GetSpecialExit(cd.room.num)
	
	if (special_dir ~= nil and dir == special_dir) and special_command ~= nil then
    if type(special_command) == "function" then
      special_command()
    else
		  send(special_command, false)
		  return
    end
	end
	
	if mod and moveMods[mod] then
		if type(moveMods[mod]) == "function" then
			send(moveMods[mod]() .. " " .. dir, false)
		else
			send(moveMods[mod] .. " " .. dir, false)
		end
	else
		send(dir, false)
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>handleSpeedwalkingEvents</name>
						<packageName></packageName>
						<script>local WaypointEntry = function (vnum, name)
	cecho("&lt;forest_green&gt;" .. vnum:jleft(6) .. "&lt;a_grey&gt;" .. name:jleft(16))
end

local SpeedwalkingExecute = function (dest, vnum)
	notify("Speedwalking", "Path-finding to waypoint &lt;a_darkcyan&gt;" .. dest .. "&lt;a_grey&gt;.", false)
	sendStack("path find " .. vnum, "path go")
end

local SpeedwalkingListHandler = function ()
	moduleHeader("Waypoints", "room list")

	cecho("\n &lt;a_darkgreen&gt;- &lt;a_darkred&gt;Misc.")
	if corpseRoom then
		cecho("\n   &lt;forest_green&gt;" .. tostring(corpseRoom):jleft(6) .. "&lt;a_grey&gt;corpse")
	end
	echo("\n")

	for section, _ in pairs(cd.waypoints) do
		local wp_list = cd.waypoints[section]
		cecho("\n &lt;a_darkcyan&gt;- &lt;a_darkgrey&gt;" .. section)

		local count = 0
		for name, vnum in pairs(wp_list) do
			vnum = tostring(vnum)

			if count == 0 then
				echo("\n   ")
			end

			WaypointEntry(vnum, name)

			count = count + 1
			if count &gt;= 5 then
				count = 0
			end
		end

		echo("\n")
	end

	moduleFooter()
end

local SpeedwalkingWaypointHandler = function (dest)
	local wp
	if dest == "corpse" and corpseRoom then
		wp = corpseRoom
	else
		for section, _ in pairs(cd.waypoints) do
			if dest:lower() == section:lower() and cd.waypoints[section].entrance ~= nil then
				wp = cd.waypoints[section].entrance
				break
			end

			for room, vnum in pairs(cd.waypoints[section]) do
				if room == dest then
					wp = vnum
					break
				end
			end
		end
	end

	if not wp then
		notify("Speedwalking", "You don't have any waypoint by the name of &lt;dodger_blue&gt;" .. dest .. "&lt;a_grey&gt;.")
		return
	end

	SpeedwalkingExecute(dest, wp)
end

handleSpeedwalkingEvents = function (e, ...)
	if e == "speedwalking list" then
		SpeedwalkingListHandler(...)
	elseif e == "speedwalking waypoint" then
		SpeedwalkingWaypointHandler(...)
	end
end</script>
						<eventHandlerList>
							<string>speedwalking list</string>
							<string>speedwalking waypoint</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Worm Warp Tracking</name>
						<packageName></packageName>
						<script>local function addAreaWarp(src_num, dst_num, dst)
  area_worm_warps = area_worm_warps or {}
  area_worm_warps[src_num] = {["dst_num"] = dst_num, ["dst"] = dst}
end

function wormWarpEntry(src, dst)
  src = src:trim()
  dst = dst:trim()
  
  if src == "From" or dst == "To" then
    return
  end
  
  local src_num, dst_num = "?????", "?????"
  
  local src_search = searchRoom(src)
  local dst_search = searchRoom(dst)
  local src_size = table.size(src_search)
  local dst_size = table.size(dst_search)
  
  if src_size &gt;= 1 then
    for n, r in pairs(src_search) do
      if src_size == 1 then
        src_num = n
      end
  
      src = r
      break
    end
  end
  
  if dst_size &gt;= 1 then
    for n, r in pairs(dst_search) do
      if dst_size == 1 then
        dst_num = n
      end
  
      dst = r
      break
    end
  end

  addAreaWarp(src_num, dst_num, dst)
  
  src = src:truncate(32)
  dst = dst:truncate(32)
  
  rewrite("&lt;a_darkgrey&gt;[&lt;a_white&gt;%s&lt;a_darkgrey&gt;] &lt;a_grey&gt;%s &lt;a_darkgreen&gt;-&gt; &lt;a_darkgrey&gt;[&lt;a_white&gt;%s&lt;a_darkgrey&gt;] &lt;a_grey&gt;%s" % {
    tostring(src_num):jright(5), src:jleft(32), tostring(dst_num):jright(5), dst
  })
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Queue Handling</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Queue API</name>
						<packageName></packageName>
						<script>function clearQueue()
  debugecho("Queue cleared.") 
	cd.queue = {}
  queue_override = nil
end

function setQueueOverride(action)
  debugecho("Enabling queue override.")
  queue_override = true
  cd.queue = {action}
end

function setQueueAction(action, priority)
  if queue_override == true then
    debugecho("Queue override in effect. Queue action ignored.")
    return
  end

  if table.contains(cd.queue, action) then
    debugecho("Ignoring duplicate action.")
    return
  end

  if priority then
    debugecho("Added action &lt;a_red&gt;%s &lt;a_grey&gt;to the queue at priority %s." % {action, priority})
    table.insert(cd.queue, priority, action)
  else
    debugecho("Added action &lt;a_red&gt;%s &lt;a_grey&gt;to the queue." % {action})
    table.insert(cd.queue, action)
  end
end

function getQueueAction(num)
  return cd.queue(num)
end

function getQueue(num)
  local queue_string = table.concat(cd.queue, "|")
  debugecho("Processed queue: %s" % {queue_string})
  if queue_string == "" then
    return nil
  else
    return queue_string
  end
end

function executeQueue()
  send("qeb %s" % {getQueue()}, false)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Class Definition</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Monk</name>
						<packageName></packageName>
						<script>cd.class.Monk = {
	["Guild"] = "Sentaari",

	["BashAttack"] = function ()
		MonkTransmute()
		MonkCombo("bash")
	end,
  
  parry_command = "guard",
}

cd.buffs.Monk = {
	-- Kaido
	["weathering"] = {["BAL"] = false, ["EQ"] = false},
	["vitality"] = {["BAL"] = true, ["EQ"] = true},
	["toughness"] = {["BAL"] = false, ["EQ"] = false},
	["resistance"] = {["BAL"] = false, ["EQ"] = false},
	["fitness"] = {["BAL"] = true, ["EQ"] = true},
	["constitution"] = {["BAL"] = true, ["EQ"] = true},
	["split_mind"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "split mind"},
	["kaido_immunity"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "immunity"},
	["kaido_regeneration"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "regeneration on"},
	["boosted_regen"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "boost regeneration"},
	["blindness"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "blind"},
	["deafness"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "deaf"},
	["guard"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "guard head"},

	-- Telepathy
	["clarity"] = {["BAL"] = true, ["EQ"] = true},
	["insight"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "mind insight on"},

	-- Misc
	["deathsight"] = {["BAL"] = true, ["EQ"] = true},
	["heatsight"] = {["BAL"] = true, ["EQ"] = true},
}

-- Defines how much damage each attack does to a given limb.
local limbDamage = {
	["normal"] = {["snk"] = 7.49, ["hkp"] = 3.99, ["sdk"] = 7.49, ["ucp"] = 3.99, ["hfp"] = 3.99, ["mnk"] = 7.49, ["spp"] = 3.99, ["cmk"] = 7.49, ["wwk"] = 7.49, ["axk"] = 7.49},
	["tgs"] = {["snk"] = 10.63, ["hkp"] = 6.64, ["sdk"] = 10.63, ["ucp"] = 6.64, ["hfp"] = 6.64, ["mnk"] = 10.63, ["spp"] = 6.64, ["cmk"] = 9.96, ["wwk"] = 10.63, ["axk"] = 10.63}
}

local canTransmute = function ()
	if onSYNC() ~= true or isMonk() ~= true or isProne() == true or blockedAff("transmute") == true then
		return false
	end

	return true
end

MonkTransmute = function ()
	-- Transmute when bashing.
	if canTransmute() == true then
		if cd.player.HP.current &lt;= math.round(cd.player.HP.max * 0.65)
		and cd.player.MP.current &gt;= 1500 then
			if debuggingCuring then
				cd.cure.debugEcho([[attempt("transmute", "transmute mana 1000")]])
			else
				setQueueAction("transmute mana 1000", 1)
			end
		end
	end
end

MonkCombo = function (type, tar, feint)
	local attString, atk1, atk2, atk3

	-- Assert a default stance.
	--   The defaults are Scorpion for bashing, Tiger for PK.
	if type == "bash" then defaultMonkStance = "scs" end
	defaultMonkStance = defaultMonkStance or "tgs"
	tar = tar or getTarget()
	if feint then feint = true else feint = false end

	local comboTypes = {
		["bash"] = {"sdk", "ucp", "ucp"},
		["h"] = {"wwk", "ucp", "ucp"},
		["la"] = {"mnk left", "spp left", "spp left"},
		["ra"] = {"mnk right", "spp right", "spp right"},
		["ll"] = {"snk left", "hfp left", "hfp left"},
		["rl"] = {"snk right", "hfp right", "hfp right"},
		["n"] = {"rhk", "jbp", "jbp"},
		["s"] = {"swk", "hfp left", "hfp right"},
		["sl"] = {"swk", "hfp left", "hfp left"},
		["sr"] = {"swk", "hfp right", "hfp right"},
		["x"] = {"axk", "ucp", "ucp"},
		["t"] = {"cmk", "hkp", "hkp"},
		["tr"] = {"cmk", "spp right", "spp right"},
		["tl"] = {"cmk", "spp left", "spp left"},
		["sh"] = {"sck", "ucp", "ucp"}
	}

	if type == "2l" then
		if math.random(2) == 2 then
			atk1, atk2, atk3 = "snk left", "hfp right", "hfp right"
		else
			atk1, atk2, atk3 = "snk right", "hfp left", "hfp left"
		end
	elseif type == "2a" then
		if math.random(2) == 2 then
			atk1, atk2, atk3 = "mnk left", "spp right", "spp right"
		else
			atk1, atk2, atk3 = "mnk right", "spp left", "spp left"
		end
	elseif type == "r" then
		local dirs = {"left", "right"}
		local kicks = {"snk", "mnk", "cmk", "wwk"}
		local punches = {"ucp", "hkp", "spp", "hfp"}

		local k = kicks[math.random(1, 4)]
		local p1 = punches[math.random(1, 4)]
		local p2 = punches[math.random(1, 4)]
		local kdir = ""
		local p1dir = ""
		local p2dir = ""

		if k ~= "wwk" and k ~= "cmk" then
			kdir = " " .. dirs[math.random(1, 2)]
		end

		if p1 ~= "ucp" and p1 ~= "hkp" then
			p1dir = " " .. dirs[math.random(1, 2)]
		end

		if p2 ~= "ucp" and p2 ~= "hkp" then
			p2dir = " " .. dirs[math.random(1, 2)]
		end

		atk1, atk2, atk3 = k .. kdir, p1 .. p1dir, p2 .. p2dir
	elseif comboTypes[type] then
		atk1, atk2, atk3 = comboTypes[type][1], comboTypes[type][2], comboTypes[type][3]
	end

	if getStance() ~= defaultMonkStance then
		-- Replace atk1 with the stance.
		atk1 = defaultMonkStance
	elseif feint == true then
		-- Replace atk1 with a feint.
		atk1 = "feint"
	end

	atk1 = atk1 or "sdk"
	atk2 = atk2 or "ucp"
	atk3 = atk3 or "ucp"

	attString = string.format("combo %s %s %s %s",
		tar, atk1, atk2, atk3
	)

	setQueueAction(attString)
	-- if cd.modules.pk == true then
		-- send("mind amnesia " .. tar, false)
	-- end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Archivist</name>
						<packageName></packageName>
						<script>cd.class.Archivist = {
	["Guild"] = "Archivists",

	["BashAttack"] = function ()
		send("incite crux " .. getTarget(), false)
	end,

	["lastTweak"] = "",
}

cd.buffs.Archivist = {
	-- Bioessence
	["speed"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "bio jolt"},

	-- Numerology
	["spheres"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "contemplate spheres"},
	["sublimation"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "elicit sublimation"},
	["linked"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "elicit link 50"},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Praenomen</name>
						<packageName></packageName>
						<script>canUseMending = function ()
	if mendingOffBalance then return false end
	if onSYNC() ~= true then return false end
	if cd.player.blood &lt; 300 then return false end
	return true
end

needMending = function ()
	if cd.player.HP.percent &lt;= 50 and canUseMending() then return true end
	return false
end

cd.class.Praenomen = {
	["Guild"] = "None",

	["BashAttack"] = function ()
		if needMending() then
			setQueueAction("mend")
		else
      setQueueAction("frenzy %s" % {getTarget()})
		end
	end,
}

cd.buffs.Praenomen = {
	-- Corpus
	["nightsight"] = {["BAL"] = false, ["EQ"] = false},
	["deathsight"] = {["BAL"] = true, ["EQ"] = true},
	["fortify"] = {["BAL"] = true, ["EQ"] = true},
	["celerity"] = {["BAL"] = true, ["EQ"] = true},
	["warding"] = {["BAL"] = false, ["EQ"] = true, ["command"] = "ward"},
	["potence"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "potence on"},

	-- Mentis
	["lifevision"] = {["BAL"] = false, ["EQ"] = true},

	-- Sanguis
	["concentrate"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "blood concentrate"},
	["bloodtune"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "blood tune on"},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Sciomancer</name>
						<packageName></packageName>
						<script>cd.class.Sciomancer = {
	["Guild"] = "Sciomancers",

	["BashAttack"] = function ()
    local sp = cd.player.shadowprice
    local action = ""
    local t = getTarget()
    if sp &lt; 4 then
      action = "shadowprice gloom %s|cast blast %s" % {t, t}
    else
      action = "cast blast %s" % {t}
    end
		setQueueAction(action)
	end,
}

cd.buffs.Sciomancer = {
	-- Sciomancy
  ["channel_shadow"] = {bal = true, eq = true, command = "channel shadow"},
  ["shadeling"] = {bal = true, eq = true, command = "cast shadeling"},
  ["shadow_mantle"] = {bal = true, eq = true, command = "cast mantle"},
	["nightsight"] = {},

	-- Sorcery
  ["blurring"] = {bal = true, eq = true, command = "cast blurring"},
  ["countercurrent"] = {bal = true, eq = true, command = "cast countercurrent"},
  ["sagacity"] = {bal = true, eq = true, command = "cast sagacity"},

	-- Gravitation
  ["featherstep"] = {bal = true, eq = true, command = "gravity featherstep"},
  ["singularity"] = {bal = true, eq = true, command = "gravity genesis tether stability"},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Templar</name>
						<packageName></packageName>
						<script>local weaponTypes = {
	"shortsword", "longsword", "bastard"
}

local isWieldingShield = function ()
	if cd.status.wieldL:match("shield") == "shield" or cd.status.wieldR:match("shield") == "shield" then
		return true
	end

	return false
end

local isWieldingTwoHanded = function ()
	-- derp
	return false
end

local getWeapons = function ()
	local l, r
	local left, right = cd.status.wieldL, cd.status.wieldR
	local lefttype, righttype = left:match("^(%a+)%d+$"), right:match("^(%a+)%d+$")
	local leftid, rightid = left:match("^%a+(%d+)$"), right:match("^%a+(%d+)$")

	return l, r
end

cd.class.Templar = {
	["Guild"] = "Templars",

	["BashAttack"] = function ()
		sendStack("cleanse longsword", "empower longsword with sacrifice", "strike " .. getTarget())
	end
}

cd.buffs.Templar = {
	-- Righteousness
	["protection"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "aura blessing protection"},
	["redemption"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "aura blessing redemption"},
	["healing"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "aura healing"},
	["meditation"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "aura blessing meditation"},

	-- Battlefury
	["gripping"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "grip"},
	["fitness"] = {["BAL"] = true, ["EQ"] = true},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Carnifex</name>
						<packageName></packageName>
						<script>cd.class.Carnifex = {
	["Guild"] = "Carnifex",

	["BashAttack"] = function ()
		send("hammer bash " .. getTarget(), false)
	end,
}

cd.buffs.Carnifex = {
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Sentinel</name>
						<packageName></packageName>
						<script>cd.class.Sentinel = {
	["Guild"] = "Sentinels",

	["BashAttack"] = function ()
    setQueueAction("dhuriv combo %s crosscut thrust" % {getTarget()})
	end,
  
  can_bash_mounted = true,
}

cd.buffs.Sentinel = {
	["vitality"] = {["BAL"] = true, ["EQ"] = true},
	["flexibility"] = {["BAL"] = true, ["EQ"] = true},
	["hardiness"] = {["BAL"] = true, ["EQ"] = true},
	["barkskin"] = {["BAL"] = true, ["EQ"] = true},
	["foreststride"] = {["BAL"] = true, ["EQ"] = true},
	["fitness"] = {["BAL"] = true, ["EQ"] = true},
	["lifesap"] = {["BAL"] = true, ["EQ"] = true},
	["parry"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "parry head"},
  ["clarity"] = {["BAL"] = true, ["EQ"] = true},
	["deathsight"] = {["BAL"] = true, ["EQ"] = true},
	["heatsight"] = {["BAL"] = true, ["EQ"] = true},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Shapeshifter</name>
						<packageName></packageName>
						<script>cd.class.Shapeshifter = {
	["Guild"] = "None",

	["BashAttack"] = function ()
		LycanCombo("bash")
	end,
}

cd.buffs.Shapeshifter = {
	-- Shapeshifting
	["nightsight"] = {["BAL"] = false, ["EQ"] = false},
	["weathering"] = {["BAL"] = false, ["EQ"] = false},
	["bodyheat"] = {["BAL"] = true, ["EQ"] = true},
	["metabolize"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "metabolize on"},
	["endurance"] = {["BAL"] = true, ["EQ"] = true},
	["thickhide"] = {["BAL"] = true, ["EQ"] = true},
	["cornering"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "corner on"},
	["heatsight"] = {["BAL"] = true, ["EQ"] = true},
	["hardening"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "harden bones"},
}

cd.class.Shapeshifter.parry_route = function ()
  local limb = "head"

  -- 1. Badly damaged legs.
  if aff.has("right_leg_damaged") or aff.has("right_leg_mangled") then
	  limb = "right leg"
  elseif aff.has("left_leg_damaged") or aff.has("left_leg_mangled") then
    limb = "left leg"
  -- 2. Broken legs.
  elseif aff.has("right_leg_broken") then
    limb = "right leg"
  elseif aff.has("left_leg_broken") then
    limb = "left leg"
  -- 3. Badly damaged arms.
  elseif aff.has("right_arm_damaged") or aff.has("right_arm_mangled") then
	  limb = "right arm"
  elseif aff.has("left_arm_damaged") or aff.has("left_arm_mangled") then
    limb = "left arm"
  -- 4. Broken arms.
  elseif aff.has("right_arm_broken") then
    limb = "right arm"
  elseif aff.has("left_arm_broken") then
    limb = "left arm"
  end
    
  return limb
end

cd.class.Shapeshifter.limb_weights = {
  head = 0.5,
  torso = 0.25,
  left_arm = 0.75,
  right_arm = 0.75,
  left_leg = 1,
  right_leg = 1,
}

cd.class.Shapeshifter.possible_affs = {
  "confusion", "hallucinations", "hatred", "blurry_vision", "crippled_throat", "mauled_face",
  "mangled_head", "damaged_head", "broken_left_arm", "broken_right_arm", "mangled_left_arm",
  "mangled_right_arm", "damaged_left_arm", "damaged_right_arm", "broken_left_leg", "broken_right_leg",
  "mangled_left_leg", "mangled_right_leg", "damaged_left_leg", "damaged_right_leg", "paresis",
  "paralysis", "plodding", "idiocy", "recklessness", "masochism", "berserking", "claustrophobia",
  "broken_left_arm", "broken_right_arm", "mangled_left_arm", "mangled_right_arm", "damaged_left_arm",
  "damaged_right_arm", "broken_left_leg", "broken_right_leg", "mangled_left_leg", "mangled_right_leg",
  "damaged_left_leg", "damaged_right_leg", "stupidity", "anorexia", "spinal_rip", "mangled_torso",
  "damaged_torso", "vomiting", "rend", "haemophilia", "weariness", "impairment"
}

cd.class.Shapeshifter.init_aff_vars = function ()
  
end

-- Defense/howling manager. ----------------------------------------------------

-- Needs special handling:
  -- Terrorizing (fear)
  -- Traumatic (amnesia)
  -- Piercing (removes deafness)
  -- Forceful (knockdown)
  -- Screeching (mana damage)
  -- Comforting (mana restoration)
  -- Rejuvenating (willpower restoration)
  -- Disruptive (portal prevention)
  -- Serenading (luring)
  -- Wailing (health damage)
  -- Disturbing (disruption)
  -- Soothing (health restoration)
  -- Invigorating (endurance restoration)
  -- Enfeebling (enhances screeching and wailing)
  -- Lulling (sleepo beepo)

local vocal_type = {
  ["paralyzing"]      = "paresis", -- physical, pill
  ["baleful"]         = "impairment", -- physical, pill
  ["rousing"]         = "recklessness", -- mental, pill
  ["distasteful"]     = "anorexia", -- mental, poultice
  ["mind-numbing"]    = "stupidity", -- mental, pill
  ["stomach-turning"] = "vomiting", -- physical, pill
  ["claustrophobic"]  = "claustrophobia", -- mental, pill
  ["deranged"]        = "hallucinations", -- mental, pill
  ["deep"]            = "plodding", -- n/a, anabiotic
  ["dumbing"]         = "idiocy", -- n/a, anabiotic
  ["blurring"]        = "blurry_vision", -- physical, poultice
  ["debilitating"]    = "weariness", -- mental, pill
  ["berserking"]      = "berserking", -- mental, pill
  ["angry"]           = "hatred", -- mental, pill
  ["befuddling"]      = "confusion", -- mental, pill
}

getVocalAffliction = function (v)
  if not vocal_type[v] then
    return nil
  end

  return vocal_type[v]
end

local needBoneshaking = function ()
  return cd.defenses.boneshaking ~= true
end

local needSnarling = function ()
	if getTarget() == nil or getTarget() == "none" then
		return false
	end

	if cd.defenses.snarling ~= true then
		return true
	end

	return false
end

cd.class.Shapeshifter.prepare = function ()
	-- Ensure Boneshaking is on.
	-- Make sure we're Snarling at our target.
	if needBoneshaking() == true then
		send("boneshaking", false)
	end

	if needSnarling() == true then
		send("snarling " .. getTarget(), false)
	end
end

cd.class.Shapeshifter.unprepare = function ()
	-- Turn off Boneshaking.
	-- Turn off Snarling.
	sendStack("boneshaking off", "snarling off")
end

--------------------------------------------------------------------------------

LycanCombo = function (mode, tar)
	local attString, atk1, atk2, atk3
	tar = tar or getTarget()

	local comboTypes = {
		["bash"] = {"slash", "slash"},
		["h"] = {"skullwhack", "skullwhack"},
		["la"] = {"slash left arm", "slash left arm"},
		["ra"] = {"slash right arm", "slash right arm"},
		["ll"] = {"slash left leg", "slash left leg"},
		["rl"] = {"slash right leg", "slash right leg"},
    ["t"] = {"bodypunch", "bodypunch"},
    ["2a"] = {"slash left arm", "slash right arm"},
    ["2l"] = {"slash left leg", "slash right leg"},
	}
  
  local fury_combo = {
    ["la"] = {"left arm", "slash left arm", "slash left arm"},
    ["ra"] = {"right arm", "slash right arm", "slash right arm"},
    ["ll"] = {"left leg", "slash left leg", "slash left leg"},
    ["rl"] = {"right leg", "slash right leg", "slash right leg"},
    ["2a"] = {"left arm", "slash right arm", "slash right arm"},
    ["2l"] = {"left leg", "slash right leg", "slash right leg"},
    ["h"] = {"head", "throatslice", "throatslice"},
    ["t"] = {"torso", "spinalcrack", "spinalcrack"},
  }

  if cd.status.shapeshifter_fury then
    atk1 = fury_combo[mode][1]
    atk2 = fury_combo[mode][2]
    atk3 = fury_combo[mode][3]
    attString = "bite %s %s|combo %s %s %s" % {tar, atk1, tar, atk2, atk3}
  else
    atk1 = comboTypes[mode][1]
    atk2 = comboTypes[mode][2]
    attString = "combo %s %s %s" % {tar, atk1, atk2}
  end

  send(attString)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Shaman</name>
						<packageName></packageName>
						<script>cd.class.Shaman = {
	["Guild"] = "Shamans",

	["BashAttack"] = function ()
		local cmd_string = "commune lightning " .. getTarget()
		if cd.player.energy &gt;= 1 then
			cmd_string = "commune boost|" .. cmd_string
		end

    setQueueAction(cmd_string)
	end,
  
  can_bash_mounted = true,
}

cd.buffs.Shaman = {
	-- Shamanism
	["protection"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "shaman protection"},
	["shaman_warding"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "shaman warding"},
	["lifebloom"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "commune lifebloom"},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Wayfarer</name>
						<packageName></packageName>
						<script>local current_mastery = "wastelands"

cd.class.Wayfarer = {
	["Guild"] = "None",

	["BashAttack"] = function ()
    FurySustain()
    
    cd.status.wayfarer_axes_used = cd.status.wayfarer_axes_used or 0
    
    local axes = cd.status.wayfarer_axes_used
    
    -- if axes &lt; 1 then
      -- setQueueAction("axe lob %s" % {getTarget()})
    -- else
      setQueueAction("axe chop %s head" % {getTarget()})
    -- end
	end,
  
  can_bash_mounted = true,
}

cd.class.Wayfarer.limb_weights = {
  head = 0.95,
  torso = 0.25,
  left_arm = 0.25,
  right_arm = 0.25,
  left_leg = 1,
  right_leg = 1,
}

cd.buffs.Wayfarer = {
	-- Tenacity
	["weathering"] = {},
	["ironskin"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "wayfare ironskin"},
	["fleetfoot"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "wayfare fleetfoot on"},
  ["resilience"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "wayfare resilience on"},
  ["desolation"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "wayfare desolation on"},
  ["axe_obstruct"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "axe obstruct on"},
}

local canSustain = function ()
	if cd.ABBAL ~= true or
    isWayfarer() ~= true or
    isProne() == true or
    cd.player.fury &lt; 20 or
    blockedAff("sustain") == true then
		return false
	end

	return true
end

FurySustain = function ()
	if canSustain() == true then
		if cd.player.HP.percent &lt;= 70 then
			setQueueAction("fury sustain", 1)
		end
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Syssin</name>
						<packageName></packageName>
						<script>cd.class.Syssin = {
	["Guild"] = "Syssin",

	["BashAttack"] = function ()
    setQueueAction("bite %s camus" % {getTarget()})
	end,
  
  can_bash_mounted = true,
}

cd.buffs.Syssin = {
	-- Assassination.
	["warding"] = {["BAL"] = true, ["EQ"] = true},
  ["finesse"] = {["BAL"] = true, ["EQ"] = true},
  
  -- Subterfuge
  ["lipreading"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "lipread"},
	["palming"] = {["BAL"] = true, ["EQ"] = true},
  ["shadowsight"] = {["BAL"] = true, ["EQ"] = true},
  ["ghosted"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "conjure ghost"},
  ["shroud"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "conjure cloak"},
  ["shadowslip"] = {["BAL"] = true, ["EQ"] = true, ["command"] = "shadowslip on"},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Zealot</name>
						<packageName></packageName>
						<script>cd.class.Zealot = {
	["Guild"] = "Illuminai",

	["BashAttack"] = function ()
    send("flow %s pummel pummel" % {getTarget()}, false)
	end,

  parry_command = "fend",
}

cd.buffs.Zealot = {
	-- Purification
	["focalmark"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "enact focalmark"},
  ["tempered_body"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "enact tempering"},
  ["discharge"] = {["BAL"] = false, ["EQ"] = false, ["command"] = "enact discharge"},
  
  -- Psionics
  ["deathsight"] = {["BAL"] = false, ["EQ"] = false},
}

function zealotWinWinBitch()
  local act = ""
  -- if dnb.afft.enemy_last_parry == "head" then
  -- if the head is being parried, then
    -- comboAction = dnb.afft.separator .. "hackles "..(matches[2] or dnb.afft.target) .. " uprise" .. dnb.afft.separator .. "flow "..(matches[2] or dnb.afft.target) .. " clawtwist heelrush torso"
  -- else
  act = "hackles %s uprise|flow %s sunkick sunkick|psi shock %s" % {getTarget(), getTarget(), getTarget()}
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>None</name>
						<packageName></packageName>
						<script>cd.class.none = {
	["Guild"] = "none",

	["BashAttack"] = function ()
    setQueueAction("slash %s" % {getTarget()})
	end,
  
  can_bash_mounted = false,
}

cd.buffs.none = {
}</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Combat</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Bashing</name>
						<packageName></packageName>
						<script>canBash = function ()
  if cd.bashing.currentlyAttacking ~= true or
	blockedAff("bash") == true or
	cd.status.dead == true or
	isProne() == true then
		return false
	end

	return true
end

canCollectMist = function ()
  if ylemMistInRoom == true and (cd.player.city ~= nil and cd.player.city ~= "none") then
    return true
  end
  
  return false
end

cd.Bash = function ()
	-- Check first to see if we're wielding an icon.
	if cd.status.wieldL:find("^icon%d+$") ~= nil or cd.status.wieldR:find("^icon%d+$") ~= nil then
    setQueueAction("icon point %s" % {getTarget()})
		return
	end

	-- Simply executes a class's given attack.
	local c = cd.player.class
	if c == nil then
		error("Player's class not known. Check GMCP and cd.player table.")
		return
	elseif not cd.class[c] then
		error("Player's class undefined in class table.")
		return
	elseif not cd.class[c].BashAttack then
		error("The " .. c .. " class has no BashAttack defined!")
		return
	end

  if cd.class[c].can_bash_mounted == true and cd.status.mounted ~= true then
    setQueueAction("mnt")
  end

	cd.class[c].BashAttack()
end

cd.AutoBash = function ()
	if cd.modules.autobashing ~= true then
		cd.bashing.currentlyAttacking = false
		return
	end

  if canCollectMist() then
    setQueueOverride("absorb ylem")
  elseif canBash() then
		cd.Bash()
	end
end

cd.initiateBashing = function ()
  if cd.modules.pk == true then
  	cd.Battle()
  elseif cd.modules.autobashing == true then
		cd.bashing.currentlyAttacking = true
	end

	cd.Bash(getTarget())
end</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Superbashing</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Initialize</name>
							<packageName></packageName>
							<script>sb = sb or {}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Mob Database</name>
							<packageName></packageName>
							<script>-- This table contains the lists of mobs in each area, ordered by
-- priority.

sb.mobPriority = {
	["Spiral of the Corrupt"] = {
		"an ethereal, scarred jellyfish", "a five-tentacled octopus of jade", "a miasma-wreathed electric eel"
	},
	["Azdun dungeon"] = {
		"an arachnid Chiav guard", "an arachnid Chiav worker",
		"a huge pulsating spider", "a large pulsating spider", "a medium pulsating spider"
	},
	["Raugol Fissure"] = {
		"a stonescale mephit", "a stonescale ravager", "a scything skitterer",
	},
	["Mamashi Tunnels"] = {
		"Garthun, the Maw", "a greater nalas", "a mature nalas", "a young nalas",
		"a Githani master", "a Githani grappler", "a Githani inscriber",
		"a Mit'olk axeman", "a Mit'olk bladesman",
	},
	["Isle of Ollin"] = {
		"a blackened, ravenous shark", "a towering Nazetu guard", "a dark-furred, rabid boar",
		"a ferocious Alpha Syll", "a giant, rabid Syll", "a massive, verdant-furred Syll", "a young Syll cub",
		"Rylta, priestess of the Boru", "the Nazetu general, Iszran",
		"a stinking Nazetu soldier", "a rotting Nazetu ghoul", "a Nazetu comfort woman", "a boisterous Nazetu child",
		"a diligent Boru harvester", "a sharp-clawed Boru prowler", "a hissing Boru infant",
		"a fiendish, tainted Syll",
		"a massive black crab"
	},
	["Tiyen Esityi"] = {
		"a crazed Nazetu cutter", "a ball of chitinous legs",
		"Lieutenant Gharvoi", "Commander Marakhi", "Quartermaster Kuius", "Lieutenant Chiakhi", "Tirahl the Necromancer",
		"a mutated Nazetu intercessor", "a Nazetu necromancer", "a Nazetu captain", "a Nazetu halberdier", "a Nazetu crossbowman", "a deformed Nazetu priest", "a Nazetu provost", "a supply officer", "a Nazetu cook",
		"a massive, sacred serpent", "a bound shade", "a cancerous stallion", "a victimised intruder", "a tangible malevolence", "a Nazetu corrupter",
	},
	["Drakuum"] = {
		"a savage shade", "a blackened darkwalker", "a fierce hound",
		"a misty apparition", "a gnarled spirit"
	},
	["Ayhesa Cliffs"] = {
		"a Spellshaper Archon", "a Spellshaper Master", "a Spellshaper Adept"
	},
	["Three Rock Outpost"] = {
		"the cave bear, White Ghost",
		"an enormous Troll bandit", "a shifty bandit",
		"a huge, scarred wildcat", "a wildcat kitten", "a mountain wildcat",
		"a long-haired buffalo", "a beautiful wild horse"
	},
	["Caverns of Mor"] = {
		"Aclyr, the vampiric general", "a vampiric sentry", "a vampiric warrior",
		"a stench-ridden ghoul",
		"a robed, skeletal lich", "a ravenous, shadowy ghast",
		"a skeletal warrior"
	},
	["Fengard Keep"] = {
		"a vicious horned garwhol", "a massive argobole", "a fiery phenkyre", "an ogre berserker",
		"a pious invoker", "a brawny glaive knight", "a radiant lumore", "a pungent lichosphere", "a horrid basilwyrm", "a shrieking grimshrill", "an ethereal construct",
		"Taskmaster Grollum", "Hecuba, the Grim Witch", "Gloom, the construct", "Derban, the ice mage", "Grothgar, the ogre warlord", "Smirnick, the assassin",
		"Glixx, the Mutant", "Naggamantex, the Torturer", "Smythe, the Dwarven Trainer", "Helf'ga, the butcher", "the salacious Sisters", "Quel'zar, the Surgeon",
		"Sylvos, Squire of Gladius",
	},
	["Dun Fortress"] = {
		"screamer", "spitter", "blademistress", "prisoner"
	},
	["Ruins of Masilia"] = {
		"Fermian, excavation foreman", "Head Archeologist, Dolus", "Halim, the bartender",
		"a drunken archeologist", "a drunken excavator", "a Dwarven archeologist", "a Dwarven excavator",
		"a Masilidean etherealist", "a Masilidean physicalist", "a Masilidean mentalist", "a Masilidean focus",
		"a corrupted hackle", "a ravenous locust", "a mutated hare",
	},
	["Valley of Lodi"] = {
		"an adult wildcat", "a juvenile wildcat", "a sheep", "a young lamb", "a cave bat"
	},
	["Khauskin Mines"] = {
		"Khuldar, the bartender",
		"a statuesque Dwarven guard", "a powerful Dwarven warrior", "a stocky Dwarven woman", "a stout Dwarven man", "a Dwarven boy", "a Dwarven girl",
		"a grotesque fangtooth", "a soft-shelled klikkin",
		"a burly Dwarven miner",
	},
	["Tcanna Island"] = {
		"a spotted leopard", "a large capybara"
	},
	["Teshen Caldera"] = {
		"a Teshen reaver", "a Teshen scout", "a Teshen worker", "a Teshen raider"
	},
	["Teshen Undercroft"] = {
		"a Teshen raider", "a gargantuan Teshen drone"
	},
	["Spiral of the Corrupt"] = {
		"a rot-infested swordfish", "an ethereal, scarred jellyfish", "a five-tentacled octopus of jade", "a miasma-wreathed electric eel", "a taint-infested shark"
	},
	["Forgotten Dome"] = {
		"a gibbering kelki reaver", "a vile kelki prowler", "a mutated kelki ravager",
		"a monstrous coelacanth", "a large school of shiny green fish", "an angler fish"
	},
	["Eresh Mines"] = {
    "an oversized fly",
		"an angry vampire bat", "a swarm of black beetles", "a blind wolf spider", "a slimy brown salamander", "an enormous salamander"
	},
	["Itzatl Morass"] = {
		"an oversized earthworm", "a silent reed cat", "a green slime toad", "a long-toothed beaver", "a vicious snapping turtle", "a poisonous water moccasin", "a capybara", "an oversized fly"
	},
	["Bloodwood"] = {
		"a distressed spirit", "a wailing spirit", "a lingering spirit",
	},
	["Scidve"] = {
		"a large gray and black dugger", "a small black dugger", "a rock devil", "a Drakt guard", 
	},
	["Caverns of Telfinne"] = {
		"a cave-dwelling avisme", "a draconic zogura", "a slimy aryeim", "a tentacled morbol", "a fanged lugore",
	},
	["Nal'jin Depths"] = {
		"an enormous spinelash fish", "a sinewy Nal'jin eel", "a serpentine jawsnapper", "a shadow ray"
	},
	["Shastaan Warrens"] = {
		"an aberrant, obscenely deformed Kelki", "a ragged Kelki cultist", "a wild-eyed Kelki cultist"
	},
	["The Forgotten Mausoleum"] = {
		"a robed reanimated Dwarf", "a reanimated Dwarf woman", "a rotting Dwarf archer"
	},
	["Maghuir Fissure"] = {
		"a darkly robed priest", "an amorphous black umbra"
	},
	["Mount Humgurd"] = {
		"a ruffled grouse", "a bright-eyed kestrel", "a troll hunter", "a troll villager", "a troll farmer", "a black-spotted cow"
	},
	["lost city of Iviofiyiedu"] = {
		"a ghost of a Mhun guard", "a ghost of a Mhun soldier", "a ghost of a male Mhun", "a ghost of a young Mhun", "a ghost of a female Mhun"
	},
	["Dolbodi Campsite"] = {
		"a lithe buckawn", "a plump wild rabbit",
		"a slender forager", "a brawny hunter", "a burly lumberjack", "a grizzly foreman", "a scampering child",
		"a great white stag",
	},
  ["Rotfang Warren"] = {
    "a drooling village child",
    "a large rat", "a large, juicy cavehopper",
    "a gaunt villager", "a white-nosed bat", "a hunched villager", "a spindly village alpha",
    "a pale cavefish"
  },
  ["Ilhavon Forest"] = {
    "a burrowing owl", "a golden scale rattlesnake", "a white tailed doe", "a blackbird", "a young foal",
    "a large, yellow bee", "a large buck", "a gargantuan cicada", "a large grey goose", "a moth", "a wild hen",
    "a cricket", "a frazzled-looking possum"
  },
  ["Mhojave desert"] = {
    "a tiny desert jerboa", "a sidewinder", "a brown rockling", "a monitor lizard", "a small brown rockling", "a rattlesnake"
  },
  ["Arbothia"] = {
    "an enraged female villager", "an enraged male villager",
    "an enraged female servant", "an enraged male servant",
    "Marcello Relovec",
  },
  ["Torturers' Caverns"] = {
    "Tellimerius, the Deep Dweller",
    "a rank ghoul",
    "a maggot-ridden skeleton", "a vampiric overseer", "a flesh golem sentry", "a blood construct",
    "a vile inquisitor", "a scheming terramancer", "a voracious blind-fish"
  },
  ["Vilimo Fields"] = {
    "Nysaac",
    "a field harvester", "a field monitor", "a decaying donkey", "an undead bloodhound",
    "a decaying donkey", "a field hauler"
  },
  ["Myesian Run"] = {
    "a shattered eld monstrosity", "a skittering verdant eld", "a fiery crimson fragmented eld"
  },
  ["Dramedo Warrens"] = {
    "a vast ochre ooze", "a winged fungal horror",
    "a gigantic fungal strider", "a shambling fungal abomination",
    "a cruel Aslinn guard"
  },
  ["Dovan Hollow"] = {
    "a gaunt Aslinn slaver",
    "a scarred Aslinn slaver", "a sinewy Aslinn slaver",
    "a newly broken Golban slave",
  },
  ["Feral Caves"] = {
    "a gigantic green blob", "a massive green blob",
  },
  ["Xaanhal"] = {
    "a scraggly, insane Xorani mage",
    "an arrogant Xorani master at arms", "a bejeweled Xorani harem girl", "a willowy nest guardian",
    "a suspicious Xorani patrol", "a wiry Xorani guard", "a cautious Xorani guard", "a merciless Xorani warrior"
  },
  ["Yuzurai village"] = {
    "a sleek black rojalli",
    "a tiny aurivv bug"
  },
  ["Sparklight Rift"] = {
    "a greater fire elemental", "a fire elemental minion", "a churning fire elemental",
    "an oversized efreeti"
  },
  ["Ruins of Farsai"] = {
    "a shadowdrop", "a darkling",
    "a menacing black rojalli",
    "an unctuous creepling",
    "a panther-like Rajamala", "a Rajamalan priest",
    "a shadow",
  },
  ["Temple of Sonn"] = {
    "a choke creeper", "a shadowdrop",
    "a menacing black rojalli",
    "a giant mosquito", "an unctuous creepling", "a darkling",
    "a giant fly", "a giant moth", "an elongated black serpent",
  },
  ["Maul"] = {
    "a ravenous vakmut warhound", "a gaunt Aslinn guard", "a lithe Aslinn houndmaster", "an Aslinn slave catcher",
    "a wary Aslinn slaver", "a wretched Aslinn slaver"
  },
  ["Ia'shal Barrow"] = {
    "a ravenous cave spider",
    "a bulbous cave spider", "a wriggling grave worm"
  },
  ["Clawhook Range"] = {
    "a prowling barbed abosvi", "a sabre-toothed abosvi",
    "a shaggy, white mountain goat", "a worried-looking mangy goat", "a mottled grey mountain goat"
  },
  ["a basilisk lair"] = {
    "the basilisk queen",
    "a cave basilisk",
  },
  ["Bakal Chasm"] = {
    "a grey and brown basilisk"
  },
  ["Maul"] = {
    "a wary Aslinn slaver", "a lithe Aslinn houndmaster", "a menacing Aslinn gladiator", "a scarred Aslinn gladiator",
    "a ravenous vakmut warhound",
  },

	-- Vermin
	["Duiran"] = {
		"a reticulated planthopper",
	},
  ["City of Enorian"] = {
    "a tainted seagull",
  },
}

sb.apocMobPriority = {
	-- Wings (Tasur'ke, Mamashi)
	"a dragonfly", "a swiftly moving dragonfly",

	-- Sacs (Snake Pit, Centipede Cove)
	"a venomous water snake", "an andragil snake",

	-- Bones (Western Itzatl)
	"an orange-beaked mesia", "a silver-eared mesia",

	-- Tails (Fengard, Huanazedha)
	"a black rat", "a horde of twenty rats",

	-- Feathers (Pash (flight))
	"a bald eagle",

	-- Fat (Itzatl Morass, Vashnar Resort)
	"a beaver", "a long-toothed beaver",

	-- Testicles (Western Tundra)
	"a dusky mugyik", "a bull mugyik",

	-- Scales (Djeir, Siroccian Tunnels)
	"a large school of shiny green fish", "an angler fish",

	-- Legs (Itzatl Morass, Central Wilderness)
	"a green slime toad", "a mottled green bullfrog",

	-- Powder (Fractal Bloom)
	"a radiant crystalline entity", "a towering crystalline entity", "a squat crystalline entity", "a fractured crystalline entity",

	-- Oil (Snake Pit, Mhojave Desert)
	"a venenigol snake", "a large sertag snake", "a muselon snake", "a grassel snake",

	-- Horns (Eastern Ithmia, Dolbodi Campsite)
	"a great white stag",

	-- Claws (Vashnar Mountains, Dun Valley)
	"a muscular mountain lion",

	-- Hearts (Ollin, Three Widows, Aureliana Forest)
	"a dark-furred, rabid boar", "a wild boar",

	-- Skins (Snake Pit, Mhojave Desert)
	"a striped sea krait",

	-- Intestines (Scidve)
	"a large gray and black dugger", "a small black dugger",

	-- Teeth (Torston, Dun Valley)
	"an enormous blue-green crocodile", "a greyish green crocodile", "a fierce crocodile",
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Waypoints</name>
							<packageName></packageName>
							<script>-- A list of waypoints to speedwalk through when we're doing superbashing.

sb.waypoints = {
	["Ayhesa Cliffs"] = {},
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>API</name>
							<packageName></packageName>
							<script>sb.GetAreaPriority = function ()
	area = getCleanAreaName()

	if table.contains(sb.mobPriority, area) == true then
		return sb.mobPriority[area]
	else
		return false
	end
end

sb.GetPriorityTarget = function ()
	return sb.bashQueue[1]
end

sb.UpdateTarget = function ()
	if not sb.currentTarget then					-- No target at all.
		sb.currentTarget = sb.GetPriorityTarget()
	elseif table.contains(sb.bashQueue, sb.currentTarget) == false then
		sb.currentTarget = sb.GetPriorityTarget()
	end
	if sb.currentTarget ~= nil and sb.currentTarget ~= "none" then
		cd.Broadcast("Target: " .. sb.currentTarget)
	end
end

sb.GetTargetName = function ()
	return cd.room.mobs[sb.currentTarget]
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>handleMobListUpdate</name>
							<packageName></packageName>
							<script>local ProcessBashQueue = function ()
	-- Put our current target on top at all times.
	if not sb.currentTarget then
		debugecho("Acquiring new target.", "SB")
		sb.currentTarget = sb.GetPriorityTarget()
	elseif table.contains(sb.bashQueue, sb.currentTarget) == false then
		debugecho("Target not here, acquiring new target.", "SB")
		sb.currentTarget = sb.GetPriorityTarget()
	else
		debugecho("Modifying target queue.", "SB")
		for i,v in ipairs(sb.bashQueue) do
			if v == sb.currentTarget then
				table.remove(sb.bashQueue, i)
				break
			end
		end
		table.insert(sb.bashQueue, 1, sb.currentTarget)
	end

	debugecho("Current target: " .. tostring(sb.currentTarget), "SB")
end

handleMobListUpdate = function (e, ...)
	debugecho("Updating mob list.", "SB")
	sb.bashQueue = {}
	if cd.modules.apothecarybashing == true then
		for _, mobname in ipairs(sb.apocMobPriority) do
			for id, name in pairs(cd.room.mobs) do
				if mobname == name then
					table.insert(sb.bashQueue, id)
				end
			end
		end

		ProcessBashQueue()
	else
		if sb.GetAreaPriority() ~= false then
			for _, mobname in ipairs(sb.GetAreaPriority()) do		-- Get mob priority for area.
				for id, name in pairs(cd.room.mobs) do
					if mobname == name then
						table.insert(sb.bashQueue, id)
					end
				end
			end

			ProcessBashQueue()
		end
	end
end</script>
							<eventHandlerList>
								<string>update mob list</string>
							</eventHandlerList>
						</Script>
					</ScriptGroup>
					<Script isActive="yes" isFolder="no">
						<name>Battle</name>
						<packageName></packageName>
						<script>cd.Battle = function ()
	local c = cd.player.class

	if not cd.ClassRoutes[c] then
		notify("You have no class routes established for the " .. c .. " class.")
		return
	end

	currentBattleMode = cd.ClassRoutes[c].getMode()

	if not cd.ClassRoutes[c][currentBattleMode] then
		notify("You have not defined " .. currentBattleMode .. " as a route for " .. c .. ".")
		return
	end

	if type(cd.ClassRoutes[c][currentBattleMode]) ~= "function" then
		notify("The " .. currentBattleMode .. " route for " .. c .. " is malformed, please inspect it.")
		return
	end

	cd.ClassRoutes[c][currentBattleMode]()
end

cd.ClassRoutes = cd.ClassRoutes or {}</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Class Routes</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Monk</name>
							<packageName></packageName>
							<script>cd.ClassRoutes.Monk = {}

cd.ClassRoutes.Monk.modes = {
	"standard"
}

cd.ClassRoutes.Monk.getMode = function ()
	return currentBattleMode or "standard"
end

cd.ClassRoutes.Monk.standard = function ()
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Shapeshifter</name>
							<packageName></packageName>
							<script>-- NOTES
--   Recommended howls: forceful, baleful, debilitating/stupidity

-- ClassRoute definition. ------------------------------------------------------

cd.ClassRoutes.Shapeshifter = {}

cd.ClassRoutes.Shapeshifter.modes = {
	"standard", "bloody", "cheesy"
}

cd.ClassRoutes.Shapeshifter.getMode = function ()
	return currentBattleMode or "standard"
end

-- Randomizers and other lists. ------------------------------------------------

local randomAttacks = {
	"slash left arm", "slash right arm", "slash left leg", "slash right leg", "slash torso", "skullwhack"
}

local limb_map = {
	left_arm = "rend left",
	left_leg = "hamstring left",
	head = "jugular",
	torso = "spinalcrack",
	right_arm = "rend right",
	right_leg = "hamstring right",
}

local cannotBay = {
	"serenading", "disruptive", "enfeebling"
}

-- Limb counter utilities. -----------------------------------------------------

local destroyable_limbs = function ()
  local limb_count = 0
 	for _, l in ipairs({"head", "torso", "left_arm", "right_arm", "left_leg", "right_leg"}) do
    if cd.enemy.limbs[l] &gt;= 33.3 then
      limb_count = limb_count + 1
    end
  end
  
  return limb_count
end

local mangleable_limbs = function ()
  local limbs = {}
 	for _, l in ipairs({"head", "torso", "left_arm", "right_arm", "left_leg", "right_leg"}) do
    if cd.enemy.limbs[l] &lt;= 25.8 and eaff.has(l .. "_broken") then
      table.insert(limbs, l)
    end
  end
  
  return limbs
end

local get_breakable_limbs = function ()
  local pr = enemy.preresto()
  local parry = enemy.parry()
  local limbs = {}
  for limb, dam in pairs(cd.enemy.limbs) do
    if dam &lt;= 18.32 and
      (limb ~= "torso" and limb ~= "head") and
      not eaff.has(limb .. "_broken") and
      limb ~= pr and
      limb ~= parry then
      table.insert(limbs, l)
    end
  end
  return limbs
end

local get_random_limbs = function ()
  local pr = enemy.preresto()
  local parry = enemy.parry()

  local l = {}
  local limbs = {
    head = false,
    torso = false,
    left_arm = false,
    right_arm = false,
    left_leg = false,
    right_leg = false
  }
  
	if not eaff.has("ripped_spleen") then
    limbs.torso = true
    limbs.left_arm = true
    limbs.right_arm = true
	end

  if not eaff.has("ripped_throat") then
    limbs.head = true
	end

  if not eaff.has("ripped_groin") then
    limbs.left_leg = true
    limbs.right_leg = true
	end

  if pr then
    limbs[pr] = false
  end

  if parry then
    limbs[parry] = false
  end
  
  for limb, _ in pairs(limbs) do
    table.insert(l, limb)
  end
  
  return l
end

-- Helper functions to more cleanly audit afflictions. -------------------------

local canBay = function ()
	if aff.has("asleep") then return false end
	if aff.has("unconscious") then return false end
	if aff.has("petrified") then return false end
	if aff.has("crippled_throat") then return false end
  if cd.ABBAL ~= true then return false end

	return true
end

local getRips = function ()
	local count = 0
  for _, a in ipairs({"ripped_groin", "ripped_throat", "ripped_spleen"}) do
    if eaff.has(a) then
      count = count + 1
    end
  end

	return count
end

local canDevour = function ()
  if enemy.shield() then return false end
	if getRips() &gt;= 2 then return true end
	return false
end

local canThighlock = function ()
  if not enemy.prone() then return false end
  if eaff.has("ripped_groin") then return false end
  if eaff.has("left_leg_mangled") then return true end
  if eaff.has("right_leg_mangled") then return true end
	return false
end

local canNecklock = function ()
  if not enemy.prone() then return false end
  if eaff.has("ripped_throat") then return false end
  if eaff.has("head_damaged") then return true end
  if eaff.has("head_mangled") then return true end
	return false
end

local canArmpitlock = function ()
  if not enemy.prone() then return false end
  if eaff.has("rippled_spleen") then return false end
  if eaff.has("torso_mangled") then return true end
  if eaff.has("left_arm_mangled") then return true end
  if eaff.has("right_arm_mangled") then return true end
	return false
end

local canDestroy = function (limb)
  limb = limb:underscore()

  -- Can't go for the head if they're not prone.
  if limb == "head" and not enemy.prone() then return false end
  -- Don't bother if it's already mangled.
  if eaff.has("%s_mangled" % limb) then return false end
  -- Get em boys
	if eaff.has("%s_damaged" % limb) then return true end
  -- Something failed, fuck it.
	return false
end

local canMangle = function (limb)
  limb = limb:underscore()
  if limb == "head" then return false end
  if eaff.has("%s_damaged" % limb) then return false end
	if eaff.has("%s_broken" % limb) then return true end
	return false
end

local canRupture = function ()
  if not enemy.prone() then return false end
  if not eaff.has_any("writhe_thighlock", "writhe_armpitlock", "writhe_necklock") then return false end
  return true
end

-- Special conditions. ---------------------------------------------------------

local special_conditions = function (t)
  if eaff.has_any("writhe_necklock", "writhe_armpitlock", "writhe_thighlock") and not my_lock then
    return "quarter %s" % t
  end
  
  if canDevour() then
    return "devour %s" % t
  end

  if eaff.has("writhe_thighlock") and my_lock == "thighlock" and not eaff.has("ripped_groin") then
    return "groinrip %s" % t
  end

  if eaff.has("writhe_armpitlock") and my_lock == "armpitlock" and not eaff.has("ripped_spleen") then
    return "spleenrip %s" % t
  end

  if eaff.has("writhe_necklock") and my_lock == "necklock" then
    if eaff.has("ripped_throat") then
      -- Wereboars can suck a dick
      return "rupture %s" % t
    else
      return "throatrip %s" % t
    end
  end

	if canThighlock() then
		return "jawlock thigh of %s" % t
	end

	if canNecklock() then
		return "jawlock neck of %s" % t
	end

	if canArmpitlock() then
		return "jawlock armpit of %s" % t
	end
end

-- Full class routines. --------------------------------------------------------

cd.ClassRoutes.Shapeshifter.standard = function ()
  local t = getTarget():lower()
  local fury = cd.status.shapeshifter_fury == true
  local parry = enemy.parry()
  local limbs = get_limb_weights()
  local bite, atk1, atk2, bay; bay = ""

  local special_attack = special_conditions(t)
  
  if special_attack then
    return special_attack
  end
  
  if enemy.shield() then
    return "pounce %s" % t
  end

  if not parry then
    for _, l in ipairs({"left_leg", "right_leg", "left_arm", "right_arm"}) do
      if canDestroy(l) then
        return "destroy %s of %s" % {l:us_space(), t}
      end
    end
  end

  atk1 = limb_map[limbs[1]]
  atk2 = limb_map[limbs[2]]

  if fury then
    if eaff.has("torso_damaged") then
      bite = "gut %s" % t
    elseif eaff.has("blurred_vision") then
      bite = "facemaul %s" % t
    elseif eaff.has("paralysis") then
      bite = "spinalrip %s" % t
    elseif eaff.has("head_damaged") and enemy.prone() then
      bite = "skullcrush %s" % t
    else
      bite = "bite %s %s" % {t, limbs[1]:us_space()}
      if not enemy.prone() then
        bay = "|bay forceful at %s" % t
      end
    end
    
    return "%s|combo %s %s %s%s" % {bite, t, atk1, atk2, bay}
  end
  
  return "combo %s %s %s" % {t, atk1, atk2}
end

--------------------------------------------------------------------------------

cd.ClassRoutes.Shapeshifter.group = function ()
  local t = getTarget():lower()
  local fury = cd.status.shapeshifter_fury == true
  local parry = enemy.parry()
  local limbs = get_limb_weights()

  local special_attack = special_conditions(t)
  
  if special_attack then
    return special_attack
  end
  
  if enemy.shield() then
    return "pounce %s" % t
  end

  if not parry then
    for _, l in ipairs({"left_leg", "right_leg", "left_arm", "right_arm"}) do
      if canDestroy(l) then
        return "destroy %s of %s" % {l:us_space(), t}
      end
    end
  end

  for _, limb in ipairs({"left_arm", "left_leg", "right_leg", "right_arm"}) do
    if eaff.has(limb .. "_broken") and not eaff.has(limb .. "_damaged") then
      return "mangle %s of %s" % {limb:us_space(), t}
    end
  end

  if not parry then
    return "combo %s jugular jugular" % t
  end

  if fury then
    return "pounce %s|combo %s jugular jugular|bay wailing at %s" % {t, t, t}
  end

  return "combo %s jugular jugular|bay wailing at %s" % {t, t, t}
end

--------------------------------------------------------------------------------

cd.ClassRoutes.Shapeshifter.bloody = function ()
  local t = getTarget()
  local curing_limb = cd.enemy.last.resto_limb or nil
  local curing_time = 4.2
  if cd.enemy.last.resto_time then
    curing_time = os.clock() - cd.enemy.last.resto_time
  end
  local parrying_limb = enemy.parry() or nil

  -- Rupture early, Rupture often.
  if canRupture() then
    return "rupture %s" % t
  end

	-- Conditions are ripe for a lock. Sink those teeth in.
	if canArmpitlock() then
		return "jawlock armpit of %s" % t
	end

	if canThighlock() then
		return "jawlock thigh of %s" % t
	end

	if canNecklock() then
		return "jawlock neck of %s" % t
	end

	-- Target has damaged limbs, ruin 'em good.
  if eaff.has("torso_damaged") and parrying_limb ~= "torso" then
    return "lacerate %s" % t
  end
  
  if canDestroy("left arm") then
    return "destroy left arm of %s" % t
  elseif canDestroy("right arm") then
    return "destroy right arm of %s" % t
  elseif canDestroy("left leg") then
    return "destroy left leg of %s" % t
  elseif canDestroy("right leg") then
    return "destroy right leg of %s" % t
  end

	if canDestroy("head", curing_limb, parrying_limb) then
		return "skullcrush %s" % t
	end

  local bay = ""
  if eaff.has_any("left_leg_broken", "right_leg_broken") and cd.ABBAL == true then
    bay = "bay forceful at %s|" % t
  end

	-- If nothing urgent to do, find limbs to either damage or break.
	local select_limbs = {
    head = false,
    torso = false,
    left_arm = false,
    right_arm = false,
    left_leg = false,
    right_leg = false
  }

	if not eaff.has("ripped_spleen") then
    select_limbs.torso = true
    select_limbs.left_arm = true
    select_limbs.right_arm = true
	end

  if not eaff.has("ripped_throat") then
    select_limbs.head = true
	end

  if not eaff.has("ripped_groin") then
    select_limbs.left_leg = true
    select_limbs.right_leg = true
	end

  if curing_limb then
    select_limbs[curing_limb] = false
  end

  if parrying_limb then
    select_limbs[parrying_limb] = false
  end
  
  local r_limbs = {}
  for limb, bool in pairs(select_limbs) do
    if bool == true then
      table.insert(r_limbs, limb)
    end
  end

  -- We have a list of viable limbs, determine what to do with them.
  local limb1, limb2
  if table.contains(r_limbs, "head") then
    limb1, limb2 = "head", "head"
  else
    limb1, limb2 = r_limbs[math.random(#r_limbs)]:gsub("_", " "), r_limbs[math.random(#r_limbs)]:gsub("_", " ")
  end
  local limb0
  local att0, att1, att0; att0 = ""
  
  -- Enemy won't be off balance long enough, do damage.
	att1, att2 = "slash %s" % limb1, "slash %s" % limb2
  if limb1 == "head" then att1 = "jugular" end
  if limb2 == "head" then att2 = "jugular" end
  if cd.status.shapeshifter_fury == true then
    limb0 = r_limbs[math.random(#r_limbs)]:gsub("_", " ")
  end
  
  if limb0 then
    return "%sbite %s %s|combo %s %s %s" % {bay, t, limb0, t, att1, att2}
  else
    return "%scombo %s %s %s" % {bay, t, att1, att2}
  end
end

cd.ClassRoutes.Shapeshifter.cheesy = function ()
	attempt("battle", "combo " .. getTarget() .. " bodypunch jugular")
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Shaman</name>
							<packageName></packageName>
							<script>-- ClassRoute definition. ------------------------------------------------------

cd.ClassRoutes.Shaman = {}

cd.ClassRoutes.Shaman.modes = {
	"standard"
}

cd.ClassRoutes.Shaman.getMode = function ()
	return currentBattleMode or "standard"
end

-- Helper functions to more cleanly audit afflictions. -------------------------

local countBlackoutComboAffs = function ()
	local n = 0
	if AFFThaveAffliction(AFF_INFESTED, getTarget()) then n = n + 1 end
	if AFFThaveAffliction(AFF_BLIGHTED, getTarget()) then n = n + 1 end
	return n
end

local countSporulationAffs = function ()
	local n = 0
	if AFFThaveAffliction(AFF_CONFUSION, getTarget()) then n = n + 1 end
	if AFFThaveAffliction(AFF_IMPATIENCE, getTarget()) then n = n + 1 end
	if AFFThaveAffliction(AFF_HALLUCINATIONS, getTarget()) then n = n + 1 end
	return n
end

-- Skill costs and other vectors. ----------------------------------------------

local isBoosted = function ()
	return def.has("boosting")
end

local energy_threshold = {
	["leafstorm"] = 1,
	["vinelash"] = 1,
	["slam"] = 3,
	["vitiate"] = 2,
	["overload"] = 3,
	["scourge"] = 2,
	["stormbolt"] = 3,
	["sporulation"] = 3,
	["chainlightning"] = 3,
	["staticburst"] = 3,
	["equivalence"] = 3,
	["infest"] = 1,
	["effusion"] = 1,
	["spines"] = 1,
	["strangle"] = 3,
	["quicken"] = 5,
}

local getEnergyThreshold = function (skill)
	if energy_threshold[skill] == nil then
		return 0
	end

	if isBoosted() then
		if skill == "stormbolt" then
			return energy_threshold[skill] - 1
		end
	end

	return energy_threshold[skill]
end

local energy_cost = {
	["boost"] = 1,
	["slam"] = 1,
	["overload"] = 1,
	["chainlightning"] = 1,
	["staticburst"] = 1,
	["equivalence"] = 1,
	["strangle"] = 1,
}

local getEnergyCost = function (skill, boosted)
	if boosted ~= true then
		boosted = false
	end

	if energy_cost[skill] == nil then
		return 0
	end

	if AFFThaveAffliction(AFF_INFESTED, getTarget()) then
		if boosted == true then
			return 1
		else
			return 0
		end
	end

	if energy_threshold[skill] == nil then
		return 0
	end

	if boosted == true then
		return energy_cost[skill] + 1
	end

	return energy_cost[skill]
end

local energy_gen = {
	["lightning"] = 1,
	["vinelash"] = 1,
	["scourge"] = 1,
	["infest"] = 1,
	["spines"] = 1,
}

local getEnergyGeneration = function (skill)
	if energy_gen[skill] == nil then
		return 0
	end

	if isBoosted() then
		if skill == "vinelash" or skill == "scourge" then
			return 0
		end
	end

	return energy_gen[skill]
end

local haveEnergy = function (skill, boosted)
	if boosted ~= true then
		boosted = false
	end

	if cd.player.energy == nil or cd.player.energy == 0 then
		return false
	end

	if cd.player.energy &lt; getEnergyCost(skill, boosted) then
		return false
	end

	if cd.player.energy &lt; getEnergyThreshold(skill) then
		return false
	end

	return true
end

-- Skill-based conditional checks. ---------------------------------------------

local canReclaim = function ()
	if countEnemyMentalAfflictions() &gt;= 7 then return true end
	return false
end

local canStrangle = function ()
	if haveEnergy("strangle") == false then return false end
	if AFFThaveAffliction(AFF_PRONE, getTarget()) then return true end
	return false
end

local canLeafstorm = function ()
	if haveEnergy("leafstorm") == false then return false end
	if AFFThaveAffliction(AFF_SHIELD, getTarget()) then return true end
	return false
end

local canInfest = function ()
	if haveEnergy("infest") == false then return false end
	if not AFFThaveAffliction(AFF_BLACKOUT, getTarget()) then return false end
	if not AFFThaveAffliction(AFF_PREMONITION, getTarget()) then return false end
	if AFFThaveAffliction(AFF_INFESTED, getTarget()) then return false end
	return true
end

local canSpines = function ()
	if haveEnergy("spines") == false then return false end
	if not AFFThaveAffliction(AFF_BLACKOUT, getTarget()) then return false end
	if not AFFThaveAffliction(AFF_PREMONITION, getTarget()) then return false end
	-- Check for infested first.
	if not AFFThaveAffliction(AFF_INFESTED, getTarget()) then return false end
	if AFFThaveAffliction(AFF_BLIGHTED, getTarget()) then return false end
	return true
end

local canPremonition = function ()
	-- A bit of a ghetto workaround, but an energy requirement of two should
	-- imply to the system that it needs to vinelash a few times.
	if cd.player.energy &lt; 2 then return false end
	if AFFThaveAffliction(AFF_PREMONITION, getTarget()) then return false end
	-- Don't need to Premonition if we've stuck the combo.
	if countBlackoutComboAffs() == 2 then return false end
	return true
end

local canOverload = function ()
	if haveEnergy("overload", true) == false then return false end
	if AFFThaveAffliction(AFF_BLACKOUT, getTarget()) then return false end
	-- Don't need to Overload if we've stuck the combo.
	if countBlackoutComboAffs() == 2 then return false end
	return true
end

local canStaticburst = function ()
	if haveEnergy("staticburst", true) == false then return false end
	if countBlackoutComboAffs() &lt; 2 then return false end
	return true
end

local canSporulation = function ()
	if haveEnergy("sporulation", true) == false then return false end
	if countBlackoutComboAffs() &lt; 2 then return false end
	if countSporulationAffs() &gt;= 2 then return false end
	return true
end

-- Overgrowth stuff.

local canOvergrowth = function ()
	if cd.room.overgrowth == true then return false end
	return true
end

local canCanopy = function ()
	if cd.room.overgrowth == false then return false end
	if cd.room.indoors == true then return false end
	return true
end

local canAnimation = function ()
	if cd.room.overgrowth == false then return false end
	if cd.room.indoors == true then return false end
	if natureAnimation == true then return false end
	return true
end

-- Full class routines. --------------------------------------------------------

cd.ClassRoutes.Shaman.standard = function ()
	-- Standard: Goes for a reclamation kill as fast as humanly possible.

	-- Instakill condition met.
	if canReclaim() == true then
		notify("!", "RECLAMATION", false)
		attempt("battle", "commune reclamation " .. getTarget())
		return
	end

	-- Set up the fuckbox.
	if canAnimation() == true then
		notify("!", "ANIMATION", false)
		attempt("battle", "nature animation")
		return
	end

	if canCanopy() == true then
		notify("!", "CANOPY", false)
		attempt("battle", "nature canopy")
		return
	end

	if canOvergrowth() == true then
		notify("!", "OVERGROWTH", false)
		attempt("battle", "nature overgrowth")
		return
	end

	-- Pop that shield!
	if canLeafstorm() == true then
		notify("!", "LEAFSTORM", false)
		attempt("battle", "commune leafstorm " .. getTarget())
		return
	end

	-- Reclamation setup.
	if canSporulation() == true then
		notify("!", "BOOSTED SPORULATION", false)
		attempt("battle", "commune boost|commune sporulation " .. getTarget())
		return
	end

	if canStaticburst() == true then
		notify("!", "BOOSTED STATICBURST", false)
		attempt("battle", "commune boost|commune staticburst " .. getTarget())
		return
	end

	-- Blackout combo.
	if canSpines() == true then
		notify("!", "BLACKOUT COMBO #2: SPINES", false)
		attempt("battle", "commune spines " .. getTarget())
		return
	end

	if canInfest() == true then
		notify("!", "BLACKOUT COMBO #1: INFEST", false)
		attempt("battle", "commune infest " .. getTarget())
		return
	end

	-- Nail the blackout.
	if canOverload() == true then
		notify("!", "BOOSTED OVERLOAD", false)
		attempt("battle", "commune boost|commune overload " .. getTarget())
		return
	end

	-- Premonition after a slight buildup to ready the blackout combo.
	if canPremonition() == true then
		notify("!", "PREMONITION", false)
		attempt("battle", "shaman premonition " .. getTarget())
		return
	end

	-- Fallback attack in case nothing else wants to work.
	notify("!", "VINELASH", false)
	attempt("battle", "commune vinelash " .. getTarget())
end

--------------------------------------------------------------------------------</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Wayfarer</name>
							<packageName></packageName>
							<script>-- ClassRoute definition. ------------------------------------------------------

cd.ClassRoutes.Wayfarer = {}

cd.ClassRoutes.Wayfarer.modes = {
	"standard", "group"
}

cd.ClassRoutes.Wayfarer.getMode = function ()
	return currentBattleMode or "standard"
end

-- Randomizers and other lists. ------------------------------------------------

-- X

-- Limb counter utilities. -----------------------------------------------------

-- X

-- Helper functions to more cleanly audit afflictions. -------------------------

local function both_arms_broken()
  return eaff.has("left_arm_broken") and eaff.has("right_arm_broken")
end

local function both_legs_broken()
  return eaff.has("left_leg_broken") and eaff.has("right_leg_broken")
end

-- Special conditions. ---------------------------------------------------------

local special_conditions = function (t)
  if eaff.has("head_damaged") and
    eaff.has_any("left_arm_damaged", "right_arm_damaged", "left_leg_damaged", "right_leg_damaged") then
    return "axe execute %s" % t
  end
end

-- Full class routines. --------------------------------------------------------

cd.ClassRoutes.Wayfarer.standard = function ()
  local t = getTarget():lower()
  local axes = cd.status.wayfarer_axes_used or 0
  local elevation = cd.status.elevation
  local parry = enemy.parry()
  local limbs = get_limb_weights()

  local special_attack = special_conditions(t)
  
  if special_attack then
    return special_attack
  end
  
  return ""
end

--------------------------------------------------------------------------------

cd.ClassRoutes.Wayfarer.group = function ()
  local t = getTarget():lower()
  local axes = cd.status.wayfarer_axes_used or 0
  local elevation = cd.status.elevation
  local parry = enemy.parry()
  local limbs = get_limb_weights()
  local next_limb = limbs[1]
  local fury = cd.player.fury

  local special_attack = special_conditions(t)
  
  if special_attack then
    return special_attack
  end

  local fury_atk = ""  
  local pre_atk = "axe rampage %s|" % t
  local atk = ""
  local venom = ""

  if cd.ABBAL == true then
    if cd.player.HP.percent &lt;= 50 and fury &gt;= 20 then
      fury_atk = "fury sustain|"
    elseif fury &gt;= 60 then
      fury_atk = "fury shatter %s boost|" % t
    elseif fury &gt;= 40 then
      fury_atk = "fury shatter %s|" %t
    end
  end

  if not both_legs_broken() then
    venom = "epseth"
  elseif not both_arms_broken() then
    venom = "epteth"
  else
    venom = "slike"
  end

  if axes &gt;= 2 then
    -- Can only get away with this because I spent like a hundred dollars on a dumb arti
    atk = "axe toss %s low %s" % {t, venom}
    return "%s%s%s" % {fury_atk, pre_atk, atk}
  end
  
  if next_limb == "head" then
    atk = "axe bash %s" % t
  elseif next_limb == "torso" then
    atk = "axe carve %s" % t
  else
    atk = "axe cripple %s %s %s" % {t, next_limb:us_space(), venom}
  end
  
  return "%s%s%s" % {fury_atk, pre_atk, atk}
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Defense</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Limb Management</name>
							<packageName></packageName>
							<script>getPrerestoring = function ()
  if cd.player.restoring ~= nil and cd.player.restoring ~= "none" and cd.player.restoring ~= "" then
    return cd.player.restoring
  end
  
  return nil
end

getMostDamagedLimb = function ()
  local l, d = "head", 0
  for limb, damage in pairs(cd.player.limb) do
    if damage &gt; d then
      d = damage
      l = limb
    end
  end
  return l
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Parrying</name>
							<packageName></packageName>
							<script>canParry = function ()
  if not onSYNC() then
    return false
  end
  
  if blockedAff("parry") then
    return false
  end
  
  return true
end

getParryLimb = function ()
  local c = cd.player.class
  local ec = cd.enemy.class
  local limb = "head"

  if cd.class[ec] and cd.class[ec].parry_route then
    return cd.class[ec].parry_route()
  else
     -- Fallback if nothing else fits the bill.
    local highest_dmg = 0
    for l, d in pairs(cd.player.limb) do
      -- Skip any limb we're currently restoring.
      if getPrerestoring() == l then
        -- Do nothing.
      elseif d &gt; highest_dmg then
        highest_dmg = d
        limb = l
      end
    end
  end

  return limb	
end

getParry = function ()
  local c = cd.player.class
  local parry_cmd = "parry"
  local parry_limb = getParryLimb()

  if cd.class[c].parry_command then
    parry_cmd = cd.class[c].parry_command
  end

  return "%s %s" % {parry_cmd, parry_limb}
end

-- AUTO-PERRIER!
autoParry = function ()
  attempt("parry", getParry())
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Enemy Tracking</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Enemy Affliction Tracking Utility</name>
							<packageName></packageName>
							<script>eaff = eaff or {}

function eaff.has(aff)
  return cd.enemy.afflictions[aff] ~= nil
end

function eaff.has_any(...)
  local affs = {...}
  for _, a in ipairs(affs) do
    if eaff.has(a) then return true end
  end
  
  return false
end

function eaff.has_all(...)
  local affs = {...}
  local missing = false
  for _, a in ipairs(affs) do
    if not eaff.has(a) then missing = true end
  end

  return missing == false
end

function eaff.has_writhe()
  if eaff.has_any("writhe_armpitlock", "writhe_bind", "writhe_grappled", "writhe_gunk", "writhe_hoist", "writhe_impaled", "writhe_lure", "writhe_necklock", "writhe_ropes", "writhe_stasis", "writhe_thighlock", "writhe_transfix", "writhe_vines", "writhe_web") then
    return true
  end
  
  return false
end

function eaff.time(aff)
  if not eaff.has(aff) then
    return nil
  end
  
  return cd.enemy.afflictions[aff]
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Enemy General Tracking</name>
							<packageName></packageName>
							<script>enemy = enemy or {}

function enemy.prone()
  if cd.enemy.prone and cd.enemy.prone ~= 0 then
    -- Return the time the enemy has been prone for.
    return os.clock() - cd.enemy.prone
  end
  
  return false
end

function enemy.asleep()
  return cd.enemy.asleep == true
end

function enemy.parry()
  if not cd.enemy.parry then
    return false
  end
  
  if enemy.prone() and cd.enemy.class ~= "Monk" then
    return false
  end
  
  if enemy.asleep() then
    return false
  end
  
  if eaff.has_all("left_arm_broken", "right_arm_broken") or eaff.has_any("paresis", "paralysis", "frozen") then
    return false
  end
  
  if eaff.has_writhe() then
    return false
  end
  
  return cd.enemy.parry
end

function enemy.preresto()
  if cd.enemy.last.resto_limb and cd.enemy.last.resto_limb ~= "None" then
    return cd.enemy.last.resto_limb
  end
  
  return false
end

function enemy.shield()
  return cd.enemy.shielded == true
end

function enemy.reset()
  cd.enemy.afflictions = {}
  cd.enemy.defenses = {}
  cd.enemy.limbs = {
    head = 0,
    torso = 0,
    left_arm = 0,
    right_arm = 0,
    left_leg = 0,
    right_leg = 0,
  }
  cd.enemy.parry = nil
  cd.enemy.last.cured_limb = nil
  cd.enemy.last.resto_limb = nil
  cd.enemy.prone = 0
  cd.enemy.shield = nil
  
  zeal_rebuke = nil
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Afflictions</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Affliction Database</name>
							<packageName></packageName>
							<script>affliction = {
  ablaze = {
    mental = false,
    physical = true,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  achromatopsia = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  addiction = {
    mental = false,
    physical = true,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false
  },
  aeon = {
    mental = false,
    physical = false,
    curative = "willow",
    curetype = "pipe",
    venom = false
  },
  agoraphobia = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false
  },
  airwreath = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  allergies = {
    mental = false,
    physical = true,
    curative = "coagulation",
    curetype = "pill",
    venom = true
  },
  amplify_asphyxiation = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_blunt = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_cold = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_cutting = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_electric = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_fire = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_magic = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_poison = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_psychic = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_shadow = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_spirit = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  amplify_unblockable = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  anorexia = {
    mental = true,
    physical = false,
    curative = "epidermal",
    curetype = "poultice",
    venom = true,
    short = "ARX"
  },
  arrow_wound = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  asleep = {
    mental = false,
    physical = false,
    curative = "wake",
    curetype = "special",
    venom = false
  },
  asphyxiation_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  asthma = {
    mental = false,
    physical = true,
    curative = "decongestant",
    curetype = "pill",
    venom = true
  },
  attuned = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  backstabbed = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  backstrain = {
    mental = false,
    physical = true,
    curative = "soothing",
    curetype = "poultice",
    venom = false
  },
  baldness = {
    mental = false,
    physical = false,
    curative = "decongestant",
    curetype = "pill",
    venom = false
  },
  barbs = {
    mental = false,
    physical = false,
    curative = "pull barbs from body",
    curetype = "special",
    venom = false
  },
  battle_hunger = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  berserking = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false,
    short = "BSK"
  },
  blackout = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  blighted = {
    mental = false,
    physical = false,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false
  },
  blisters = {
    mental = false,
    physical = true,
    curative = "opiate",
    curetype = "pill",
    venom = false
  },
  blood_curse = {
    mental = false,
    physical = true,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false
  },
  blood_poison = {
    mental = false,
    physical = true,
    curative = "decongestant",
    curetype = "pill",
    venom = false
  },
  bloodlust = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  blunt_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  blurry_vision = {
    mental = false,
    physical = true,
    curative = "epidermal",
    curetype = "poultice",
    venom = true,
    short = "BLV"
  },
  body_odor = {
    mental = false,
    physical = false,
    curative = "coagulation",
    curetype = "pill",
    venom = false
  },
  bulimia = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  burnt_eyes = {
    mental = false,
    physical = true,
    curative = "epidermal",
    curetype = "poultice",
    venom = false
  },
  burnt_skin = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  claustrophobia = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false,
    short = "CLS"
  },
  clumsiness = {
    mental = false,
    physical = true,
    curative = "decongestant",
    curetype = "pill",
    venom = true
  },
  cold_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  collapsed_lung = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  commitment_fear = {
    mental = false,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false
  },
  confusion = {
    mental = true,
    physical = false,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false,
    short = "CNF"
  },
  conviction = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  corsin_weight = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  cracked_ribs = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  crippled = {
    mental = false,
    physical = false,
    curative = "opiate",
    curetype = "pill",
    venom = false
  },
  crippled_body = {
    mental = false,
    physical = false,
    curative = "opiate",
    curetype = "pill",
    venom = false
  },
  crippled_throat = {
    mental = false,
    physical = true,
    curative = "mending",
    curetype = "poultice",
    venom = false,
    short = "CPT"
  },
  crushed_chest = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  crushed_elbows = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  crushed_kneecaps = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  cutting_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  dazed = {
    mental = false,
    physical = false,
    curative = "recoup",
    curetype = "special",
    venom = false
  },
  deadening = {
    mental = false,
    physical = true,
    curative = "willow",
    curetype = "pipe",
    venom = true
  },
  deepwound = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  dementia = {
    mental = true,
    physical = false,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false
  },
  despair = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  destroyed_throat = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  direfrost = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  disabled = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  disfigurement = {
    mental = false,
    physical = true,
    curative = "yarrow",
    curetype = "pipe",
    venom = true
  },
  disorientated = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  disrupted = {
    mental = false,
    physical = false,
    curative = "concentrate",
    curetype = "special",
    venom = false
  },
  dissonance = {
    mental = false,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = false
  },
  distortion = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  dizziness = {
    mental = true,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = true
  },
  effused_blood = {
    mental = false,
    physical = false,
    curative = "epidermal",
    curetype = "poultice",
    venom = false
  },
  egocentric = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false
  },
  eldritch_invocation = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  electric_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  embedded_axe = {
    mental = false,
    physical = false,
    curative = "pull axe from me",
    curetype = "special",
    venom = false
  },
  emberbrand = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  epilepsy = {
    mental = true,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = false
  },
  exhausted = {
    mental = false,
    physical = true,
    curative = "coagulation",
    curetype = "pill",
    venom = false
  },
  faintness = {
    mental = true,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = false
  },
  farag_rot = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  fear = {
    mental = false,
    physical = false,
    curative = "compose",
    curetype = "special",
    venom = false
  },
  fire_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  flamewreathed_limb = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  flared = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  flash_blindness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  frostbrand = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  frostwreath = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  frozen = {
    mental = false,
    physical = true,
    curative = "caloric",
    curetype = "poultice",
    venom = false
  },
  frozen_feet = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  generosity = {
    mental = true,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  glasslimb = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  gloom = {
    mental = false,
    physical = false,
    curative = "epidermal",
    curetype = "poultice",
    venom = false
  },
  gorged = {
    mental = false,
    physical = false,
    curative = "epidermal",
    curetype = "poultice",
    venom = false
  },
  haemophilia = {
    mental = false,
    physical = true,
    curative = "coagulation",
    curetype = "pill",
    venom = true,
    short = "HAE"
  },
  hallucinations = {
    mental = true,
    physical = false,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false,
    short = "HLC"
  },
  halted = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  hatred = {
    mental = true,
    physical = false,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false,
    short = "HTD"
  },
  head_bruised = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  head_bruised_critical = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  head_bruised_moderate = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  head_damaged = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "DMH"
  },
  head_mangled = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "MGH"
  },
  head_ravaged = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  heartflutter = {
    mental = false,
    physical = true,
    curative = "opiate",
    curetype = "pill",
    venom = false
  },
  heatspear = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  hellsight = {
    mental = false,
    physical = false,
    curative = "willow",
    curetype = "pipe",
    venom = false
  },
  hubris = {
    mental = false,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  hypersomnia = {
    mental = false,
    physical = true,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false
  },
  hypertension = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  hypochondria = {
    mental = false,
    physical = false,
    curative = "decongestant",
    curetype = "pill",
    venom = false
  },
  hypothermia = {
    mental = false,
    physical = true,
    curative = "epidermal",
    curetype = "poultice",
    venom = false
  },
  ice_encased = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  idiocy = {
    mental = false,
    physical = false,
    curative = "anabiotic",
    curetype = "pill",
    venom = false,
    short = "IDO"
  },
  imbued = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  impairment = {
    mental = false,
    physical = true,
    curative = "decongestant",
    curetype = "pill",
    venom = false,
    short = "IPR"
  },
  impatience = {
    mental = true,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = false
  },
  impeded = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  indifference = {
    mental = true,
    physical = false,
    curative = "epidermal",
    curetype = "poultice",
    venom = false
  },
  infernal_seal = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  infernal_shroud = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  infested = {
    mental = false,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = false
  },
  intimidated = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  itchy = {
    mental = false,
    physical = false,
    curative = "touch tree",
    curetype = "special",
    venom = false
  },
  justice = {
    mental = false,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  laxity = {
    mental = true,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  leeched_aura = {
    mental = false,
    physical = false,
    curative = "meditate",
    curetype = "special",
    venom = false
  },
  left_arm_amputated = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  left_arm_broken = {
    mental = false,
    physical = true,
    curative = "mending",
    curetype = "poultice",
    venom = true,
    short = "BLA"
  },
  left_arm_bruised = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  left_arm_bruised_critical = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  left_arm_bruised_moderate = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  left_arm_damaged = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "DLA"
  },
  left_arm_dislocated = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  left_arm_mangled = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "MLA"
  },
  left_arm_numbed = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  left_arm_ravaged = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  left_leg_amputated = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  left_leg_broken = {
    mental = false,
    physical = true,
    curative = "mending",
    curetype = "poultice",
    venom = true,
    short = "BLL"
  },
  left_leg_bruised = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  left_leg_bruised_critical = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  left_leg_bruised_moderate = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  left_leg_damaged = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "DLL"
  },
  left_leg_dislocated = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  left_leg_mangled = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "MLL"
  },
  left_leg_numbed = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  left_leg_ravaged = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  lemniscate = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  lethargy = {
    mental = false,
    physical = true,
    curative = "coagulation",
    curetype = "pill",
    venom = false
  },
  lifebane = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  lightwound = {
    mental = false,
    physical = true,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  limp_veins = {
    mental = false,
    physical = true,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  loneliness = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false
  },
  lovers_effect = {
    mental = true,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  magic_fire = {
    mental = false,
    physical = true,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  magic_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  magnanimity = {
    mental = false,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  malevolence = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  marked = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  masochism = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false,
    short = "MAS"
  },
  mauled_face = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "MLF"
  },
  mental_disruption = {
    mental = true,
    physical = false,
    curative = "coagulation",
    curetype = "pill",
    venom = false
  },
  mental_fatigue = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  merciful = {
    mental = false,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false
  },
  migraine = {
    mental = false,
    physical = true,
    curative = "yarrow",
    curetype = "pipe",
    venom = false
  },
  mind_blank = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  mindclamped = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  mirroring = {
    mental = true,
    physical = false,
    curative = "opiate",
    curetype = "pill",
    venom = false
  },
  mistbrand = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  muddled = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  muscle_spasms = {
    mental = false,
    physical = false,
    curative = "soothing",
    curetype = "poultice",
    venom = false
  },
  mutation_sickness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  nightmare = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  numb_arms = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  numbed_skin = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  nyctophobia = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false
  },
  oiled = {
    mental = false,
    physical = false,
    curative = "scrub",
    curetype = "special",
    venom = false
  },
  omen = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  pacifism = {
    mental = true,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  paralysis = {
    mental = false,
    physical = true,
    curative = "opiate",
    curetype = "pill",
    venom = true,
    short = "PS+"
  },
  paranoia = {
    mental = true,
    physical = false,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false
  },
  paresis = {
    mental = false,
    physical = true,
    curative = "opiate",
    curetype = "pill",
    venom = true,
    short = "PS-"
  },
  patterns = {
    mental = false,
    physical = false,
    curative = "panacea",
    curetype = "pill",
    venom = false
  },
  peace = {
    mental = true,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = true
  },
  penance = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  petrified = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  physical_disruption = {
    mental = false,
    physical = true,
    curative = "coagulation",
    curetype = "pill",
    venom = false
  },
  plodding = {
    mental = false,
    physical = false,
    curative = "anabiotic",
    curetype = "pill",
    venom = false,
    short = "PLD"
  },
  poison_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  polymorph = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  premonition = {
    mental = true,
    physical = false,
    curative = "focus",
    curetype = "special",
    venom = false
  },
  psi_tether = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  psychic_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  punished_arms = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  punished_legs = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  quicksand = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  ravaged = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  recklessness = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = true,
    short = "RCK"
  },
  rend = {
    mental = false,
    physical = true,
    curative = "coagulation",
    curetype = "pill",
    venom = false,
    short = "REN"
  },
  resonance = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  right_arm_amputated = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  right_arm_broken = {
    mental = false,
    physical = true,
    curative = "mending",
    curetype = "poultice",
    venom = true,
    short = "BRA"
  },
  right_arm_bruised = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  right_arm_bruised_critical = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  right_arm_bruised_moderate = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  right_arm_damaged = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "DRA"
  },
  right_arm_dislocated = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  right_arm_mangled = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "MRA"
  },
  right_arm_numbed = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  right_arm_ravaged = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  right_leg_amputated = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  right_leg_broken = {
    mental = false,
    physical = true,
    curative = "mending",
    curetype = "poultice",
    venom = true,
    short = "BRL"
  },
  right_leg_bruised = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  right_leg_bruised_critical = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  right_leg_bruised_moderate = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  right_leg_damaged = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "DRL"
  },
  right_leg_dislocated = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  right_leg_mangled = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "MRL"
  },
  right_leg_numbed = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  right_leg_ravaged = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  ringing_ears = {
    mental = false,
    physical = true,
    curative = "decongestant",
    curetype = "pill",
    venom = false
  },
  ripped_groin = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  ripped_spleen = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  ripped_throat = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sadness = {
    mental = false,
    physical = false,
    curative = "antipsychotic",
    curetype = "pill",
    venom = false
  },
  salve_seared = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sand_trapped = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sandrot = {
    mental = false,
    physical = true,
    curative = "opiate",
    curetype = "pill",
    venom = false
  },
  sapped_constitution = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sapped_dexterity = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sapped_intelligence = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sapped_stats = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sapped_strength = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sealing_circle = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sealing_square = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  sealing_triangle = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  seduction = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  ["self-pity"] = {
    mental = false,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = false
  },
  sensitivity = {
    mental = false,
    physical = true,
    curative = "decongestant",
    curetype = "pill",
    venom = true
  },
  shaderot_benign = {
    mental = false,
    physical = false,
    curative = "panacea",
    curetype = "pill",
    venom = false
  },
  shaderot_body = {
    mental = false,
    physical = false,
    curative = "panacea",
    curetype = "pill",
    venom = false
  },
  shaderot_heat = {
    mental = false,
    physical = false,
    curative = "panacea",
    curetype = "pill",
    venom = false
  },
  shaderot_spirit = {
    mental = false,
    physical = false,
    curative = "panacea",
    curetype = "pill",
    venom = false
  },
  shaderot_wither = {
    mental = false,
    physical = false,
    curative = "panacea",
    curetype = "pill",
    venom = false
  },
  shadow_coat = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  shadow_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  shadowbrand = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  shadowed = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  shadowsphere = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  shivering = {
    mental = false,
    physical = true,
    curative = "caloric",
    curetype = "poultice",
    venom = false
  },
  shyness = {
    mental = false,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = true
  },
  slickness = {
    mental = false,
    physical = false,
    curative = "yarrow",
    curetype = "pipe",
    venom = true
  },
  smashed_throat = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  sore_ankle = {
    mental = false,
    physical = true,
    curative = "soothing",
    curetype = "poultice",
    venom = false
  },
  sore_wrist = {
    mental = false,
    physical = true,
    curative = "soothing",
    curetype = "poultice",
    venom = false
  },
  soul_disease = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  soul_poison = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  soulburn = {
    mental = false,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  soulchill = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  soulfire = {
    mental = false,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  soulpuncture = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  soulroot = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  spinal_rip = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "SPR"
  },
  spirit_weakness = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  spiritbane = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  spiritbrand = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  squelched = {
    mental = false,
    physical = false,
    curative = "yarrow",
    curetype = "pipe",
    venom = true
  },
  stiffness = {
    mental = false,
    physical = false,
    curative = "soothing",
    curetype = "poultice",
    venom = false
  },
  stonebrand = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  stonevice = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  stormtouched = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  stun = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  stupidity = {
    mental = true,
    physical = false,
    curative = "euphoriant",
    curetype = "pill",
    venom = true,
    short = "STU"
  },
  stuttering = {
    mental = false,
    physical = false,
    curative = "epidermal",
    curetype = "poultice",
    venom = true
  },
  superstition = {
    mental = false,
    physical = false,
    curative = "steroid",
    curetype = "pill",
    venom = false
  },
  taunted = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  temptation = {
    mental = false,
    physical = false,
    curative = "nil",
    curetype = "nil",
    venom = false
  },
  terror = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  thin_blood = {
    mental = false,
    physical = false,
    curative = "coagulation",
    curetype = "pill",
    venom = true
  },
  thorns = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  thunderstorm = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  torso_bruised = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  torso_bruised_critical = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  torso_bruised_moderate = {
    mental = false,
    physical = false,
    curative = "mending",
    curetype = "poultice",
    venom = false
  },
  torso_damaged = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "DTO"
  },
  torso_mangled = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false,
    short = "MTO"
  },
  torso_ravaged = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  tree_seared = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  trick_flame = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  troubled_breathing = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  vertigo = {
    mental = true,
    physical = false,
    curative = "depressant",
    curetype = "pill",
    venom = false
  },
  vinethorns = {
    mental = false,
    physical = false,
    curative = "pull thorn from body",
    curetype = "special",
    venom = false
  },
  vitalbane = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  void = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  voidgaze = {
    mental = false,
    physical = false,
    curative = "restoration",
    curetype = "poultice",
    venom = false
  },
  voidtrapped = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  vomiting = {
    mental = false,
    physical = true,
    curative = "coagulation",
    curetype = "pill",
    venom = false,
    short = "VOM"
  },
  voyria = {
    mental = false,
    physical = false,
    curative = "sip immunity",
    curetype = "special",
    venom = false
  },
  weak_grip = {
    mental = false,
    physical = false,
    curative = "soothing",
    curetype = "poultice",
    venom = false
  },
  weakvoid = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  weariness = {
    mental = true,
    physical = false,
    curative = "decongestant",
    curetype = "pill",
    venom = true,
    short = "WER"
  },
  whiplash = {
    mental = false,
    physical = true,
    curative = "soothing",
    curetype = "poultice",
    venom = false
  },
  windbrand = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  withering = {
    mental = false,
    physical = false,
    curative = "yarrow",
    curetype = "pipe",
    venom = false
  },
  wraith = {
    mental = false,
    physical = false,
    curative = "time",
    curetype = "special",
    venom = false
  },
  writhe_armpitlock = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_bind = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_grappled = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_gunk = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_hoist = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_impaled = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_lure = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_necklock = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_ropes = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_stasis = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_thighlock = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_transfix = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_vines = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
  writhe_web = {
    mental = false,
    physical = false,
    curative = "writhe",
    curetype = "special",
    venom = false
  },
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Cure Stacks</name>
							<packageName></packageName>
							<script>-- SPECIAL:
  -- stimulant gives energetic defense
  -- waterbreathing gives waterbreathing (duh)
  -- kawhe gives insomnia
  -- ototoxin gives deafness
  -- amaurosis gives blindness
  -- reishi gives rebounding

cure_stack = {}

cure_stack.antipsychotic = {
  "sadness", "confusion", "dementia", "hallucinations", "paranoia", "hatred", "addiction",
  "hypersomnia", "blood_curse", "blighted"
}

cure_stack.euphoriant = {
  "self_pity", "stupidity", "dizziness", "faintness", "shyness", "epilepsy", "impatience",
  "dissonance", "infested", "insomnia"
}

cure_stack.decongestant = {
  "baldness", "clumsiness", "hypochondria", "weariness", "asthma", "sensitivity", "ringing_ears",
  "impairment", "blood_poison"
}

cure_stack.depressant = {
  "commitment_fear", "merciful", "recklessness", "egocentric", "masochism", "agoraphobia",
  "loneliness", "berserking", "vertigo", "claustrophobia"
}

cure_stack.coagulation = {
  "body_odor", "lethargy", "allergies", "mental_disruption", "physical_disruption", "vomiting",
  "exhausted", "thin_blood", "rend", "haemophilia"
}

cure_stack.steroid = {
  "hubris", "pacifism", "peace", "lovers_effect", "laxity", "superstition", "generosity", "justice",
  "magnanimity"
}

cure_stack.opiate = {
  "paralysis", "paresis", "mirroring", "crippled_body", "crippled", "blisters", "slickness",
  "heartflutter", "sandrot"
}

cure_stack.anabiotic = {
  "plodding", "idiocy"
}

cure_stack.willow = {
  "aeon", "hellsight", "deadening"
}

cure_stack.yarrow = {
  "slickness", "withering", "disfigurement", "migraine", "squelched"
}

cure_stack.immunity = {
  "voyria"
}

cure_stack.epidermal_head = { 
  "indifference", "stuttering", "blurry_vision", "burnt_eyes"
}

cure_stack.epidermal_torso = {
  "anorexia", "gorged", "effused_yellowbile", "effused_blood", "effused_phlegm", "effused_blackbile"
}

cure_stack.epidermal_skin = {
  "anorexia", "gorged", "effused_yellowbile", "effused_blood", "effused_phlegm", "effused_blackbile",
  "indifference", "stuttering", "blurry_vision", "burnt_eyes",
}

cure_stack.soothing_skin = {
  "backstrain", "muscle_spasms", "stiffness", "whiplash",
}

cure_stack.soothing_head = {
  "whiplash",
}

cure_stack.soothing_torso = {
  "backstrain", "muscle_spasms", "stiffness",
}

cure_stack.soothing_left_arm = {
  "sore_wrist", "weak_grip",
}

cure_stack.soothing_right_arm = {
  "sore_wrist", "weak_grip",
}

cure_stack.soothing_left_leg = {
  "sore_ankle",
}

cure_stack.soothing_right_leg = {
  "sore_ankle",
}

cure_stack.mending_head = {
  "head_bruised_critical", "destroyed_throat", "throatclaw", "crippled_throat",
  "head_bruised_moderate", "head_bruised",
}

cure_stack.mending_torso = {
  "torso_bruised_critical", "ablaze", "cracked_ribs", "torso_bruised_moderate", "torso_bruised",
}

cure_stack.mending_left_arm = {
  "left_arm_bruised_critical", "left_arm_broken", "arm_broken", "crushed_elbows",
  "left_arm_bruised_moderate", "left_arm_bruised"
}

cure_stack.mending_right_arm = {
  "right_arm_bruised_critical", "right_arm_broken", "arm_broken", "crushed_elbows",
  "right_arm_bruised_moderate", "right_arm_bruised"
}

cure_stack.mending_left_leg = {
  "left_leg_bruised_critical", "left_leg_broken", "leg_broken", "crushed_kneecaps",
  "left_leg_bruised_moderate", "left_leg_bruised"
}

cure_stack.mending_right_leg = {
  "right_leg_bruised_critical", "right_leg_broken", "leg_broken", "crushed_kneecaps",
  "right_leg_bruised_moderate", "right_leg_bruised"
}

cure_stack.mending_arms = {
  "left_arm_bruised_critical", "left_arm_broken", "crushed_elbows", "left_arm_bruised_moderate",
  "left_arm_bruised", "right_arm_bruised_critical", "right_arm_broken", "right_arm_bruised_moderate",
  "right_arm_bruised",
}


cure_stack.mending_legs = {
  "left_leg_bruised_critical", "left_leg_broken", "crushed_kneecaps", "left_leg_bruised_moderate",
  "left_leg_bruised", "right_leg_bruised_critical", "right_leg_broken", "right_leg_bruised_moderate",
  "right_leg_bruised",
}

cure_stack.mending_skin = {
  "head_bruised_critical", "destroyed_throat", "throatclaw", "crippled_throat",
  "head_bruised_moderate", "head_bruised", "torso_bruised_critical", "ablaze", "cracked_ribs",
  "torso_bruised_moderate", "torso_bruised", "left_arm_bruised_critical", "left_arm_broken",
  "crushed_elbows", "left_arm_bruised_moderate", "left_arm_bruised", "right_arm_bruised_critical",
  "right_arm_broken", "right_arm_bruised_moderate", "right_arm_bruised", "left_leg_bruised_critical",
  "left_leg_broken", "crushed_kneecaps", "left_leg_bruised_moderate", "left_leg_bruised",
  "right_leg_bruised_critical", "right_leg_broken", "right_leg_bruised_moderate", "right_leg_bruised",
}

cure_stack.restoration_skin = {
}

cure_stack.restoration_head = {
  "head_mangled", "head_damaged", "smashed_throat", "mauled_face"
}

cure_stack.restoration_torso = {
  "burnt_skin", "crushed_chest", "spinal_rip", "collapsed_lung", "torso_mangled", "torso_damaged",
  "heatspear"
}

cure_stack.restoration_left_arm = {
  "left_arm_amputated", "left_arm_mangled", "left_arm_damaged"
}

cure_stack.restoration_right_arm = {
  "right_arm_amputated", "right_arm_mangled", "right_arm_damaged"
}

cure_stack.restoration_left_leg = {
  "left_leg_amputated", "left_leg_mangled", "left_leg_damaged"
}

cure_stack.restoration_right_leg = {
  "right_leg_amputated", "right_leg_mangled", "right_leg_damaged"
}


cure_stack.caloric_torso = {
  "frozen", "shivering"
}

cure_stack.caloric_skin = {
  "frozen", "shivering"
}

cure_stack.focus = {
  "muddled", "egocentric", "stupidity", "anorexia", "epilepsy", "mirroring", "mental_disruption",
  "peace", "paranoia", "hallucinations", "shyness", "stuttering", "dizziness", "indifference",
  "berserking", "pacifism", "lovers_effect", "hatred", "generosity", "claustrophobia", "vertigo",
  "loneliness", "agoraphobia", "masochism", "recklessness", "weariness", "confusion", "dementia",
  "premonition"
}</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Venom Mapping</name>
							<packageName></packageName>
							<script>local v_beneficial = {
  "oleander", "colocasia"
}

local v_special = {
  "oculus", "delphinium", "loki"
}

local v_affs = {
	aconite = "stupidity",
	curare = "paresis",
	darkshade = "allergies",
	digitalis = "shyness",
	epseth = "right_leg_broken",
	epteth = "left_arm_broken",
	euphorbia = "vomiting",
	eurypteria = "recklessness",
	gecko = "slickness",
	hepafarin = "haemophilia",
	jalk = "stuttering",
	kalmia = "asthma",
	larkspur = "dizziness",
	monkshood = "disfigurement",
	ouabain = "peace",
	prefarar = "sensitivity",
	scytherus = "thin_blood",
	selarnia = "squelched",
	slike = "anorexia",
	vardrax = "deadening",
	vernalius = "weariness",
	voyria = "voyria",
	xentio = "clumsiness",
}

function venom_aff(v)
  return v_affs[v] or nil
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Affliction Utility</name>
							<packageName></packageName>
							<script>local s_limbs = {
  head = "h",
  torso = "t",
  left_arm = "la",
  right_arm = "ra",
  left_leg = "ll",
  right_leg = "rl",
}

local function colorRamp(cur, max)
	local perc = (cur * 100) / max
	local color = {0, 0, 0}
	local r, g, b
  r = 0; g = 0; b = 0

	if cur &gt;= max then
		color = {255, 0, 0}
	else
    if perc &gt;= 51 then r = 255 else
      r = math.round((perc * 255) / 50)
    end

    if perc &gt;= 67 then
      
    elseif perc &gt;= 33 and perc &lt;= 67 then g = 255 else
      g = math.round((perc * 255) / 33)
    end
    
		if g &gt; 255 then g = 255 elseif g &lt; 90 then g = 90 end
		if r &gt; 255 then r = 255 elseif r &lt; 90 then r = 90 end
    if b &gt; 255 then r = 255 elseif b &lt; 90 then b = 90 end

		color = {r, g, b}
	end

	return color
end

function getAffShortString(aff)
  if not affliction[aff] then
    error("Passed invalid affliction (%s) to getAffShortString()." % tostring(aff))
    return nil
  end

  return affliction[aff].short or nil
end

function getEnemyAffString()
  local affs = cd.enemy.afflictions
  local strings = {}
  for a, _ in pairs(affs) do
    if getAffShortString(a) then
      local c
      if affliction[a].curative == "anabiotic" then
        c = "c_anabiotic"
      else
        c = "c_%s" % {affliction[a].curetype}
      end
      strings[#strings+1] = "&lt;%s&gt;%s" % {c, getAffShortString(a)}
    end
  end

  if #strings &gt;= 1 then
    return table.concat(strings, " ")
  end
  
  return "&lt;a_darkgrey&gt;---"
end

function getLimbDamageDisplay(limb)
  -- Pretty formatter for limb damage.
  local dam = cd.enemy.limbs[limb]
  -- local c = colorRamp(dam, 100) -- on hold until I can figure out the color ramp code
  local c = {49, 79, 79}

  if limb == cd.enemy.last.resto_limb then
    c = {154, 205, 50}
  elseif limb == enemy.parry() then
    c = {135, 206, 250}
  elseif dam == 0 then
    c = {49, 79, 79}
  elseif dam &lt; 33.3 then
    c = {162, 162, 162}
  elseif dam &lt; 66.6 then
    c = {255, 255, 50}
  else
    c = {255, 0, 0}
  end

  dam = string.format("%0.2f", dam)
  local pad = string.rep("0", 6 - dam:len())

  return "&lt;47,79,79&gt;%s&lt;%s,%s,%s&gt;%0.2f" % {pad, c[1], c[2], c[3], dam}
end

function getShortLimb(limb)
  return s_limbs[limb:underscore()]
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Limb Weighting</name>
							<packageName></packageName>
							<script>function get_limb_weights()
  local c = cd.player.class
  local weighted = {}
  local weighted_sort = {}
  local weights

  if temp_limb_weights then
    weights = temp_limb_weights
  else
    weights = cd.class[c].limb_weights or {
      head = 1,
      torso = 1,
      left_arm = 1,
      right_arm = 1,
      left_leg = 1,
      right_leg = 1,
    }
  end

  for limb, weight in pairs(weights) do
    local w = ((100 - cd.enemy.limbs[limb]) * weight)
  	weighted[limb] = w
  end

	if enemy.parry() then
		local p_limb = enemy.parry()
		weighted[p_limb] = nil
	end
  
  if cd.enemy.class == "Zealot" and zeal_rebuke then
    weighted[zeal_rebuke] = nil
  end

	if enemy.preresto() then
		local r_limb = enemy.preresto()
		weighted[r_limb] = nil
	end

  -- if isClass(CLASS_LUMINARY) then
  	-- limbs_weighted.head = nil
  	-- limbs_weighted.torso = nil
  -- end
	
  for k, v in spairs(weighted, function(t, a, b) return t[b] &lt; t[a] end) do
      table.insert(weighted_sort, k)
  end

	return weighted_sort
end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Special Affliction Utility</name>
							<packageName></packageName>
							<script>function has_tenacity_assault()
  if not wayfarer_tenacity_assault then
    return false
  end
  
  local t = os.clock() - wayfarer_tenacity_assault
  if t &lt;= 2 then
    return true
  end
  
  return false
end

function has_tenacity_punish()
  if not wayfarer_tenacity_punish then
    return false
  end
  
  local t = os.clock() - wayfarer_tenacity_punish
  if t &lt;= 40 then
    return true
  end
  
  return false
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Curing</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>API</name>
						<packageName></packageName>
						<script>-- Until I come up with a better method, pipes/syringes must be manually defined.
-- If the character does not have entries here, they will simply be ignored.
cd.cure.pipeIDs = {
	["Lin"] = {["elm"] = "228301", ["skullcap"] = "235098", ["valerian"] = "243405"},
}

canRefillPipes = function ()
	if onSYNC() ~= true or blockedAff("refill pipes") == true then
		return false
	end

	return true
end

cd.eat = function (n)
	local slice = ""
	if isUndead() == true then
		slice = "_slice"
	end

	sendStack("outc " .. n .. slice, "eat " .. n .. slice)
end

cd.cure.debugEcho = function (msg, option)
	if not debuggingCuring then
		return
	end

	echo("\n")
	if option == "header" then
		cecho("&lt;dark_goldenrod&gt;" .. msg)
	elseif option == "module" then
		cecho("&lt;dark_green&gt;  Module: &lt;green_yellow&gt;" .. msg)
	else
		cecho("  &lt;gold&gt;- &lt;a_darkgrey&gt;" .. msg)
	end
end

cd.cure.resetPipes = function ()
	if cd.player == nil then
		return
	end

	local name = cd.player.name

	if name ~= nil and cd.cure.pipeIDs[name] ~= nil then
		local elm = cd.cure.pipeIDs[name].elm
		local valerian = cd.cure.pipeIDs[name].valerian
		local skullcap = cd.cure.pipeIDs[name].skullcap

		cd.cure.pipes = {
			["elm"] = {["id"] = elm, ["uses"] = 10, ["lit"] = true},
			["valerian"] = {["id"] = valerian, ["uses"] = 10, ["lit"] = true},
			["skullcap"] = {["id"] = skullcap, ["uses"] = 10, ["lit"] = true},
		}
	else
		cd.cure.pipes = {
			["elm"] = {["id"] = "0", ["uses"] = 10, ["lit"] = true},
			["valerian"] = {["id"] = "0", ["uses"] = 10, ["lit"] = true},
			["skullcap"] = {["id"] = "0", ["uses"] = 10, ["lit"] = true},
		}
	end
end

cd.cure.refillPipes = function ()
	if canRefillPipes() == false then
		return
	end

	local refillList = {}

	for pipe, _ in pairs(cd.cure.pipes) do
		local id = cd.cure.pipes[pipe].id
		local uses = cd.cure.pipes[pipe].uses
		local lit = cd.cure.pipes[pipe].lit
		local contents = pipe

		if id == "0" then
			return
		end

		if pipe == "elm" and refillElm == true then
			if isUndead() == true then contents = "demulcent" end
			refillElm = nil
			refillList[id] = contents
		elseif pipe == "skullcap" and refillSkullcap == true then
			if isUndead() == true then contents = "sudorific" end
			refillSkullcap = nil
			refillList[id] = contents
		elseif pipe == "valerian" and refillValerian == true then
			if isUndead() == true then contents = "antispasmadic" end
			refillValerian = nil
			refillList[id] = contents
		end
	end

	for id, contents in pairs(refillList) do
		if isUndead() == true then
			attempt("refill " .. contents, "squirt " .. id .. "|siphon " .. contents .. " into " .. id)
		else
			attempt("refill " .. contents, "empty " .. id .. "|outc " .. contents .. "|put " .. contents .. " in " .. id)
		end
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Priority Lists</name>
						<packageName></packageName>
						<script>-- Notes for future improvement
--
--   Writhing
--      Affs that increase writhe time: clumsiness, lethargy, weariness, physical_disruption
--      dizziness, paralysis, frozen, and all forms of limb damage + breaks.
--      (mental_disruption will slow writhing from writhe_transfix)

cd.cure.priority = {}

cd.cure.priority.herb = {
	"paralysis", "paresis", "need_blindness", "hypochondria", "asthma", "impatience", "hallucinations",
	"need_deafness", "dementia", "self-pity", "stupidity", "mirroring", "masochism", "recklessness", "crippled",
	"mental_disruption", "superstition", "infested", "physical_disruption", "crippled_body",
	"sensitivity", "confusion", "earthrot", "peace", "epilepsy", "hatred", "lovers_effect", "hypersomnia",
	"heartflutter", "plodding", "berserking", "claustrophobia", "idiocy", "paranoia", "vertigo",
	"blighted",  "baldness", "commitment_fear", "hubris", "body_odor", "sadness", "thin_blood",
	"dissonance", "haemophilia", "clumsiness", "vomiting", "shyness", "sunlight_allergy", "weariness",
	"magic_impaired", "blood_curse", "blood_poison", "generosity", "addiction", "dizziness", "justice",
	"loneliness", "agoraphobia", "pacifism", "lethargy", "thin_blood", "rend", "sandrot", "resonance", "magnanimity"
}

cd.cure.priority.salve = {
	"belonephobia", "anorexia", "right_leg_amputated", "left_leg_amputated", "right_arm_amputated",
	"left_arm_amputated", "right_leg_mangled", "left_leg_mangled", "right_arm_mangled", "left_arm_mangled",
	"head_mangled", "torso_mangled", "right_leg_damaged", "left_leg_damaged", "right_arm_damaged", "left_arm_damaged",
	"destroyed_throat", "right_leg_broken", "left_leg_broken", "right_arm_broken", "left_arm_broken",
	"unknown_leg_broken", "unknown_arm_broken", "unknown_limb_broken",
	"left_leg_bruised", "right_leg_bruised", "left_arm_bruised", "right_arm_bruised",
	"head_pre", "left_leg_pre", "right_leg_pre", "left_arm_pre", "right_arm_pre", "torso_pre",
	"cracked_ribs", "crushed_chest", "crushed_kneecaps", "crushed_elbows",
	"head_damaged", "torso_damaged", "smashed_throat", "gorged",
	"spinal_rip", "ablaze", "indifference", "frozen", "shivering", "stuttering", "effused_blackbile",
	"effused_yellowbile", "effused_phlegm", "effused_blood", "throatclaw", "selarnia",
	"mauled_face", "blurry_vision", "burnt_eyes", "crippled_throat"
}

cd.cure.priority.pipe = {
	"aeon", "slickness", "hellsight", "withering", "deadening", "disfigurement"
}

cd.cure.priority.affelixir = {
	"voyria"
}

cd.cure.priority.focus = {
	"stupidity", "anorexia", "epilepsy", "mirroring", "paranoia", "hallucinations", "shyness",
	"stuttering", "dizziness", "indifference", "berserking", "pacifism", "lovers_effect", "hatred",
	"generosity", "claustrophobia", "vertigo", "loneliness", "agoraphobia", "superstition", "masochism", "recklessness",
	"weariness", "confusion", "dementia", "premonition"
}

-- Not technically a priority list, but will store what affs tree cures.
cd.cure.treeAffs = {
	"infested", "blighted", "paralysis", "right_arm_broken", "left_arm_broken", "right_leg_broken",
	"left_leg_broken", "mental_disruption", "physical_disruption", "rend", "aeon", "withering",
	"destroyed_throat", "confusion", "lovers_effect", "hatred", "epilepsy", "pacifism", "justice",
	"superstition", "hellsight", "peace", "shyness", "dizziness", "slickness", "sunlight_allergy",
	"asthma", "vomiting", "selarnia", "weariness", "thin_blood", "indifference", "berserking",
	"heartflutter", "haemophilia", "blood_curse", "blood_poison", "clumsiness", "sandrot",
	"hallucinations", "dementia", "recklessness", "anorexia", "masochism", "impatience", "stupidity",
	"generosity", "addiction", "deadening", "stuttering", "paranoia", "agoraphobia", "loneliness",
	"claustrophobia", "vertigo", "hypochondria", "lethargy", "hypersomnia", "frozen", "shivering",
	"sensitivity", "ablaze", "disfigurement", "dissonance", "crippled_throat", "idiocy", "plodding",
	"blurry_vision", "throatclaw", "magic_impaired", "mirroring", "mental_disruption",
	"physical_disruption", "crippled", "crippled_body"
}

-- We keep the anxieties separate to poll them in order.
cd.cure.anxieties = {
	"baldness", "body_odor", "hubris", "self-pity", "commitment_fear", "sadness"
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Can Checks</name>
						<packageName></packageName>
						<script>local actionList = {
	["stand"] = {"frozen", "paralysis", "left_leg_broken", "right_leg_broken", "left_leg_mangled", "right_leg_mangled"},
	["writhe"] = {"frozen"},
	["clot"] = {"hepafarin"},
	["refill pipes"] = {"paralysis"},
	["leap"] = {"loneliness"},
  ["parry"] = {"left_arm_broken", "right_arm_broken", "frozen", "paresis", "paralysis"},

	-- Defenses.
	["fangbarrier"] = {"slickness"},

	-- Generic bashing attack check, needs not be as rigorous as most.
	["bash"] = {"frozen", "paralysis", "pacifism", "hatred", "writhe_impaled"},
	["generic eq"] = {"frozen"},
	["generic bal"] = {"frozen", "paralysis"},

	-- Class stuff.
	["numb"] = {"sensitivity", "paralysis"},
	["transmute"] = {"paralysis"},
  ["sustain"] = {"paralysis"},
	["corpus mending"] = {"paralysis"},

	-- Curing.
	["herb"] = {"anorexia", "gorged", "destroyed_throat", "cocoon"},
	["salve"] = {"slickness"},
	["pipe"] = {"asthma"},
	["moss"] = {"anorexia"},
	["focus"] = {"impatience"},
	-- Shell fetish and a 'searing' effect should stop tree!
	["tree"] = {"paralysis"},
	["elixir"] = {"anorexia"},
	["affelixir"] = {"anorexia"},
	["renew"] = {},
	["clot"] = {"hepafarin"},
	["compose"] = {},
	["concentrate"] = {"impatience"},
}

local binding_restricted_actions = {
  "stand", "parry", "bash", "leap"
}

blockedAff = function (action)
	if aff.has("stun") or aff.has("petrified") or aff.has("asleep") then
		cd.cure.debugEcho("&lt;indian_red&gt;" .. action .. " prohibited: stunned, asleep, or petrified.")
		return true
	end

	for i,v in ipairs(actionList[action]) do
		if aff.has(v) then
			cd.cure.debugEcho("&lt;indian_red&gt;" .. action .. " prevented by " .. v .. ".")
			return true
		end
	end

	-- Prevent tree if both arms are broken.
	if action == "tree" and aff.has("left_arm_broken") and aff.has("right_arm_broken") then
		cd.cure.debugEcho("&lt;indian_red&gt;tree prevented by two broken arms.")
		return true
	end

	-- Don't allow bashing as EQ-based classes unless we don't have
	-- magic_impaired or confusion.
	if cd.player.class == "Archivist" or
	cd.player.class == "Sciomancer" or
	cd.player.class == "Ascendril" or
	cd.player.class == "Shaman" then
		if (aff.has("magic_impaired") or aff.has("confusion")) and action == "bash" then
			cd.cure.debugEcho("&lt;indian_red&gt;" .. action .. " prohibited: cannot safely bash.")
			return true
		end
	end
  
  if isBound() == true and table.contains(binding_restricted_actions, action) then
    return true
  end

	return false
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Controller</name>
						<packageName></packageName>
						<script>local addSpecialAfflictions = function ()
	-- Creates artificial afflictions based on certain conditions.

	if cd.player.name == nil then
		return
	end

	if cd.defenses.blindness ~= true then
		aff.add("need_blindness")
	else
		aff.rem("need_blindness")
	end

	if cd.defenses.deafness ~= true then
		aff.add("need_deafness")
	else
		aff.rem("need_deafness")
	end
end

cd.cure.initProcess = function ()
	cd.cure.debugEcho("Flushing cureProcess.")

	addSpecialAfflictions()

	cureProcess = {}
	cureExpect = {}
end

cd.cure.controller = function ()
	cd.cure.debugEcho("Initiating dry run. Module is " .. tostring(cd.modules.curing) .. ".", "header")

	if cd.modules.curing == true then
		cd.cure.initProcess()

		cd.cure.stats()
		cd.cure.herb()
		cd.cure.salve()
		cd.cure.pipe()
		cd.cure.affelixir()
		cd.cure.focus()
		cd.cure.tree()
		cd.cure.renew()

--		cd.cure.binds()
		cd.cure.clot()
		cd.cure.special()
		cd.cure.class()

		cd.cure.process()
	end

	debuggingCuring = nil
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>(stats) Heal HP/MP</name>
						<packageName></packageName>
						<script>function canDrinkElixir()
	if cd.balances.elixir ~= true or cd.status.dead == true or blockedAff("elixir") == true then
		return false
	end

	return true
end

function canEatMoss()
	if cd.balances.moss ~= true or cd.status.dead == true or blockedAff("moss") == true or isBound() ~= false then
		return false
	end

	return true
end

local function EatMoss()
	if isUndead() == true then
		return "outc kidney_slice|eat kidney_slice"
	else
		return "outc moss|eat moss"
	end
end

function cd.cure.stats()
	cd.cure.debugEcho("stats", "module")
	local HPp = (cd.player.HP.current * 100) / cd.player.HP.max
	local MPp = (cd.player.MP.current * 100) / cd.player.MP.max
	local needMoss, needHealth, needMana = false, false, false
	if HPp &lt;= 90 or MPp &lt;= 90 then
		needMoss = true
	end

	if needMoss == true then
		if HPp &lt;= 75 then needHealth = true end
		if MPp &lt;= 75 then needMana = true end
	else
		if HPp &lt;= 85 then needHealth = true end
		if MPp &lt;= 75 then needMana = true end
	end

	if needMoss == true and canEatMoss() == true then
		if debuggingCuring then
			cd.cure.debugEcho([[attempt("moss", EatMoss())]])
		else
			attempt("moss", EatMoss())
		end
	end

	if canDrinkElixir() == true then
		local command
		if needHealth == true then
			if isUndead() == true then
				command = "stick analeptic"
			else
				command = "drink health"
			end

			if debuggingCuring then
				cd.cure.debugEcho([[attempt("cureHM", ]] .. command .. [[)]])
			else
				attempt("cureHM", command)
			end
		elseif needMana == true then
			if isUndead() == true then
				command = "stick stimulant"
			else
				command = "drink mana"
			end

			if debuggingCuring then
				cd.cure.debugEcho([[attempt("cureHM", ]] .. command .. [[)]])
			else
				attempt("cureHM", command)
			end
		end
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>(binds) Bindings</name>
						<packageName></packageName>
						<script>bindAffs = {
	"writhe_bind",
	"writhe_ropes",
	"writhe_transfix",
	"writhe_vines",
	"writhe_web",
	"writhe_impaled",
	"writhe_thighlock",
	"writhe_necklock",
	"writhe_armpitlock",
	"writhe_lure",
	"writhe_feed",
	"mob_impaled",
	"grappled",
}

isBound = function ()
	for i, v in ipairs(bindAffs) do
		if aff.has(v) then
			return v
		end
	end

	return false
end

canWrithe = function ()
	if currentlyWrithing == true or blockedAff("writhe") == true then
		return false
	elseif onBAL() == false then
		if aff.has("mob_impaled") or aff.has("writhe_feed") or aff.has("writhe_lure") then
			return false
		end
	end

	return true
end

cd.cure.binds = function ()
	cd.cure.debugEcho("binds", "module")
	if isBound() ~= false and canWrithe() == true then
		local binding = isBound()

		cureProcess.binds = afflictionList[binding].cure
		cureExpect.binds = binding
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>(class) Class</name>
						<packageName></packageName>
						<script>canCorpusMend = function ()
	if onSYNC() ~= true or isVampire() ~= true or cd.balances.corpusMending ~= true or isProne() == true or blockedAff("corpus mending") == true then
		return false
	end

	return true
end

canSustain = function ()
	if onSYNC() ~= true or isWayfarer() ~= true or isProne() == true or cd.player.fury &lt; 20 or cd.player.ability_bal == false then
		return false
	end

	return true
end

local doMonkCuring = function ()
	-- Transmute when bashing.
	if canTransmute() == true and cd.modules.autobashing == true then
		if cd.player.HP.current &lt;= math.round(cd.player.HP.max * 0.65)
		and cd.player.MP.current &gt;= 1500 then
			if debuggingCuring then
				cd.cure.debugEcho([[attempt("transmute", "transmute mana 1000")]])
			else
				attempt("transmute", "transmute mana 1000")
			end
		end
	end

	-- Mind Cleanse.
	--    Cleanse will clear Anorexia first, so it's handy in a pinch.

	-- Mind Push.
	--    Note: Push uses the same aff list as tree tattoo.
end

local doWayfarerCuring = function ()
	if canSustain() == true and cd.modules.autobashing == true then
		if cd.player.HP.current &lt;= math.round(cd.player.HP.max * 0.75) then
			if debuggingCuring then
				cd.cure.debugEcho([[attempt("sustain", "fury sustain")]])
			else
				attempt("sustain", "fury sustain")
			end
		end
	end
end

local doVampireCuring = function ()
	if canCorpusMend() == true then
		if cd.player.HP.current &lt;= math.round(cd.player.HP.max * 0.5) then
			if debuggingCuring then
				cd.cure.debugEcho([[attempt("corpus mend", "mend")]])
			else
				attempt("corpus mend", "mend")
			end
		end
	end
end

cd.cure.class = function ()
	cd.cure.debugEcho("class", "module")

	-- Monk checks.
	if cd.player.class == "Monk" then
		doMonkCuring()
	elseif isWayfarer() == true then
		doWayfarerCuring()
	elseif isVampire() == true then
		doVampireCuring()
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>(clot) Clotting</name>
						<packageName></packageName>
						<script>canClot = function ()
	if blockedAff("clot") == true then
		return false
	end

	return true
end

cd.cure.clot = function ()
	cd.cure.debugEcho("clot", "module")
	local blood = cd.status.bleeding or 0

	-- Mana cost: 54
	-- Clot amount: 20
	local clot = 0
	if blood &gt;= 20 then
		clot = math.floor(blood / 20)
	end

	if clot &gt; 0 and (clot * 54) &lt; (cd.player.MP.current - 500) then
		if debuggingCuring then
			cd.cure.debugEcho([[attempt("clot", "clot ]] .. clot .. [[")]])
		else
			attempt("clot", "clot " .. clot)
		end
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Focus / Tree / Renew</name>
						<packageName></packageName>
						<script>canRenew = function ()
	if isEndgame() ~= true then
		return false
	end

	if onSYNC() ~= true or isProne() == true or cd.balances.renew ~= true then
		return false
	elseif cd.player.MP.current &lt; 500 or cd.player.WIL.current &lt; 50 then
		cd.cure.debugEcho("Can't renew, not enough mana or willpower.")
		return false
	end

	return true
end

getRenewCommand = function ()
	if cd.player.race == "azudim" then
		return "reconstitute"
	elseif cd.player.race == "yeleni" then
		return "renew"
	elseif cd.player.race == "idreth" then
		return "erase"
	elseif cd.player.race == "ankyrean" then
		return "recover"
	else
		error("Tried to use getRenewCommand() with invalid race.")
		return nil
	end
end

getTreeAffs = function ()
	local skipAnxieties = false
	local treetable = {}

	for affliction, _ in pairs(cd.afflictions) do
		if table.contains(cd.cure.treeAffs, affliction) == true then
         -- Exceptions.

         -- Don't count infested and/or blighted if we have premonition.
         if (affliction == "infested" or affliction == "blighted") and aff.has("premonition") then
            -- doo dee doo

         -- Don't count a broken limb if it's damaged.
         elseif (affliction == "right_arm_broken" and aff.has("right_arm_damaged"))
         or (affliction == "left_arm_broken" and aff.has("left_arm_damaged"))
         or (affliction == "right_leg_broken" and aff.has("right_leg_damaged"))
         or (affliction == "left_leg_broken" and aff.has("left_leg_damaged")) then
            -- nothin

         -- Can't cure shivering if we're frozen.
         elseif affliction == "shivering" and aff.has("frozen") then
            -- skip it

         -- Can't cure disfigurement if our face is mauled.
         elseif affliction == "disfigurement" and aff.has("mauled_face") then
            -- nope

			else
				table.insert(treetable, affliction)
			end
		end
	end

	for _, anxiety in ipairs(cd.cure.anxieties) do
		if not aff.has(anxiety) then
			-- skippu.
		elseif table.contains(cureExpect, anxiety) == true then
			-- already expecting to cure it.
			-- skip this anxiety but don't stop polling them.
		elseif skipAnxieties == true then
			break
		else
			table.insert(treetable, anxiety)
			skipAnxieties = true
		end
	end

	return treetable
end

getFocusAffs = function ()
	local focustable = {}

	for aff, _ in pairs(cd.afflictions) do
		if table.contains(cd.cure.priority.focus, aff) == true then
			table.insert(focustable, aff)
		end
	end

	return focustable
end

canTree = function ()
	if cd.balances.tree ~= true
	or blockedAff("tree") == true then
		return false
	end

	return true
end

canFocus = function ()
	if cd.balances.focus ~= true or blockedAff("focus") == true then
		return false
	elseif aff.has("indifference") and cd.player.MP.current &lt; 500 then
		cd.cure.debugEcho("Need 500 mana to focus (indifference).")
		return false
	elseif cd.player.MP.current &lt; 250 or cd.player.WIL.current &lt; 75 then
		cd.cure.debugEcho("Need 250 mana and 75 willpower to focus.")
		return false
	end

	return true
end

cd.cure.focus = function ()
	if canFocus() ~= true then
		return
	end

   local f_affs = getFocusAffs()
   local my_affs = {}

   -- Tally up our focusable affs.
   for affliction, time in pairs(cd.afflictions) do
      if table.contains(f_affs, affliction) == true then
         cd.cure.debugEcho("&lt;indian_red&gt;Found focusable affliction: " .. affliction .. ".")
         my_affs[affliction] = true
      end
   end

   -- Remove any affs we're already trying to cure.
   for bal, affliction in pairs(cureExpect) do
      if my_affs[affliction] == true then
         cd.cure.debugEcho("&lt;indian_red&gt;Already trying to cure " .. affliction .. " with " .. bal .. ".")
         my_affs[affliction] = nil
      end
   end

	-- Run through the focus list and focus away the first positive item.
	for _, affliction in ipairs(f_affs) do
		if my_affs[affliction] == true then
			cureProcess.focus = "focus"
			cureExpect.focus = affliction
			break
		end
	end
end

cd.cure.tree = function ()
	if canTree() ~= true then
		return
	end

   local t_affs = getTreeAffs()
   local my_affs = {}

   -- Tally up our tree-curable affs.
   for affliction, time in pairs(cd.afflictions) do
      if table.contains(t_affs, affliction) == true then
         cd.cure.debugEcho("&lt;indian_red&gt;Found tree-curable affliction: " .. affliction .. ".")
         my_affs[affliction] = true
      end
   end

   -- Remove any affs we're already trying to cure.
   for bal, affliction in pairs(cureExpect) do
      if my_affs[affliction] == true then
         cd.cure.debugEcho("&lt;indian_red&gt;Already trying to cure " .. affliction .. " with " .. bal .. ".")
         my_affs[affliction] = nil
      end
   end

   -- Got anything left? Let's cure it.
   if table.size(my_affs) &gt; 0 then
      cureProcess.tree = "touch tree"
   end
end

cd.cure.renew = function ()
	if canRenew() ~= true then
		return
	end

	-- Fact: Renew uses the same list as the tree tattoo.
   local r_affs = getTreeAffs()
   local my_affs = {}

   -- Tally up our renewable affs.
   for affliction, time in pairs(cd.afflictions) do
      if table.contains(r_affs, affliction) == true then
         my_affs[affliction] = true
      end
   end

   -- Remove any affs we're already trying to cure.
   for bal, affliction in pairs(cureExpect) do
      if my_affs[affliction] == true then
         my_affs[affliction] = nil
      end
   end

	-- Count what's left, remove an aff assuming tree will catch it.
	local final_count = table.size(my_affs)
	if cureProcess.tree ~= nil then final_count = final_count - 1 end

	cd.cure.debugEcho(final_count .. " total renewable affs after culling.")

	if final_count &gt; 0 then
      cureProcess.renew = getRenewCommand()
   end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>(special) Stand, Compose, Concentrate, Etc.</name>
						<packageName></packageName>
						<script>canStand = function ()
	if blockedAff("stand") == true or isBound() ~= false then
		return false
	end

	return true
end

canCompose = function ()
	if blockedAff("compose") == true then
		return false
	end

	return true
end

canConcentrate = function ()
	if blockedAff("concentrate") == true then
		return false
	end

	return true
end

local cureDisrupted = function ()
	if cd.EQ == true then
		cd.cure.debugEcho("&lt;indian_red&gt;Player has EQ, not disrupted.")
		aff.rem("disrupted")
		return
	end

	if aff.has("disrupted") and canConcentrate() == true then
		if debuggingCuring then
			cd.cure.debugEcho([[attempt("concentrate")]])
		else
			attempt("concentrate")
		end
	end
end

local cureProne = function ()
	if isAutostanding() == true and isProne() == true and canStand() == true and onSYNC() == true then
		if debuggingCuring then
			cd.cure.debugEcho([[attempt("stand")]])
		else
			attempt("stand")
		end
	end
end

local cureFear = function ()
	if aff.has("fear") and canCompose() == true then
		if debuggingCuring then
			cd.cure.debugEcho([[attempt("compose")]])
		else
			attempt("compose")
		end
	end
end

cd.cure.special = function ()
	cd.cure.debugEcho("special", "module")

	-- 1: Concentrate if disrupted.
	cureDisrupted()

	-- 2: Attempt to stand.
	cureProne()

	-- 3: Compose fear.
	cureFear()

	-- 5: Flag the player as needing to diagnose.
	if cd.hiddenAffs ~= nil and cd.hiddenAffs &gt;= 2 then
		cd.cure.debugEcho("&lt;indian_red&gt;Diagnosis needed.")
		cd.cure.needToDiagnose = true
	else
		cd.cure.needToDiagnose = nil
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Herb, Salve, Pipe, AffElixir</name>
						<packageName></packageName>
						<script>canHerb = function ()
	if cd.balances.herb ~= true or
	blockedAff("herb") == true then
		return false
	end

	return true
end

canSalve = function ()
	if cd.balances.salve ~= true or
	blockedAff("salve") == true then
		return false
	end

	return true
end

canPipe = function ()
	if cd.balances.pipe ~= true or
	blockedAff("pipe") == true then
		return false
	end

	return true
end

canAffElixir = function ()
	if cd.balances.affelixir ~= true or
	blockedAff("affelixir") == true then
		return false
	end

	return true
end

cd.cure.herb = function ()
	if canHerb() == true then
		for i, affliction in ipairs(cd.cure.priority.herb) do
			if aff.has(affliction) then
				local cure = aff.getCure(affliction)
				cureProcess.herb = cure
				cureExpect.herb = affliction
				break
			end
		end
	end
end

cd.cure.salve = function ()
	if canSalve() == true then
		for i, affliction in ipairs(cd.cure.priority.salve) do
			if aff.has(affliction) then
				local cure = aff.getCure(affliction)
				cureProcess.salve = cure
				cureExpect.salve = affliction
				break
			end
		end
	end
end

cd.cure.pipe = function ()
	if canPipe() == true then
		for i, affliction in ipairs(cd.cure.priority.pipe) do
			if aff.has(affliction) then
				local cure = aff.getCure(affliction)
				cureProcess.pipe = cure
				cureExpect.pipe = affliction
				break
			end
		end
	end
end

cd.cure.affelixir = function ()
	if canAffElixir() == true then
		for i, affliction in ipairs(cd.cure.priority.affelixir) do
			if aff.has(affliction) then
				local cure = aff.getCure(affliction)
				cureProcess.affelixir = cure
				cureExpect.affliction = affliction
				break
			end
		end
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Process Cures</name>
						<packageName></packageName>
						<script>cd.cure.process = function ()
	cd.cure.debugEcho("Processing.", "header")
	for bal, _ in pairs(cureProcess) do
		local action = bal
		local command = cureProcess[bal]
		local expected
		if bal ~= "tree" and bal ~= "renew" then
			expected = cureExpect[bal]
		end

		if command == nil then
			cd.cure.debugEcho("&lt;indian_red&gt;No action needed for " .. bal .. ".")
		else
			if debuggingCuring then
				cd.cure.debugEcho(bal, "module")
				if expected ~= nil then
					cd.cure.debugEcho("&lt;spring_green&gt;Attempting to cure: " .. expected)
				end
				cd.cure.debugEcho([[attempt("]] .. action .. [[", "]] .. command .. [[")]])
			else
				attempt(action, command)
			end
		end
	end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Defenses</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>API</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Controller</name>
						<packageName></packageName>
						<script>cd.def.initProcess = function ()
	defProcess = {}
	defExpect = {}
end

cd.def.controller = function ()
	if cd.modules.autodef == true then
		cd.def.initProcess()

--		cd.def.rebounding()
		cd.def.fangbarrier()

		cd.def.process()

		debuggingDefenses = nil
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Rebounding, Fangbarrier</name>
						<packageName></packageName>
						<script>canFangbarrier = function ()
	if blockedAff("fangbarrier") == true or attemptingFangbarrier == true then
		return false
	end

	return true
end

cd.def.fangbarrier = function ()
	if def.has("fangbarrier") then
		attemptingFangbarrier = nil
		return
	end

	if canFangbarrier() == true then
		if isUndead() == true then
			defProcess.fangbarrier = "outc bone_slice|squeeze bone_slice"
		else
			defProcess.fangbarrier = "outc sileris|apply sileris"
		end
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Process Defenses</name>
						<packageName></packageName>
						<script>cd.def.process = function ()
	for defense, command in pairs(defProcess) do
		local action = defense

		if command ~= nil then
			attempt(action, command)
		end
	end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>User Options</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Channel Control</name>
						<packageName></packageName>
						<script>changeChannelColor = function (color, chan)
end

changeChannelSymbol = function (sym, chan)
end

changeChannelUserColor = function (color, user)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>Quotes</name>
					<packageName></packageName>
					<script>cd.quotes = {
	[1] = {
		["quote"] = "We are all searching for someone whose demons play well with ours.",
	},
	[2] = {
		["quote"] = "I will hate you forever for this. Tiny in Your years. Forever in mine.",
		["source"] = "Piper Anfini",
		["context"] = "to Omei",
	},
	[3] = {
		["quote"] = "Dead men are great lovers.",
		["source"] = "Procell Ve'kahi",
	},
	[4] = {
		["quote"] = "To all my friends: Blood makes the blade holy!",
	},
	[5] = {
		["quote"] = "Ambor. A thing of no gender, no fixed shape - only limitless hunger, desire for all things. A mouth to swallow the world.",
		["source"] = "Procell Ve'kahi",
		["context"] = "giving Lin her name"
	},
	[6] = {
		["quote"] = "Keep your drinks simple, and leave it to the women to be complicated.",
		["source"] = "Isaac dan der Grimnebulin",
		["context"] = "proffering marital advice"
	},
}

local displayFancyBlockHeader = function ()
	local header = "&lt;a_darkred&gt;. . . &lt;a_red&gt;: : : &lt;dark_goldenrod&gt;" .. string.rep("-", 4) .. "&lt;gold&gt;" .. string.rep("-", 16) .. "&lt;dark_goldenrod&gt;" .. string.rep("-", 4) .. " &lt;a_red&gt;: : : &lt;a_darkred&gt;. . ."
	local header_len = 48
	
	cecho("\n" .. string.rep(" ", math.round(cd.sys.wrapWidth / 2) - math.round(header_len / 2)) .. header)
end

local displayFancyBlockFooter = function ()
	local footer = "&lt;a_darkred&gt;. . . &lt;a_red&gt;: : : &lt;dark_goldenrod&gt;" .. string.rep("-", 4) .. "&lt;gold&gt;" .. string.rep("-", 16) .. "&lt;dark_goldenrod&gt;" .. string.rep("-", 4) .. " &lt;a_red&gt;: : : &lt;a_darkred&gt;. . ."
	local footer_len = 48
	
	cecho("\n\n" .. string.rep(" ", math.round(cd.sys.wrapWidth / 2) - math.round(footer_len / 2)) .. footer)
end

displayQuote = function ()
	local i = math.random(#cd.quotes)

	local quote = [["]] .. cd.quotes[i].quote .. [["]]
	if quote == nil then
		error("displayQuote() pulled up an invalid quote, at index " .. i .. ".")
		return
	end

	local source = cd.quotes[i].source or "Unknown"
	local context = cd.quotes[i].context or nil
	
	local source_str = "&lt;a_darkgrey&gt;- " .. source
	local source_str_len = 2 + source:len()
	
	if context then
		source_str = source_str .. ", " .. context
		source_str_len = source_str_len + (2 + context:len())
	end
	
	displayFancyBlockHeader()
	cecho("\n\n" .. quote:jcenter(cd.sys.wrapWidth))
	cecho("\n" .. string.space(math.round(cd.sys.wrapWidth / 2) - math.round(source_str_len / 2)) .. source_str)
	displayFancyBlockFooter()
	
	cd.PlaySound("New Day")
end

displayHowlingDate = function ()
	local day = cd.date.day
	local date = cd.date.date
	local month = cd.date.month
	local year = cd.date.year
	
	local date_fixed = "th"
	if date == "1" then
		date_fixed = "st"
	elseif date == "2" then
		date_fixed = "nd"
	elseif date == "3" then
		date_fixed = "rd"
	end
	date_fixed = date .. date_fixed
	
	date_string = day .. " " .. date_fixed .. ", " .. month .. " of " .. year
	
	displayFancyBlockHeader()
	cecho("\n\n" .. date_string:jcenter(cd.sys.wrapWidth))
	displayFancyBlockFooter()
	
	cd.PlaySound("New Day")
end</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Production</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Concoctions</name>
						<packageName></packageName>
						<script>cd.concoctions.MakeConcoction = function (name, amt)
	if not cd.concoctions.brewPot or cd.concoctions.brewPot &lt; 1 then
		notify("Concoctions", "You must first designate your brewing pot. &lt;a_darkgrey&gt;\(&lt;a_darkgreen&gt;brew.pot \&lt;#\&gt;&lt;a_darkgrey&gt;\)")
		return
	end

	-- Concoction definitions found in:
	-- Challenger Deep &gt; API &gt; Aetolian Environment API
	if aetolia.concoctions[name] then
		if not amt then amt = 1 end
		for i = 1, amt do
			for k,v in ipairs(aetolia.concoctions[name]) do
				sendStack("outc " .. v, "inpot " .. v .. " to " .. cd.concoctions.brewPot)
			end
		end
		send("boil " .. cd.concoctions.brewPot .. " for " .. name, false)
	else
		notify("Concoctions", "Couldn't find a concoction by the name of &lt;a_red&gt;" .. name .. "&lt;a_grey&gt;.")
	end
end

cd.concoctions.BrewConcoction = function (x, q)
	if not aetolia.concoctions[x] then
		notify("Concoctions", "No known concoction by the name of &lt;a_red&gt;" .. x .. "&lt;a_grey&gt;.")
		return
	end

	concoctionBrewing = true
	send("drop " .. cd.concoctions.brewPot, false)
	if not q then q = 1 end
	for i = 1, q do
		for i, v in ipairs(aetolia.concoctions[x]) do
			sendStack("outc " .. v, "inpot " .. v .. " to " .. cd.concoctions.brewPot)
		end
	end

	send("boil " .. cd.concoctions.brewPot .. " for " .. x, false)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Mapping</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Utility</name>
						<packageName></packageName>
						<script>processWhoDuplicates = function ()
  -- Build reverse lookup table.
  local r_duplicates = {}

  for name, _ in pairs(whoDuplicates) do
    -- Build a unique identifier based on room/vnum pairing.
    local room, vnum = whoDuplicates[name].room, whoDuplicates[name].vnum
    local id = "%s_%s" % {vnum, room}
    if not r_duplicates[id] then
      r_duplicates[id] = {
        ["vnum"] = vnum,
        ["room"] = room,
        ["players"] = {}
      }
    end
    
    table.insert(r_duplicates[id]["players"], name)
  end

  -- Display the header.
  cecho("\n&lt;a_darkblue&gt;%s&lt;a_darkcyan&gt;Players sharing rooms:" % {string.rep("-", cd.sys.wrapWidth)})

  -- Display each room based on unique ID.
  for id, _ in pairsByKeys(r_duplicates) do
    local vnum = r_duplicates[id].vnum
    local room = r_duplicates[id].room
    local players = r_duplicates[id].players
    local v_color, r_color = "a_cyan", "a_darkgreen"
    if vnum == "0" then
      vnum = "?????"
      v_color = "a_darkgrey"
      r_color = "a_darkgrey"
    else
      room = getRoomName(vnum) or room
      room = room .. "."
    end
    
    if #players &gt; 1 then
      -- Display the grouping entry.
      local player_string = table.concat(players, ", "):wrap2(80, 10)
      cecho("\n  &lt;a_darkcyan&gt;[&lt;%s&gt;%s&lt;a_darkcyan&gt;] &lt;%s&gt;%s\n&lt;a_grey&gt;%s." % {v_color, vnum:jright(5), r_color, room, player_string})
    end
  end

	cecho("\n&lt;a_darkblue&gt;%s" % {string.rep("-", cd.sys.wrapWidth)})

  whoDuplicates = nil
  checkWhoDuplicates = nil
  displayWhoDuplicates = nil
end</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Leyline Hunting</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Areas and Entrances</name>
							<packageName></packageName>
							<script>-- Table structure:
-- 
--   [area]
--     [entrance]
--     [entrance]
--     [...]

cd.leyline.areaList = {
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "11",
  "12",
  "13",
  "14",
  "16",
  "17",
  "18",
  "19",
  "20",
  "22",
  "24",
  "26",
  "27",
  "28",
  "29",
  "30",
  "38",
  "39",
  "40",
  "41",
  "42",
  "43",
  "44",
  "45",
  "46",
  "47",
  "48",
  "49",
  "50",
  "51",
  "52",
  "53",
  "54",
  "55",
  "56",
  "57",
  "58",
  "59",
  "60",
  "61",
  "62",
  "63",
  "64",
  "65",
  "67",
  "70",
  "71",
  "72",
  "81",
  "84",
  "93",
  "94",
  "95",
  "96",
  "97",
  "98",
  "99",
  "100",
  "101",
  "102",
  "103",
  "104",
  "105",
  "107",
  "108",
  "109",
  "112",
  "115",
  "116",
  "117",
  "118",
  "119",
  "122",
  "123",
  "124",
  "126",
  "129",
  "137",
  "138",
  "150",
  "187",
  "190",
  "196",
  "205",
  "224",
  "247",
  "255",
  "264",
}</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Questing</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Questing</name>
						<packageName></packageName>
						<script>local questItems = {
	-- Ayhesa.
}

local questInfo = {
  ["Fengard Keep"] = {[[
  figure it out yourself (:
  ]]},
}

questReplicas = questReplicas or {
	-- Drakuum.
	["a hideous lich"] = {
		["id"] = 187769,
		["actions"] = {"give flail to 187769", "give tongue to 187769", "give tongue to 187769"},
	},
	["a spectral priest"] = {
		["id"] = 4022,
		["actions"] = {"give 110892 to 4022"},
	},

	-- Three Rock.
	["Ugtar, a tall Troll bandit"] = {
		["id"] = 185452,
		["actions"] = {"give horse to 185452", "give buffalo to 185452"},
	},
	["Ennioch, a scruffy bandit"] = {
		["id"] = 145242,
		["actions"] = {"give wildcat to 145242"},
	},
	["Clive, a sly-looking bandit"] = {
		["id"] = 179098,
		["actions"] = {"give paw to 179098"},
	},

	-- Spinesreach.
	["Thuneron, Captain of the Guard"] = {
		["id"] = 18633,
		["actions"] = {"give bandit to 18633"},
	},

	-- Khauskin.
	["Belina Warender"] = {
		["id"] = 201433,
		["actions"] = {"give fangtooth to 201433", "give klikkin to 201433"},
	},
	["Belok, the mining chief"] = {
		["id"] = 43692,
		["actions"] = {"give pickaxe to 43692"},
	},
	["Khabarak, the jeweler"] = {
		["id"] = 62590,
		["actions"] = {"give gem to 62590"},
	},

	-- Ayhesa Cliffs.
	["Ephin, a Syssin guardian"] = {
		["id"] = 29256,
		["actions"] = {"give spellshaper to 29256", "give 80665 to 29256"},
	},
	["Elann, the scientist"] = {
		["id"] = 57865,
		["actions"] = {"give 53888 to 57865", "give 57349 to 57865", "give 60022 to 57865", "give 53971 to 57865"},
	},
	["Nator the Spellshaper Magister"] = {
		["id"] = 41276,
		["actions"] = {
			"give crystal81705 to nator",
			"give orb73626 to nator",
			"give disc101941 to nator",
    	"give disc102166 to nator",
    	"give disc102383 to nator",
    	"give disc102804 to nator",
			"give chain77628 to nator",
			"give ball76008 to nator",
		},
	},

  -- Temple of Sonn.
  ["11042"] = {["actions"] = {"give serpent to ID"}},
}

cd.questAlert = function (txt)
	local label = "!"

	if txt then label = txt end

	return "&lt;a_blue&gt;(&lt;gold&gt;" .. label .. "&lt;a_blue&gt;)&lt;a_darkgrey&gt;: "
end

cd.FindQuestReplicas = function ()
	cd.questActions = {}

	if not cd.room.all_replicas then
		return
	end

	for id, name in pairs(cd.room.all_replicas) do
		if questReplicas[name] and questReplicas[name].actions then
			for _, act in ipairs(questReplicas[name].actions) do
        act = act:gsub("ID", id)
				table.insert(cd.questActions, act)
			end
		elseif questReplicas[id] and questReplicas[id].actions then
			for _, act in ipairs(questReplicas[id].actions) do
        act = act:gsub("ID", id)
				table.insert(cd.questActions, act)
			end
		end
	end

	if #cd.questActions &gt; 0 then
		cecho("\n&lt;gold&gt;Quest actions you can undertake...")
	end

	for i, act in ipairs(cd.questActions) do
		cecho("\n" .. cd.questAlert(i) .. act)
	end
end

cd.FindQuestItems = function ()
	if not cd.room.contents then
		return
	end
	
	local get_items = {}
	
	for id, name in pairs(cd.room.contents) do
		if questItems[id] then
			table.insert(get_items, "get " .. id)
		end
	end
	
	if #get_items &gt; 0 then
		sendStack(get_items)
	end
end

cd.GetQuestItemAction = function (id)
	if not questItems[id] then
		return
	end
	
	if questItems[id].prompt then
		notify(cd.questAlert("!") .. questItems[id].prompt)
	end
	
	if questItems[id].action then
		send(questItems[id].action, false)
	end
end

cd.GetQuestInfo = function (area)
  if questInfo[area] then
    notify("Quest", "Found the following quest info for this area.")
    for _, info in ipairs(questInfo[area]) do
      cecho("\n" .. info)
    end
  else
    notify("Quest", "No quest info found for this area.")
  end
end</script>
						<eventHandlerList />
					</Script>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Quest Replicas by Area</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Fengard Keep</name>
							<packageName></packageName>
							<script>-- sorry</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Temple of Ati</name>
							<packageName></packageName>
							<script>-- nope</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Chaotic Dreaming</name>
							<packageName></packageName>
							<script>-- nope sorry</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Area-specific Code</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Teshen Undercroft</name>
							<packageName></packageName>
							<script>-- you can have this one, I think more people should know how to get in

function teshenUndercroftDialSolver()
  if start_undercroft_dial_sequence ~= true then
    teshenUndercroftDialReset()
    solve_undercroft_dial_sequence = true
    undercroft_dial_queue = {"Iyi", "Hah", "Iyi", "Mish", "Unhu", "Tev", "Nha", "Nuv"}
    send("turn dial", false)
  end
end

function teshenUndercroftDialReset()
  solve_undercroft_dial_sequence = nil
  undercroft_dial_queue = nil
end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Misc.</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Character Scripts - Lin</name>
						<packageName></packageName>
						<script>-- I've gutted out a lot of Lin-specific stuff, but
-- left this here in case you wanna repurpose it for
-- yourself!

handleLinGenderChange = function (gender)
	if gender == "male" then
		send("desc switch 3", false)
	else
		send("desc switch 1", false)
	end

	saveWornAttires()
	for id, attire in pairs(savedAttires) do
		if gender == "male" then
			attire = attire:gsub("(%sher%s)", " his ")
		else
			attire = attire:gsub("(%shis%s)", " her ")
		end

		send("attire " .. id .. " " .. attire, false)
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Stupid Chameleon Names</name>
						<packageName></packageName>
						<script>badChameleonList = {
	"Bulge", "Morbid", "Bonebanker", "Pugsly", "Blaque", "Glasse", "Bob",
	"Sagslayer", "Nug", "Moot", "Zerty", "Genocide", "Braids", "Caboose",
	"Liankeraqui", "Saga", "Poem", "Echo", "Exodus", "Lemongrab"
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Book Transcription</name>
						<packageName></packageName>
						<script>local defaultPageLength = 250
local tempPageLength = 250

local reservedWinChars = {
	"&lt;", "&gt;", ":", "\"", "/", "\\", "|", "?", "*"
}

local formatFileName = function (f)
	for _, char in ipairs(reservedWinChars) do
		f = f:gsub(char, "")
	end

	return f
end

saveBook = function (title, page, author)
	if bookSaveContents == nil or bookSaveContents == "" then
		return
	end

	title = title or "Untitled"
	page = page or 1
	author = author or "Anonymous"

	if type(page) ~= "number" then
    error("Passed an invalid page number, %s, to saveBook()." % {tostring(page)})
		return
	end

  local filename = "%s - %s, Page %s.txt" % {author, title, page}
	filename = formatFileName(filename)

	local f = io.open(getMudletHomeDir() .. "/files/books/" .. filename, "w")
	f:write(bookSaveContents)
	f:close()

	bookSaveBook = nil
	bookSaveAuthor = nil
	bookSavePage = nil
	bookSaveContents = nil
end

getBookByPage = function (book, page)
	page = tonumber(page)

	if type(page) ~= "number" then
		error("[a] Transcribe Book to File: Invalid page type, " .. tostring(page) .. ".")
		return
	end

	if page &lt; 1 or page &gt; 50 then
		error("[a] Transcribe Book to File: Page out of bounds \(" .. page .. "\)!")
		return
	end

	sendStack("read " .. book .. " page " .. page, "more", "more")
end

listBooks = function ()
	moduleHeader("Book Transcription", "directory", "contents")

	local file_list = {}
	for file in lfs.dir(getMudletHomeDir() .. "/files/books/") do
		if file ~= ".." and file ~= "." then
			local cutoff = file:find("-")
			local author = file:sub(1, cutoff - 2)
			local rem = file:sub(cutoff + 2, -1)
			rem = rem:match("^(.+), Page %d+%.txt$")			

			cecho("\n  &lt;a_darkcyan&gt;" .. author .. " &lt;a_darkgrey&gt;- &lt;a_grey&gt;" .. rem)
		end
	end

	moduleFooter()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Message Storage</name>
						<packageName></packageName>
						<script>formatMessage = function ()
	local formattedMessage = ""

	formattedMessage = "Message: " .. savedMsgNumber .. "\nSender: " .. savedMsgSender .. "\nDate: " .. savedMsgDate .. "\n" .. savedMsgContents .. "\n\n"

	return formattedMessage
end

saveMessage = function ()
	local f = io.open(getMudletHomeDir() .. "/files/player_messages.aet", "a")

	local msg = formatMessage()
	if savedMsgContents ~= nil then
		f:write(msg)
	end

	savedMsgNumber   = nil
	savedMsgSender   = nil
	savedMsgDate     = nil
	savedMsgContents = nil

	f:close()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Blackjack</name>
						<packageName></packageName>
						<script>local words_to_num = {
  one = "1",
  two = "2",
  three = "3",
  four = "4",
  five = "5",
  six = "6",
  seven = "7",
  eight = "8",
  nine = "9",
  ten = "10",
  jack = "J",
  queen = "Q",
  king = "K",
  ace = "A",
}

local card_values = {
  ["1"]  = 1,
  ["2"]  = 2,
  ["3"]  = 3,
  ["4"]  = 4,
  ["5"]  = 5,
  ["6"]  = 6,
  ["7"]  = 7,
  ["8"]  = 8,
  ["9"]  = 9,
  ["10"] = 10,
  ["J"]  = 10,
  ["Q"]  = 10,
  ["K"]  = 10,
  ["A"]  = 1,
}

-- Table key represents player's total hand value.
local normal_actions = {
  ["16"] = function (card)
    if card &gt;= 7 then return "hit" else return "stand" end
  end,
  ["15"] = function (card)
    if card &gt;= 7 then return "hit" else return "stand" end
  end,
  ["14"] = function (card)
    if card &gt;= 7 then return "hit" else return "stand" end
  end,
  ["13"] = function (card)
    if card &gt;= 7 then return "hit" else return "stand" end
  end,
  ["12"] = function (card)
    if card &gt;= 4 and card &lt;= 6 then return "stand" else return "hit" end
  end,
  ["10"] = function (card)
    if card == 10 then return "hit" else return "double" end
  end,
  ["9"]  = function (card)
    if card &lt;= 6 and card ~= 2 then return "double" else return "hit" end
  end,
}

-- Table key represents player's matched cards.
local split_actions = {
  ["2"]  = function (card)
    if card &gt;= 8 then return "hit" else return "split" end
  end,
  ["3"]  = function (card)
    if card &gt;= 8 then return "hit" else return "split" end
  end,
  ["4"]  = function (card)
    if card == 5 or card == 6 then return "split" else return "hit" end
  end,
  ["5"]  = function (card)
    if card &gt;= 8 then return "hit" else return "double" end
  end,
  ["6"]  = function (card)
    if card &gt;= 7 then return "hit" else return "split" end
  end,
  ["7"]  = function (card)
    if card &gt;= 8 then return "hit" else return "split" end
  end,
  ["8"]  = function (card)
    return "split"
  end,
  ["9"]  = function (card)
    if card == 7 or card == 10 then return "stand" else return "split" end
  end,
  ["10"] = function (card)
    return "stand"
  end,
  ["A"]  = function (card)
    return "split"
  end,
}

-- Table key represents dealer's up card.
local ace_actions = {
  ["2"]  = function (card)
    if card &gt;= 7 then return "stand" else return "hit" end
  end,
  ["3"]  = function (card)
    if card &gt;= 8 then return "stand" elseif card &gt;= 6 then return "double" else return "hit" end
  end,
  ["4"]  = function (card)
    if card &gt;= 8 then return "stand" elseif card &gt;= 4 then return "double" else return "hit" end
  end,
  ["5"]  = function (card)
    if card &gt;= 8 then return "stand" else return "double" end
  end,
  ["6"]  = function (card)
    if card &gt;= 8 then return "stand" else return "double" end
  end,
  ["7"]  = function (card)
    if card &gt;= 7 then return "stand" else return "hit" end
  end,
  ["8"]  = function (card)
    if card &gt;= 7 then return "stand" else return "hit" end
  end,
  ["9"]  = function (card)
    if card &gt;= 8 then return "stand" else return "hit" end
  end,
  ["10"] = function (card)
    if card &gt;= 8 then return "stand" else return "hit" end
  end,
  ["A"]  = function (card)
    if card &gt;= 8 then return "stand" else return "hit" end
  end,
}

bj = bj or {
  my_hand = {},
  deal_hand = 0,
}

local function getCard(num)
  return words_to_num[num:lower()]
end

local function hasAce()
  local found_ace = false

  for _, c in ipairs(bj.my_hand) do
    if c == "A" then
      found_ace = true
    end
  end
  
  return found_ace
end

local function convertFace(card, conv_aces)
  conv_aces = conv_aces == true
  if card ~= "J" or card ~= "Q" or card ~= "K" then
    return card
  end
  
  if conv_aces and card == "A" then
    return "10"
  end
  
  return "10"
end

function bjTotalHandValue()
  local val = 0
  if #bj.my_hand &lt; 1 then
    return val
  end
  
  for _, c in ipairs(bj.my_hand) do
    if c == "A" then
      if val + 10 &gt; 21 then
        val = val + 1
      else
        val = val + 10
      end
    else
      val = val + card_values[c]
    end
  end

  return val
end

function bjResetGame()
  bj.my_hand = {}
  bj.deal_hand = 0
end

function bjProcessDealerUpCard(num)
  bj.deal_hand = getCard(num)
end

function bjProcessPlayerCards(f, s)
  bj.my_hand = {getCard(f), getCard(s)}
end

function bjAddPlayerCard(num)
  table.insert(bj.my_hand, getCard(num))
end

function bjPerfectPlay()
  if #bj.my_hand &lt; 1 or #bj.deal_hand == 0 then
    return
  end
  
  local total_value = bjTotalHandValue()
  local total_cards = #bj.my_hand

  -- Handle opening with matching cards.
  if bj.my_hand[1] == bj.my_hand[2] and total_cards == 2 then
    -- No special actions are needed if the dealer has an Ace, so we can convert it to 10 to save time.
    local d_hand = bj.deal_hand
    if d_hand == "A" then d_hand = "10" end

    return split_actions[convertFace(bj.my_hand[1])][tonumber(convertFace(bj.deal_hand, true))]
  end

  -- Handle opening with Ace(s).
  if hasAce() and total_cards == 2 then
    local other_card = bj.my_hand[1]
    if bj.my_hand[1] == "A" then
      other_card = bj.my_hand[2]
    end

    return ace_actions[convertFace(bj.deal_hand)](tonumber(convertFace(other_card, true)))
  end

  -- Always stand at or above 17.
  if total_value &gt;= 17 then
    return "stand"
  end

  -- Always hit at 8 or below.
  if total_value &lt;= 8 then
    return "hit"
  end
  
  -- 11 handles Aces specially, so we're just gonna make an exception for it.
  if total_value == 11 then
    if bj.deal_hand == "A" then
      return "hit"
    else
      return "double"
    end
  end
  
  -- Find an action to use if nothing else fits.
  return normal_actions[tostring(total_value)](tonumber(convertFace(bj.deal_hand, true)))
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Exploration</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Functions</name>
						<packageName></packageName>
						<script>exploration = exploration or {
  chars = {}
}

function initExplorationCharTable(c)
  if not exploration.chars[c] then
    exploration.chars[c] = {}
  end
end

function getVisitedAreas()
  local c = cd.player.name
  initExplorationCharTable(c)
  return exploration.chars[c]
end

function updateExplorationArea(area, amt)
  local c = cd.player.name
  initExplorationCharTable(c)
  exploration.chars[c][area] = amt
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>UI</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>UI Variables</name>
					<packageName></packageName>
					<script>bal_remaining = 0
eq_remaining = 0
ab_remaining = 0

bal_max = 0
eq_max = 0
ab_max = 0</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Containers</name>
					<packageName></packageName>
					<script>-- Screen adjustments.
setBorderTop(23)
setBorderBottom(58)
setBorderLeft(48)
setBorderRight(875)

local win_w, win_h = getMainWindowSize()

local top_size = 23
local bottom_size = 52
local left_size = 48
local right_size = 875

top_panel = Geyser.Container:new({
  name = "top_panel",
  x = 0,
  y = 0,
  width = "100%",
  height = top_size
})

bottom_panel = Geyser.Container:new({
  name = "bottom_panel",
  x = 0,
  y = -bottom_size,
  width = "100%",
  height = bottom_size
})

left_panel = Geyser.Container:new({
  name = "left_panel",
  x = 0,
  y = top_size,
  width = left_size,
  height = win_h - (top_size + bottom_size)
})

right_panel = Geyser.Container:new({
  name = "right_panel",
  x = -right_size,
  y = top_size,
  width = right_size,
  height = win_h - (top_size + bottom_size)
})

balance_panel = Geyser.Container:new({
  name = "balance_panel",
  x = left_size,
  y = -bottom_size - 6,
  width = 900,
  height = 6
})</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Left Panel</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>System Diagnostics</name>
						<packageName></packageName>
						<script>local wrap_width = 45

sysmodes = Geyser.MiniConsole:new({
  name = "sysmodes",
  x = 0,
  y = "50%",
  color = "black",
  autoWrap = true,
  scrollBar = false,
  fontSize = 9,
  width = "7c",
  height = "50%",
}, left_panel)

sysmodes:setFont("Terminus \(TTF\) for Windows")

local module_map = {
  ab =   {sym = "BSH", color = "orange",
    func = function () return cd.modules.autobashing == true end},
  sb =   {sym = "SBS", color = "orange_red",
    func = function () return cd.modules.superbashing == true end},
  apb =  {sym = "APB", color = "dark_orange",
    func = function () return cd.modules.apothecarybashing == true end},
  pk =   {sym = "PK!", color = "a_red",
    func = function () return cd.modules.pk == true end},
  afk =  {sym = "AFK", color = "cadet_blue",
    func = function () return cd.modules.afk == true end},
  bc =   {sym = "BCS", color = "light_yellow",
    func = function () return cd.modules.broadcasting ~= nil and cd.modules.broadcasting ~= false end},
  asa =  {sym = "SNC", color = "a_white",
    func = function () return cd.modules.autosanc == true end},
  call = {sym = "CAL", color = "a_cyan",
    func = function () return cd.modules.calling == true end},
  am =   {sym = "MAS", color = "brown",
    func = function () return cd.modules.automass == true end},
  ast =  {sym = "STD", color = "firebrick",
    func = function () return cd.modules.autostand == true end},
}

function sysmodes_update()
  sysmodes:clear()
  
  sysmodes:cecho("&lt;a_darkgrey&gt;MODULES")
  sysmodes:echo("\n")

  for mod, _ in pairs(module_map) do
    local sym = module_map[mod].sym
    local color = module_map[mod].color
    local func = module_map[mod].func

    if func() ~= true then
      color = "dark_slate_grey"
    end
    
    sysmodes:cecho("\n  &lt;%s&gt;%s" % {color, sym})
  end
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Right Panel</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Chat Window</name>
						<packageName></packageName>
						<script>chat_tabs = Geyser.MiniConsole:new({
  name = "chat_tabs",
  x = -483,
  y = 0,
  color = "#000030",
  autoWrap = true,
  scrollBar = false,
  fontSize = 9,
  width = 480,
  height = 12,
}, right_panel)

chat = Geyser.MiniConsole:new({
  name = "chat",
  x = -483,
  y = "1c",
  color = "black",
  autoWrap = true,
  scrollBar = false,
  fontSize = 9,
  width = 480,
  height = 252,
}, right_panel)

chat_tabs:setFont("Terminus \(TTF\) for Windows")
chat:setFont("Terminus \(TTF\) for Windows")

function chat_tabs_update()
  chat_tabs:clear()
  chat_tabs:decho("&lt;255,215,0:0,0,48&gt;GEN   &lt;255,255,255:0,0,48&gt;CIT   GLD   TLS   GOD   RP")
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Readout Window</name>
						<packageName></packageName>
						<script>local wrap_width = 80
local name_width = 32
local id_width = 6
local col_width = name_width + id_width + 2
local col_count = 2

readout = Geyser.MiniConsole:new({
  name = "readout",
  x = -483,
  y = 280,
  color = "black",
  autoWrap = true,
  scrollBar = false,
  fontSize = 9,
  width = 480,
  height = "47c",
}, right_panel)

readout:setFont("Terminus \(TTF\) for Windows")

local balColors = {
	["HO"] = "lime_green",
	["SP"] = "saddle_brown",
	["ST"] = "light_slate_grey",
	["ES"] = "medium_purple",
	["binds"] = "tomato",
	["special"] = "gold",
}

local exit_symbols = {
	["northwest"] = "\\",
	["north"] = "|",
	["northeast"] = "/",
	["west"] = "-",
	["east"] = "-",
	["southwest"] = "/",
	["south"] = "|",
	["southeast"] = "\\",
	["in"] = "&lt;",
	["out"] = "&gt;",
	["up"] = "^",
	["down"] = "_",
}

local exit_plot = {
	["northwest"] = {[1] = -2, [2] = -1},
	["north"] = {[1] = 0, [2] = -1},
	["northeast"] = {[1] = 2, [2] = -1},
	["west"] = {[1] = -2, [2] = 0},
	["east"] = {[1] = 2, [2] = 0},
	["southwest"] = {[1] = -2, [2] = 1},
	["south"] = {[1] = 0, [2] = 1},
	["southeast"] = {[1] = 2, [2] = 1},
	["in"] = {[1] = 0, [2] = 0},
	["out"] = {[1] = 0, [2] = 0},
	["up"] = {[1] = 0, [2] = 0},
	["down"] = {[1] = 0, [2] = 0},
}

-- Assistant functions. --------------------------------------------------------

combatLog = function (str)
	combatTimeline = combatTimeline or {}

	if #combatTimeline &gt;= 20 then
		table.remove(combatTimeline, 1)
	end

  combatTimeline[#combatTimeline + 1] = "&lt;a_darkgrey&gt;%s &lt;a_darkcyan&gt;\| &lt;a_grey&gt;%s" % {getTime(true, "HH:mm:ss"), str}
end

local readoutModuleHeader = function (title, r, g, b, no_break)
	r = r or 255
	g = g or 255
	b = b or 255

	local dr, dg, db = math.round(r * 0.15), math.round(g * 0.2), math.round(b * 0.25)
	if dr &lt; 0 then dr = 0 end
	if dg &lt; 0 then dg = 0 end
	if db &lt; 0 then db = 0 end

	local col_string = "&lt;%s,%s,%s:%s,%s,%s&gt;" % {r, g, b, dr, dg, db}

	if no_break ~= true then
		readout:echo("\n\n")
	end

  	readout:decho("%s  %s%s" % {col_string, title, string.space(wrap_width - (title:len() + 2))})
	readout:echo("\n")
end

-- Readout modules. ------------------------------------------------------------

local drawRoomItems = function ()
	readoutModuleHeader("Items", 28, 222, 28)

	local i = 1
	local c = 1
	local s = table.size(cd.room.contents)

  -- local t_start = os.clock()
	for id, name in pairs(cd.room.contents) do
    name = name:truncate(name_width)
    readout:cecho("&lt;forest_green&gt;%s &lt;a_grey&gt;%s" % {id:jright(id_width), name:jleft(name_width + 1)})
		if i &gt;= col_count and c &lt; s then
			readout:echo("\n")
			i = 1
		else
			i = i + 1
		end

		c = c + 1
	end
  -- local t_finish = os.clock() - t_start
  -- readout:cecho("\n&lt;a_red&gt;Item loop completed in %ss." % t_finish)
end

local drawRoomMobiles = function ()
	readoutModuleHeader("Mobiles", 245, 180, 79)

	local i = 1
	local c = 1
	local s = table.size(cd.room.mobs)

	local icolor, mcolor = "forest_green", "a_darkgrey"
  -- local t_start = os.clock()
	for id, name in pairs(cd.room.mobs) do
		if cd.modules.superbashing == true then
			if id == sb.GetPriorityTarget() then
				icolor = "spring_green"
				if cd.modules.apothecarybashing == true then
					mcolor = "orange_red"
				else
					mcolor = "gold"
				end
			else
				icolor = "forest_green"
				mcolor = "a_darkgrey"
			end
		else
			icolor = "forest_green"
			mcolor = "a_grey"
		end

		name = name:truncate(name_width)
  	readout:cecho("&lt;%s&gt;%s &lt;%s&gt;%s" % {icolor, id:jright(id_width), mcolor, name:jleft(name_width + 1)})
		if i &gt;= col_count and c &lt; s then
			readout:echo("\n")
			i = 1
		else
			i = i + 1
		end

		c = c + 1
	end
  -- local t_finish = os.clock() - t_start
  -- readout:cecho("\n&lt;a_red&gt;Mobile loop completed in %ss." % t_finish)
end

local drawPlayerList = function ()
	readoutModuleHeader("Players", 45, 180, 255)

	if #cd.playersHere &gt; 0 then
		local p_list = ""
		if #cd.playersHere == 1 then
			p_list = cd.playersHere[1]
		else
			for i, name in ipairs(cd.playersHere) do
				if i == 1 then
					p_list = name
				elseif i == #cd.playersHere then
					p_list = p_list .. ", and " .. name
				else
					p_list = p_list .. ", " .. name
				end
			end
		end

		if p_list ~= "" then p_list = p_list .. "." end

		readout:cecho("&lt;a_darkcyan&gt;" .. p_list)
	else
		readout:cecho("&lt;a_darkgrey&gt;None.")
	end
end

local drawRoomInfo = function ()
	readoutModuleHeader("Room", 245, 222, 179, true)

	local vnum = tostring(cd.room.num)
	local anum = tostring(cd.room.areaID)
  	local area_color = "spring_green"
	if cd.modules.superbashing == true and sb.mobPriority[getCleanAreaName()] then
		area_color = "indian_red"
	end

	readout:cecho("&lt;a_darkcyan&gt;%s &lt;a_brown&gt;%s." % {vnum:jright(6), cd.room.name})
	readout:cecho("\n&lt;%s&gt;%s &lt;a_grey&gt;%s." % {area_color, anum:jright(6), getCleanAreaName()})

	local flag_string = ""
	for f, _ in pairs(roomFlags) do
		local val = roomFlags[f].value()
		local abbr = roomFlags[f].abbr
		local color = roomFlags[f].color

		if val ~= true then
			color = "dark_slate_grey"
		end

    flag_string = "%s&lt;%s&gt;%s  " % {flag_string, color, abbr}
	end

	readout:cecho("\n\n  " .. flag_string)
end

local drawPlayerAfflictions = function ()
	readoutModuleHeader("Your Afflictions", 255, 0, 255)

	local linecount = 1
	if table.size(cd.afflictions) == 0 then
		readout:cecho("&lt;a_darkcyan&gt;- &lt;a_darkgrey&gt;none")

		for i = 1, 4 - linecount do
			readout:echo("\n")
		end

		return
	end

	local i = 0
	for aff, time in pairs(cd.afflictions) do
		local aff_string = "&lt;a_darkcyan&gt;- &lt;a_grey&gt;" .. aff
		readout:cecho(aff_string .. string.space(26 - (3 + aff:len())))

		i = i + 1
		if i &gt; 2 then
			i = 0
			linecount = linecount + 1
			readout:echo("\n")
		end
	end

	for i = 1, 4 - linecount do
		readout:echo("\n")
	end
end

local drawEnemyAfflictions = function ()
	readoutModuleHeader("Enemy Afflictions", 255, 120, 75)

	local linecount = 1
	if table.size(aff_tracker.enemy_afflictions) == 0 then
		readout:cecho("&lt;a_darkcyan&gt;- &lt;a_darkgrey&gt;none")

		for i = 1, 4 - linecount do
			readout:echo("\n")
		end

		return
	end

	local i = 0
	for aff, _ in pairs(aff_tracker.enemy_afflictions) do
		local aff_string = "&lt;a_darkred&gt;- &lt;a_grey&gt;" .. aff
		readout:cecho(aff_string .. string.space(26 - (3 + aff:len())))

		i = i + 1
		if i &gt; 2 then
			i = 0
			linecount = linecount + 1
			readout:echo("\n")
		end
	end

	for i = 1, 4 - linecount do
		readout:echo("\n")
	end
end

local drawCombatLog = function ()
	readoutModuleHeader("Combat Log", 245, 245, 80)

	if combatTimeline == nil or #combatTimeline == 0 then
		readout:cecho("&lt;a_darkgrey&gt;No report.")
		return
	end

	for i, entry in ipairs(combatTimeline) do
		readout:cecho(entry)
		if i ~= #combatTimeline then
			readout:echo("\n")
		end
	end
end

-- Module routines. ------------------------------------------------------------

local doReadoutRoom = function ()
	readout:clear()

	drawRoomInfo()
	drawPlayerList()
	drawRoomMobiles()
	drawRoomItems()
end

local doReadoutCombat = function ()
	readout:clear()

	drawRoomInfo()
	drawPlayerList()
	drawPlayerAfflictions()
	drawEnemyAfflictions()
	drawCombatLog()
end

-- Event handler. --------------------------------------------------------------

function readout_update()
	-- Get current readout mode.
	local mode
	if not cd.modules.readoutMode then
		mode = "room"
	else
		mode = cd.modules.readoutMode
	end

	if mode == "room" then
		doReadoutRoom()
	elseif mode == "combat" then
		doReadoutCombat()
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Map Window</name>
						<packageName></packageName>
						<script>map = Geyser.MiniConsole:new({
  name = "map",
  x = -753,
  y = 280,
  color = "black",
  scrollBar = false,
  fontSize = 9,
  width = 270,
  height = 312,
}, right_panel)

map:setFont("Terminus \(TTF\) for Windows")

function captureMapLine()
  selectString(line, 1)
  copy()
  map:appendBuffer()
  deselect()
  deleteLine()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Character Info Window</name>
						<packageName></packageName>
						<script>local wrap_width = 45

cinfo = Geyser.MiniConsole:new({
  name = "cinfo",
  x = -753,
  y = 0,
  color = "black",
  autoWrap = true,
  scrollBar = false,
  fontSize = 9,
  width = 270,
  height = 280,
}, right_panel)

cinfo:setFont("Terminus \(TTF\) for Windows")

local cinfo_header = function (title, r, g, b, no_break)
	r = r or 255
	g = g or 255
	b = b or 255

	local dr, dg, db = math.round(r * 0.15), math.round(g * 0.2), math.round(b * 0.25)
	if dr &lt; 0 then dr = 0 end
	if dg &lt; 0 then dg = 0 end
	if db &lt; 0 then db = 0 end

	local col_string = "&lt;%s,%s,%s:%s,%s,%s&gt;" % {r, g, b, dr, dg, db}

	if no_break ~= true then
		cinfo:echo("\n\n")
	end

  cinfo:decho("%s  %s%s" % {col_string, title, string.space(wrap_width - (title:len() + 2))})
	cinfo:echo("\n")
end

function cinfo_update()
  cinfo:clear()
  
	cinfo_header("Character Information", 45, 180, 255, true)
  
	local prefix, name, suffix = cd.player.title.prefix, cd.player.name, cd.player.title.suffix
	local race, level, class = cd.player.race:title(), cd.player.level, cd.player.class

  cinfo:cecho("&lt;a_grey&gt;%s&lt;a_white&gt;%s&lt;a_grey&gt;%s&lt;a_darkgrey&gt;, Lv. &lt;a_darkcyan&gt;%d &lt;a_darkgrey&gt;%s &lt;a_darkgreen&gt;%s" % {
    prefix, name, suffix, level, race, class
  })
  
  cinfo:echo("\n")
  
  for _, stat in ipairs({"HP", "MP", "END", "WIL"}) do
    local c = stat:sub(1, 1)
    local cur, max = tostring(cd.player[stat].current), tostring(cd.player[stat].max)
    local padding = max:len() - cur:len()
    local newline = ""
    if stat == "HP" or stat == "END" then
      newline = "\n"
    end

    local stat_string = "%s&lt;a_darkgrey&gt;%s&lt;a_darkcyan&gt;|&lt;dark_slate_grey&gt;%s&lt;a_grey&gt;%s&lt;a_darkcyan&gt;/&lt;a_grey&gt;%s" % {newline, c, string.rep("0", padding), cur, max}
    
    cinfo:cecho(stat_string:jleft(16))
  end
  
  cinfo:echo("\n")
  
  cinfo:cecho("\n&lt;a_darkgrey&gt;XP: &lt;a_grey&gt;%s &lt;a_darkgrey&gt;/ &lt;a_grey&gt;%s" % {pNum(cd.player.XP.current), pNum(cd.player.XP.max)})
  
  cinfo:echo("\n")
  
  cinfo:cecho("\n&lt;a_darkgrey&gt;Gold: &lt;gold&gt;%s" % {pNum(cd.player.gold)})
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Bottom Panel</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Stat Gauges</name>
						<packageName></packageName>
						<script>local colorRamp = function (cur, max)
	-- Returns a color on a gradient for stat values.
	local perc = (cur * 100) / max
	local color = {0, 0, 0}
	local r, g, b; b = 0

	if cur &gt;= max then
		color = {40, 180, 255}
	else
		if perc &gt; 50 then g = 255 else
			g = math.round((255 * perc) / 50)
		end

		if perc &lt; 50 then r = 255 else
			perc = 255 - ((((perc - 50) * 2) * 255) / 100)
			r = math.round(perc)
		end

		if g &gt; 255 then g = 255 elseif g &lt; 0 then g = 0 end
		if r &gt; 255 then r = 255 elseif r &lt; 0 then r = 0 end

		color = {r, g, b}
	end

	return color
end

-- Bottom panel background.
bottom_panel_bg = Geyser.Label:new({
  name = "bottom_panel_bg",
  x = 0, y = 0,
  width = "100%", height = "100%",
}, bottom_panel)

bottom_panel_bg:setStyleSheet([[
  background-color: #003;
  border-top: 1px solid #007;
]])

-- Health/Mana/Class gauges.
for i, l in ipairs({"health", "mana", "class"}) do
  _G[l .. "_bar_label"] = Geyser.Label:new({
    name = l .. "_bar_label",
    x = ((i - 1) * 220) + 48, y = 2,
    width = 200, height = 14,
    fgColor = "#9A9A9A",
    fontSize = 12,
    message = l:title()
  }, bottom_panel)

  _G[l .. "_bar_perc_label"] = Geyser.Label:new({
    name = l .. "_bar_perc_label",
    x = ((i - 1) * 220) + 217, y = 2,
    width = 40, height = 14,
    fgColor = "#FFFFFF",
    fontSize = 12,
    message = "0%"
  }, bottom_panel)

  _G[l .. "_bar_label"]:setFont("Terminus \(TTF\) for Windows")
  _G[l .. "_bar_label"]:setStyleSheet([[
    background-color: #003;
  ]])
  _G[l .. "_bar_perc_label"]:setFont("Terminus \(TTF\) for Windows")
  _G[l .. "_bar_perc_label"]:setStyleSheet([[
    background-color: #003;
    text-align: right;
  ]])
  
  _G[l .. "_bar"] = Geyser.Gauge:new({
    name = l .. "_bar",
    x = ((i - 1) * 220) + 48, y = 18,
    width = 200, height = 2,
    strict = true,
    orientation = "horizontal"
  }, bottom_panel)
  
  _G[l .. "_bar"].front:setStyleSheet([[
    background-color: #000;
  ]])

  _G[l .. "_bar"].back:setStyleSheet([[
    background-color: #000;
  ]])
end

-- XP gauge.
xp_bar_label = Geyser.Label:new({
  name = "xp_bar_label",
  x = 48, y = 28,
  width = 200, height = 14,
  fgColor = "#9A9A9A",
  fontSize = 12,
  message = "Experience"
}, bottom_panel)

xp_bar_label:setFont("Terminus \(TTF\) for Windows")
xp_bar_label:setStyleSheet([[
  background-color: #003;
]])

xp_bar_label:setFont("Terminus \(TTF\) for Windows")
xp_bar_label:setStyleSheet([[
  background-color: #003;
]])

xp_bar_perc_label = Geyser.Label:new({
  name = "xp_bar_perc_label",
  x = 268, y = 28,
  width = 414, height = 14,
  fgColor = "#FFFFFF",
  fontSize = 12,
  message = "0%"
}, bottom_panel)

xp_bar_perc_label:setFont("Terminus \(TTF\) for Windows")
xp_bar_perc_label:setStyleSheet([[
  background-color: #003;
]])

xp_bar = Geyser.Gauge:new({
  name = "xp_bar",
  x = 48, y = 42,
  width = 640, height = 3,
  strict = true,
  orientation = "horizontal"
}, bottom_panel)

xp_perc_bar = Geyser.Gauge:new({
  name = "xp_perc_bar",
  x = 48, y = 46,
  width = 640, height = 1,
  strict = true,
  orientation = "horizontal"
}, bottom_panel)

xp_bar.back:setStyleSheet([[
  background-color: #000;
]])

xp_bar.front:setStyleSheet([[
  background-color: #07F;
]])

xp_perc_bar.back:setStyleSheet([[
  background-color: #000;
]])

xp_perc_bar.front:setStyleSheet([[
  background-color: #07F;
]])

health_bar:setValue(0, 1)
mana_bar:setValue(0, 1)
class_bar:setValue(0, 1)
xp_bar:setValue(0, 1)
xp_perc_bar:setValue(0, 1)

function health_bar_update()
  local cur = cd.player.HP.current
  local max = cd.player.HP.max
  local perc = cd.player.HP.percent
  
  local colors = colorRamp(cur, max)
  local r, g, b = colors[1], colors[2], colors[3]
  health_bar.front:setStyleSheet("background-color: rgba(%d, %d, %d, 1);" % {r, g, b})
  health_bar:setValue(cur, max)
  health_bar_perc_label:clear()
  health_bar_perc_label:echo(perc .. "%")
end

function mana_bar_update()
  local cur = cd.player.MP.current
  local max = cd.player.MP.max
  local perc = cd.player.MP.percent
  
  local colors = colorRamp(cur, max)
  local r, g, b = colors[1], colors[2], colors[3]
  mana_bar.front:setStyleSheet("background-color: rgba(%d, %d, %d, 1);" % {r, g, b})
  mana_bar:setValue(cur, max)
  mana_bar_perc_label:echo(perc .. "%")
end

function class_bar_update()
  class_bar_label:clear()

  local bg_color = "#F00"
  local perc = 0

  if isMonk() then
    class_bar_label:echo("Kai")
    bg_color = "#FB0"
    perc = cd.player.kai

    local k_max = 100
    if cd.status.stance == "phs" then
      k_max = 120
      bg_color = "#FED"
    end

    class_bar:setValue(perc, k_max)
    class_bar.front:setStyleSheet("background-color: %s" % bg_color)

  elseif isVampire() then
    perc = cd.player.blood
    class_bar_label:echo("Blood")
    class_bar:setValue(perc, 100)
  else
    class_bar:setValue(0, 1)
  end
  
  class_bar_perc_label:echo(perc .. "%")
end

function xp_bar_update()
  xp_bar_perc_label:clear()

  local cur = cd.player.XP.current
  local max = cd.player.XP.max
  local perc = tonumber(cd.player.XP.percent)

  xp_bar:setValue(cur, max)

  local quarter_perc = perc % 25
  xp_perc_bar:setValue(quarter_perc, 25)
  
  local xp_text = "%s / %s (%s%%)" % {pNum(cur), pNum(max), perc}
  xp_bar_perc_label:echo(xp_text)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Top Panel</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>System Display</name>
						<packageName></packageName>
						<script>top_panel_bg = Geyser.Label:new({
  name = "top_panel_bg",
  x = 0, y = 0,
  width = "100%", height = "100%",
}, top_panel)

top_panel_bg:setStyleSheet([[
  background-color: #003;
  border-bottom: 1px solid #007;
]])

sysinfo = Geyser.MiniConsole:new({
  name = "sysinfo",
  x = 8,
  y = 2,
  color = {0, 0, 51},
  autoWrap = true,
  scrollBar = false,
  fontSize = 12,
  width = "100%",
  height = 17,
}, top_panel)

sysinfo:setColor(0, 0, 51)
sysinfo:setFont("Terminus \(TTF\) for Windows")

function sysinfo_update()
  sysinfo:clear()

  local sys_string = "&lt;a_white,dead_blue&gt;&lt;a_grey&gt;%s &lt;a_darkcyan&gt;v&lt;a_cyan&gt;%s" % {cd.sys.name, cd.sys.version}
  sysinfo:cecho(sys_string)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Balance Panel</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Balance Bars</name>
						<packageName></packageName>
						<script>local bars = {"bal", "eq", "ability"}

for i, b in ipairs(bars) do
  _G[b .. "_bar"] = Geyser.Gauge:new({
    name = b .. "_bar",
    x = ((i - 1) * 220), y = 0,
    width = 200, height = 6,
    strict = true,
    orientation = "horizontal"
  }, balance_panel)
  
  _G[b .. "_bar"].back:setStyleSheet([[
    background-color: #000;
  ]])
end

local bal_c = color_table.p_bal
local eq_c = color_table.p_eq
local ab_c = color_table.p_ab

bal_bar.front:setStyleSheet("background-color: rgb(%d, %d, %d);" % {bal_c[1], bal_c[2], bal_c[3]})
eq_bar.front:setStyleSheet("background-color: rgb(%d, %d, %d);" % {eq_c[1], eq_c[2], eq_c[3]})
ability_bar.front:setStyleSheet("background-color: rgb(%d, %d, %d);" % {ab_c[1], ab_c[2], ab_c[3]})

bal_bar:setValue(0, 1)
eq_bar:setValue(0, 1)
ability_bar:setValue(0, 1)</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>handleUIUpdate</name>
					<packageName></packageName>
					<script>local function updateAll()
  chat_tabs_update()
  cinfo_update()
  readout_update()
  sysinfo_update()
  sysmodes_update()
  
  health_bar_update()
  mana_bar_update()
  class_bar_update()
  xp_bar_update()
end

handleUIUpdate = function (e, ...)
  local args = {...}
  local sub = args[1]
  
  if not sub then
    updateAll()
    return
  end

  if e == "ui.update" then
    if initStatus ~= true or initVitals ~= true then
      return
    end
    
    if sub == "character" then
      cinfo_update()
    elseif sub == "readout" then
      readout_update()
    elseif sub == "stats" then
      health_bar_update()
      mana_bar_update()
      class_bar_update()
      xp_bar_update()
    elseif sub == "system" then
      sysinfo_update()
    elseif sub == "sysmodes" then
      sysmodes_update()
    end
  end
end</script>
					<eventHandlerList>
						<string>ui.update</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>handleAnimation</name>
					<packageName></packageName>
					<script>local gt = getStopWatchTime -- For optimization purposes.

local function bal_update()
  local w = "bal_stopwatch"
  if type(gt(w)) ~= "number" then
    bal_bar:setValue(0, 1)
    return
  end

  local duration = cd.time.bal.duration
  local time_left = duration - gt(w)
  if time_left &lt; 0 then time_left = 0 end
  bal_bar:setValue(time_left, duration)
end

local function eq_update()
  local w = "eq_stopwatch"
  if type(gt(w)) ~= "number" then
    eq_bar:setValue(0, 1)
    return
  end

  local duration = cd.time.eq.duration
  local time_left = duration - gt(w)
  if time_left &lt; 0 then time_left = 0 end
  eq_bar:setValue(time_left, duration)
end

local function ab_update()
  local w = "ab_stopwatch"
  if type(gt(w)) ~= "number" then
    ability_bar:setValue(0, 1)
    return
  end

  local duration = cd.time.ab.duration
  local time_left = duration - gt(w)
  if time_left &lt; 0 then time_left = 0 end
  ability_bar:setValue(time_left, duration)
end

function handleAnimation()
  if cd.time.bal.duration &gt; 0 then
    bal_update()
  else
    bal_bar:setValue(0, 1)
  end

  if cd.time.eq.duration &gt; 0 then
    eq_update()
  else
    eq_bar:setValue(0, 1)
  end

  if cd.time.ab.duration &gt; 0 then
    ab_update()
  else
    ability_bar:setValue(0, 1)
  end
end</script>
					<eventHandlerList>
						<string>animation.frame</string>
					</eventHandlerList>
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Modules</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Drunken Text Generator</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Da Script</name>
					<packageName></packageName>
					<script>-- Attempts to authentically recreate Aetolia's method of producing
-- drunken speech.
--
-- Usage is very simple:
--    Wrap the desired text in convertToDrunkText(). You must specify
--    a drunkenness level, so ensure that your alias/trigger/script
--    supplies that.
--
--
-- Example Alias: pattern --&gt; ^drunksay (\d+) (.+)$
--
--                script  --&gt; send(
--                               "say " .. 
--                               convertToDrunkText(matches[3], tonumber(matches[2])),
--                            false)

local drunkLevel = 0

local randomLetter = {
	"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"
}

local chances = {}

chances.randomLetter = function ()
	display("Random letter. drunkLevel: " .. drunkLevel)
	if drunkLevel &lt; 30 then return false end

	local chance = (drunkLevel / 20) - 1
	if math.random(100) &lt; chance then return true else return false end
end

chances.specialLetter = function ()
	if drunkLevel &lt; 30 then return false end

	local chance = (drunkLevel / 10) - 1
	if math.random(100) &lt; chance then return true else return false end
end

chances.capitalLetter = function ()
	if drunkLevel &lt; 30 then return false end

	local chance = (drunkLevel / 25) - 1
	if math.random(100) &lt; chance then return true else return false end
end

chances.hic = function ()
	if drunkLevel &lt; 30 then return false end

	local chance = drunkLevel / 60
	if math.random(100) &lt; chance then return true else return false end
end

chances.repeatLetter = function ()
	if drunkLevel &lt; 30 then return false end

	local chance = (drunkLevel / 15) - 2
	if math.random(100) &lt; chance then return true else return false end
end

local getRandomLetter = function ()
	return randomLetter[math.random(#randomLetter)]
end

local convertToRandomLetter = function (l, dl)
	if chances.randomLetter(dl) == true then
		l = getRandomLetter()
	end

	return l
end

local convertSpecialLetters = function (l)
	if chances.specialLetter == true then
		if l == "s" or l == "z" or l == "ct" then
			l = "sh"
		elseif l == "u" then
			l = l .. "h"
		elseif l == "q" then
			l = "k"
		elseif l == "ce" then
			l = "sh"
		end
	end

	return l
end

local convertToCapitalLetter = function (l)
	if chances.capitalLetter() == true then
		l = l:upper()
	end

	return l
end

local repeatLetter = function (l)
	if chances.repeatLetter() == true then
		l = l .. l:lower()
	end

	return l
end

convertToDrunkText = function (str, drunkenness)
	local count = 0
	local truecount = 0
	local omitNextLetter = false

	drunkLevel = drunkenness

	if drunkLevel == nil then
		error("No drunkenness supplied to convertToDrunkText(). Arguments: convertToDrunkText(text, drunkenness)")
		return
	end

	str = str:gsub("(.)", function (l)
		truecount = truecount + 1
		count = count + 1
		next = count + 1
		if count &gt; truecount then
			truecount = truecount + 1
			return l
		else
			local newletter = l
			if newletter ~= " " then
				newletter = convertToRandomLetter(newletter, drunkLevel)

				if newletter == "c" then
					if str:sub(next, next) == "t" then
						if str:sub(next + 1, next + 1) == "h" then
							count = count + 2
						else
							count = count + 1
							newletter = convertSpecialLetters("ct")
						end
					elseif str:sub(next, next) == "e" then
						count = count + 1
						newletter = convertSpecialLetters("ce")
					else
						newletter = convertSpecialLetters(newletter)
					end
				elseif newletter == "s" or newletter == "u" or newletter == "z" then
					if str:sub(next, next) == "h" then
						count = count + 1
					else
						convertSpecialLetters(newletter)
					end
				else
					newletter = convertSpecialLetters(newletter)
				end

				newletter = convertToCapitalLetter(newletter)
				newletter = repeatLetter(newletter)

				if chances.hic() == true then
					newletter = newletter .. " *hic* "
				end

				return newletter
			else
				return newletter
			end
		end
	end)

	return str
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Dragon Style</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Main Script</name>
					<packageName></packageName>
					<script>local DragonStyle = {}

DragonStyle.shouts = {
	"Heee-yah!",
	"It's over! This is the",
	"Fool, try my",
	"This is it!",
	"Now, the",
	"Prepare yourself!",
	"Prepare yourself for the",
	"At long last! Try the",
	"Behold, the ancient",
	"Now, I release my",
	"It's time for the",
	"I'll try a",
	"Wait 'til you try my",
	"At last!",
	"Out of my sight!",
	"Begone!"
}

DragonStyle.departures = {
	"Wickedness will not go unpunished!",
	"This is the end!",
	"Do not return!",
	"Begone, weakling!",
	"Now, you know my power!",
	"Walk away if you can!",
	"And never return!",
	"Know true fear!",
	"I am victorious!"
}

DragonStyle.qualities = {
	"Spinning", "Transaxial", "Sagittarial", "Erupting", "Electrocuting", "Mighty", "Crouching", "Running",
	"Jumping", "Leaping", "Flying", "Crawling", "Open-Handed", "Cutting", "Exalted", "Burning", "Shining",
	"Tree Splitting", "Rock Breaking", "Glittering", "Electrifying", "Devastating", "Rippling", "Roaring",
	"Surging", "Magical", "Endless", "Eternal", "Ruinous", "Harmonious", "Soaring", "Slicing", "Mysterious",
	"Final", "Ruinous", "God-breaking", "Defiant"
}

DragonStyle.aspects = {
	"Tiger", "Dragon", "Condor", "Lion", "Volcano", "River", "Heaven", "Hilltop Monastery", "Enlightenment",
	"Star", "Meteor", "Comet", "Heart", "Destruction", "Devastation", "Secret", "Magic", "Underground",
	"Sub-velocity", "Universe", "Darkness", "Holy", "Demon", "Anomaly", "Dream", "Nightmare", "Mountain",
	"Chasm", "Glacier", "Tundra", "River", "Harmony", "Hell", "Majesty", "Majestic", "Cloud", "Death"
}

DragonStyle.attacks = {
	"Fist", "Strike", "Blast", "Attack", "Ultimatum", "Smash", "Slash", "Crash", "Rush", "Combination",
	"Technique", "Style", "Method", "Swipe", "Claw", "Fang", "Eruption", "Explosion", "Shock", "Crash",
	"Crush", "Blow", "Cut", "Finisher", "Combo"
}

function GetRandomDragonStyle()
	local sht	--Shouts
	local qlt	--Qualities
	local asp	--Aspects
	local att	--Attacks
	local dep	--Departures
	local style = ""

	att = DragonStyle.attacks[math.random(1, #DragonStyle.attacks)]
	if math.random(1, 1000) &lt;= 700 then
		sht = DragonStyle.shouts[math.random(1, #DragonStyle.shouts)]
	end
	if math.random(1, 1000) &lt;= 900 then
		qlt = DragonStyle.qualities[math.random(1, #DragonStyle.qualities)]
	end
	if math.random(1, 1000) &lt;= 550 then
		asp = DragonStyle.aspects[math.random(1, #DragonStyle.aspects)]
	end
	if math.random(1, 1000) &lt;= 250 then
		dep = DragonStyle.departures[math.random(1, #DragonStyle.departures)]
	end

	if sht then style = sht .. " " end
	if qlt then style = style .. qlt .. " " end
	if asp then style = style .. asp .. " " end
	style = style .. att
	if dep then style = style .. "! " .. dep else style = style .. "!" end

	return style
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Player Quote Logs</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>--[[

	Player Quote Logs, for Aetolia, the Midnight Age.

	This module is written for Mudlet 2.1. It is not guaranteed to work
	with other versions of the client.

	Allows you to easily capture player quotes for the purposes of laughing
	at them later.

	(c) Alexander Divine, November 25th, 2013.

]]--

PQ = PQ or {}

PQ.name = "Player Quote Logs"
PQ.author = "Lin"
PQ.version = "0.1"
PQ.description = "Collects and writes player quotes to local files."</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Internals</name>
					<packageName></packageName>
					<script>local savePath
if getOS() == "linux" then
elseif getOS() == "windows" then
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Ve'kahian Dictionary</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>vk = vk or {}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Word Definitions</name>
					<packageName></packageName>
					<script>vk.dictionary = {
   [1] = {["word"] = "abandon", ["def"] = "(v) gorl"},
   [2] = {["word"] = "ability", ["def"] = "(describing capability) darl, darlu. (suffix, denoting one who is able) -ou"},
   [3] = {["word"] = "about", ["def"] = "(the area about something) nost. (phrase: 'about it') 'ge nosta'c'"},
   [4] = {["word"] = "above", ["def"] = "(the area above something) nurt. (phrase: 'above it') 'ge nurta'c'"},
   [5] = {["word"] = "absence", ["def"] = "gvok"},
   [6] = {["word"] = "absent", ["def"] = "gvok"},
   [7] = {["word"] = "absolve", ["def"] = "yarl"},
   [8] = {["word"] = "accept", ["def"] = "dilz"},
   [9] = {["word"] = "accident", ["def"] = "gor"},
   [10] = {["word"] = "ache", ["def"] = "kest"},
   [11] = {["word"] = "acquaintance", ["def"] = "(person) sinx"},
   [12] = {["word"] = "activity", ["def"] = "kerz"},
   [13] = {["word"] = "actual", ["def"] = "mad"},
   [14] = {["word"] = "add", ["def"] = "(v) veb"},
   [15] = {["word"] = "admiration", ["def"] = "nifs"},
   [16] = {["word"] = "admire", ["def"] = "nifs"},
   [17] = {["word"] = "advance", ["def"] = "(military) fent"},
   [18] = {["word"] = "afraid", ["def"] = "kack"},
   [19] = {["word"] = "afternoon", ["def"] = "burkepi"},
   [20] = {["word"] = "agree", ["def"] = "dul"},
   [21] = {["word"] = "agreement", ["def"] = "dul"},
   [22] = {["word"] = "aim", ["def"] = "(v) fel"},
   [23] = {["word"] = "air", ["def"] = "cin"},
   [24] = {["word"] = "alarm", ["def"] = "dvit, el deut"},
   [25] = {["word"] = "alight", ["def"] = "gink"},
   [26] = {["word"] = "all", ["def"] = "vic"},
   [27] = {["word"] = "allow", ["def"] = "norb"},
   [28] = {["word"] = "alter", ["def"] = "(v) yonk. (to alter something) sved"},
   [29] = {["word"] = "always", ["def"] = "nell"},
   [30] = {["word"] = "amazed", ["def"] = "yult"},
   [31] = {["word"] = "ambassador", ["def"] = "neshtar"},
   [32] = {["word"] = "ample", ["def"] = "dvifs"},
   [33] = {["word"] = "amuse", ["def"] = "yorb"},
   [34] = {["word"] = "anarchy", ["def"] = "nyeb"},
   [35] = {["word"] = "and", ["def"] = "mi"},
   [36] = {["word"] = "angry", ["def"] = "tahar"},
   [37] = {["word"] = "animal", ["def"] = "gent"},
   [38] = {["word"] = "announce", ["def"] = "nyonk"},
   [39] = {["word"] = "announcement", ["def"] = "nyonk"},
   [40] = {["word"] = "answer", ["def"] = "gvilz"},
   [41] = {["word"] = "any", ["def"] = "ned"},
   [42] = {["word"] = "appear", ["def"] = "(to appear; show up somewhere) kult. (suffix, one that appears) -xank"},
   [43] = {["word"] = "apple", ["def"] = "pelg"},
   [44] = {["word"] = "approve", ["def"] = "corb"},
   [45] = {["word"] = "arm", ["def"] = "lifs"},
   [46] = {["word"] = "around", ["def"] = "(the area around something) nost. (phrase: 'around it') 'ge nosta'c'"},
   [47] = {["word"] = "arrive", ["def"] = "xaid"},
   [48] = {["word"] = "arrow", ["def"] = "tar"},
   [49] = {["word"] = "ashamed", ["def"] = "yarb"},
   [50] = {["word"] = "ask", ["def"] = "don"},
   [51] = {["word"] = "assist", ["def"] = "bink"},
   [52] = {["word"] = "assure", ["def"] = "beir"},
   [53] = {["word"] = "avoid", ["def"] = "derz"},
   [54] = {["word"] = "await", ["def"] = "gifs"},
   [55] = {["word"] = "bad", ["def"] = "zord"},
   [56] = {["word"] = "bald", ["def"] = "yicak"},
   [57] = {["word"] = "basket", ["def"] = "traz"},
   [58] = {["word"] = "bath, bathe", ["def"] = "yulp"},
   [59] = {["word"] = "beach", ["def"] = "tail"},
   [60] = {["word"] = "bean", ["def"] = "zint"},
   [61] = {["word"] = "bear", ["def"] = "(v) fisp. (to bear a child) xer. (animal) diz. (animal, female) serdiz"},
   [62] = {["word"] = "beautiful", ["def"] = "den"},
   [63] = {["word"] = "beauty", ["def"] = "den"},
   [64] = {["word"] = "bed", ["def"] = "nart"},
   [65] = {["word"] = "beer", ["def"] = "blin"},
   [66] = {["word"] = "befriend", ["def"] = "lindxulp"},
   [67] = {["word"] = "beg", ["def"] = "kelb"},
   [68] = {["word"] = "begin", ["def"] = "nord"},
   [69] = {["word"] = "beguiling", ["def"] = "(deceptively) nick"},
   [70] = {["word"] = "behave", ["def"] = "(well or poorly) gvand"},
   [71] = {["word"] = "behead", ["def"] = "yiderulp"},
   [72] = {["word"] = "believe", ["def"] = "nyex"},
   [73] = {["word"] = "bell", ["def"] = "vong"},
   [74] = {["word"] = "belly", ["def"] = "ken"},
   [75] = {["word"] = "berserker", ["def"] = "nupoub"},
   [76] = {["word"] = "bet", ["def"] = "lifs"},
   [77] = {["word"] = "bewitch", ["def"] = "silp"},
   [78] = {["word"] = "big", ["def"] = "fer"},
   [79] = {["word"] = "bind", ["def"] = "garl"},
   [80] = {["word"] = "birth", ["def"] = "-xer"},
   [81] = {["word"] = "black", ["def"] = "dun"},
   [82] = {["word"] = "blade", ["def"] = "kesp"},
   [83] = {["word"] = "blind", ["def"] = "torx, yixev"},
   [84] = {["word"] = "blonde", ["def"] = "silm"},
   [85] = {["word"] = "blood", ["def"] = "mim"},
   [86] = {["word"] = "blue", ["def"] = "telm"},
   [87] = {["word"] = "blush", ["def"] = "nilod"},
   [88] = {["word"] = "board", ["def"] = "(of wood) snad"},
   [89] = {["word"] = "boat", ["def"] = "vond"},
   [90] = {["word"] = "body", ["def"] = "cilk"},
   [91] = {["word"] = "boil", ["def"] = "(to boil) yinf"},
   [92] = {["word"] = "book", ["def"] = "taiz"},
   [93] = {["word"] = "border", ["def"] = "(territorial) dikopsemeva"},
   [94] = {["word"] = "boring", ["def"] = "slaf"},
   [95] = {["word"] = "borrow", ["def"] = "pex"},
   [96] = {["word"] = "both", ["def"] = "divic"},
   [97] = {["word"] = "bother", ["def"] = "forg"},
   [98] = {["word"] = "bottle", ["def"] = "fenk"},
   [99] = {["word"] = "bow", ["def"] = "(to bow) sulv"},
   [100] = {["word"] = "box", ["def"] = "fim"},
   [101] = {["word"] = "boy", ["def"] = "sint"},
   [102] = {["word"] = "brain", ["def"] = "talia"},
   [103] = {["word"] = "brave", ["def"] = "dvar"},
   [104] = {["word"] = "bread", ["def"] = "zun"},
   [105] = {["word"] = "break", ["def"] = "tats"},
   [106] = {["word"] = "bride", ["def"] = "raid"},
   [107] = {["word"] = "bridge", ["def"] = "mid"},
   [108] = {["word"] = "bright", ["def"] = "fuln"},
   [109] = {["word"] = "bring", ["def"] = "snil"},
   [110] = {["word"] = "broad", ["def"] = "pob"},
   [111] = {["word"] = "brother", ["def"] = "cink"},
   [112] = {["word"] = "brown", ["def"] = "doud"},
   [113] = {["word"] = "brush", ["def"] = "fitc"},
   [114] = {["word"] = "build", ["def"] = "vest"},
   [115] = {["word"] = "burden", ["def"] = "nong"},
   [116] = {["word"] = "burn", ["def"] = "kakt"},
   [117] = {["word"] = "busy", ["def"] = "bux"},
   [118] = {["word"] = "but", ["def"] = "dar"},
   [119] = {["word"] = "butter", ["def"] = "flot"},
   [120] = {["word"] = "buy", ["def"] = "sning"},
   [121] = {["word"] = "cabbage", ["def"] = "fidx"},
   [122] = {["word"] = "cake", ["def"] = "sank"},
   [123] = {["word"] = "call", ["def"] = "(to be called) kuz"},
   [124] = {["word"] = "calm", ["def"] = "beb"},
   [125] = {["word"] = "camp", ["def"] = "dxiv"},
   [126] = {["word"] = "capability", ["def"] = "darl"},
   [127] = {["word"] = "capable", ["def"] = "darl"},
   [128] = {["word"] = "capital", ["def"] = "(city) sverkoli"},
   [129] = {["word"] = "carpet", ["def"] = "dxond"},
   [130] = {["word"] = "carry", ["def"] = "fisp"},
   [131] = {["word"] = "castle", ["def"] = "sut"},
   [132] = {["word"] = "catch", ["def"] = "pink"},
   [133] = {["word"] = "cause", ["def"] = "vour"},
   [134] = {["word"] = "cease", ["def"] = "telk"},
   [135] = {["word"] = "certain", ["def"] = "dond"},
   [136] = {["word"] = "chain", ["def"] = "sorb"},
   [137] = {["word"] = "chair", ["def"] = "bifs"},
   [138] = {["word"] = "chance", ["def"] = "poulg"},
   [139] = {["word"] = "change", ["def"] = "yonk. to change something, sved"},
   [140] = {["word"] = "chaos", ["def"] = "nyeb"},
   [141] = {["word"] = "charm", ["def"] = "(n) snic. (v) delm"},
   [142] = {["word"] = "cheap", ["def"] = "dxot"},
   [143] = {["word"] = "cheese", ["def"] = "findx"},
   [144] = {["word"] = "chicken", ["def"] = "dveg"},
   [145] = {["word"] = "child", ["def"] = "palk"},
   [146] = {["word"] = "choice", ["def"] = "sict"},
   [147] = {["word"] = "choose", ["def"] = "sict, fis"},
   [148] = {["word"] = "cider", ["def"] = "pelgesk"},
   [149] = {["word"] = "circular", ["def"] = "pur"},
   [150] = {["word"] = "claw", ["def"] = "ducp"},
   [151] = {["word"] = "clean", ["def"] = "(adj) kilk. (v) kilkulp"},
   [152] = {["word"] = "clever", ["def"] = "zelm"},
   [153] = {["word"] = "cloak", ["def"] = "calt"},
   [154] = {["word"] = "cloth", ["def"] = "dalg"},
   [155] = {["word"] = "clothing", ["def"] = "mudalg"},
   [156] = {["word"] = "cloud", ["def"] = "vulm"},
   [157] = {["word"] = "coat", ["def"] = "(piece of clothing) calt"},
   [158] = {["word"] = "coffee", ["def"] = "(or tea) taig"},
   [159] = {["word"] = "cold", ["def"] = "ding"},
   [160] = {["word"] = "color", ["def"] = "zarp"},
   [161] = {["word"] = "comb", ["def"] = "kail"},
   [162] = {["word"] = "come", ["def"] = "yin"},
   [163] = {["word"] = "command", ["def"] = "snon"},
   [164] = {["word"] = "compensate", ["def"] = "dvifsulp"},
   [165] = {["word"] = "complete", ["def"] = "vaic"},
   [166] = {["word"] = "concern", ["def"] = "boln"},
   [167] = {["word"] = "condition", ["def"] = "kod"},
   [168] = {["word"] = "consider", ["def"] = "dalb"},
   [169] = {["word"] = "constant", ["def"] = "nelm"},
   [170] = {["word"] = "container", ["def"] = "fim"},
   [171] = {["word"] = "continue", ["def"] = "dimb"},
   [172] = {["word"] = "control", ["def"] = "drak"},
   [173] = {["word"] = "cook", ["def"] = "(v) tein"},
   [174] = {["word"] = "corner", ["def"] = "gimb"},
   [175] = {["word"] = "cost", ["def"] = "marb"},
   [176] = {["word"] = "count", ["def"] = "tinf"},
   [177] = {["word"] = "country", ["def"] = "maz"},
   [178] = {["word"] = "court", ["def"] = "(n) mod. (v) dalshk"},
   [179] = {["word"] = "cover", ["def"] = "(n) luseft. (v) seft"},
   [180] = {["word"] = "crazed", ["def"] = "poul"},
   [181] = {["word"] = "cripple", ["def"] = "(n) fonk. (v) fonkulp"},
   [182] = {["word"] = "cry", ["def"] = "(to cry out) bul. (to weep) feg"},
   [183] = {["word"] = "cup", ["def"] = "dxard"},
   [184] = {["word"] = "cure", ["def"] = "neilm"},
   [185] = {["word"] = "cut", ["def"] = "kops"},
   [186] = {["word"] = "damp", ["def"] = "yarg, dxerindx"},
   [187] = {["word"] = "dance", ["def"] = "silf"},
   [188] = {["word"] = "danger", ["def"] = "dut"},
   [189] = {["word"] = "dangerous", ["def"] = "ledut"},
   [190] = {["word"] = "darkness", ["def"] = "bat. (becomes; darkens; act of becoming; evening) -batod. (became; darkened; former act of becoming) -abatod. (someone who is dark) -nubat. (something that is dark) -lubat. (makes; being made) -batulp. (extreme; very) -batail. (slight; slightly; a little) -batindx. (without; lack thereof; is not) -yibat"},
   [191] = {["word"] = "darling", ["def"] = "dalaen"},
   [192] = {["word"] = "daughter", ["def"] = "nin"},
   [193] = {["word"] = "day", ["def"] = "kep"},
   [194] = {["word"] = "dead", ["def"] = "lecet"},
   [195] = {["word"] = "deaf", ["def"] = "yisandx"},
   [196] = {["word"] = "dear", ["def"] = "dale"},
   [197] = {["word"] = "death", ["def"] = "cet"},
   [198] = {["word"] = "debt", ["def"] = "karkesk"},
   [199] = {["word"] = "decide", ["def"] = "falt"},
   [200] = {["word"] = "decision", ["def"] = "faltesk"},
   [201] = {["word"] = "deep", ["def"] = "ponx"},
   [202] = {["word"] = "deny", ["def"] = "(v) nyac"},
   [203] = {["word"] = "depart", ["def"] = "(v) vulb"},
   [204] = {["word"] = "desert", ["def"] = "(n) xeb, lu'xeb. (v) gorl"},
   [205] = {["word"] = "deserve", ["def"] = "(v) kolm"},
   [206] = {["word"] = "desire", ["def"] = "(v) cimp"},
   [207] = {["word"] = "die", ["def"] = "(v) cet, lecetod"},
   [208] = {["word"] = "difference", ["def"] = "nyarz"},
   [209] = {["word"] = "difficult", ["def"] = "yolc"},
   [210] = {["word"] = "dig", ["def"] = "(v) vrin"},
   [211] = {["word"] = "dirt", ["def"] = "blaf"},
   [212] = {["word"] = "dirty", ["def"] = "til. (figuratively) yidxil"},
   [213] = {["word"] = "disappear", ["def"] = "gvokod"},
   [214] = {["word"] = "disarray", ["def"] = "nyeb"},
   [215] = {["word"] = "discuss", ["def"] = "nild"},
   [216] = {["word"] = "disease", ["def"] = "yinilm"},
   [217] = {["word"] = "disembark", ["def"] = "gink"},
   [218] = {["word"] = "dismount", ["def"] = "gink"},
   [219] = {["word"] = "distant", ["def"] = "yolm"},
   [220] = {["word"] = "divide", ["def"] = "dikops"},
   [221] = {["word"] = "do", ["def"] = "(v) kerz"},
   [222] = {["word"] = "doctor", ["def"] = "nuneilm"},
   [223] = {["word"] = "doll", ["def"] = "dxib"},
   [224] = {["word"] = "dominion", ["def"] = "maz"},
   [225] = {["word"] = "door", ["def"] = "belb"},
   [226] = {["word"] = "dragon", ["def"] = "dack"},
   [227] = {["word"] = "draw", ["def"] = "(from a container) dxaz"},
   [228] = {["word"] = "dream", ["def"] = "tel"},
   [229] = {["word"] = "dress", ["def"] = "dorb"},
   [230] = {["word"] = "drink", ["def"] = "(v) snul"},
   [231] = {["word"] = "drunken", ["def"] = "(intoxicated) nusnulail"},
   [232] = {["word"] = "dry", ["def"] = "xeb"},
   [233] = {["word"] = "duck", ["def"] = "(fowl) mashar"},
   [234] = {["word"] = "duel", ["def"] = "kerf"},
   [235] = {["word"] = "dull", ["def"] = "(lustre) yiril"},
   [236] = {["word"] = "ear", ["def"] = "fil"},
   [237] = {["word"] = "early", ["def"] = "yont"},
   [238] = {["word"] = "earth", ["def"] = "blaf"},
   [239] = {["word"] = "east", ["def"] = "cel"},
   [240] = {["word"] = "easy", ["def"] = "dxart"},
   [241] = {["word"] = "eat", ["def"] = "meif"},
   [242] = {["word"] = "egg", ["def"] = "pant"},
   [243] = {["word"] = "eight", ["def"] = "koln"},
   [244] = {["word"] = "eighteen", ["def"] = "tulikoln"},
   [245] = {["word"] = "eighty", ["def"] = "koln-tudi"},
   [246] = {["word"] = "eleven", ["def"] = "tulined"},
   [247] = {["word"] = "elsewhere", ["def"] = "gvok"},
   [248] = {["word"] = "empty", ["def"] = "(adj) lad. (v) ladulp"},
   [249] = {["word"] = "enable", ["def"] = "darmulp"},
   [250] = {["word"] = "enchant", ["def"] = "silp"},
   [251] = {["word"] = "end", ["def"] = "(n) nain"},
   [252] = {["word"] = "enough", ["def"] = "dvifs"},
   [253] = {["word"] = "enter", ["def"] = "vlan"},
   [254] = {["word"] = "entertain", ["def"] = "yorb"},
   [255] = {["word"] = "entire", ["def"] = "vaic"},
   [256] = {["word"] = "entrance", ["def"] = "vlan"},
   [257] = {["word"] = "envy", ["def"] = "cimp"},
   [258] = {["word"] = "escape", ["def"] = "serk"},
   [259] = {["word"] = "esteem", ["def"] = "(n) nyet. (v) nyetulp"},
   [260] = {["word"] = "esteemed", ["def"] = "(adj) nyet"},
   [261] = {["word"] = "evening", ["def"] = "batod"},
   [262] = {["word"] = "every", ["def"] = "vic"},
   [263] = {["word"] = "exact", ["def"] = "cand"},
   [264] = {["word"] = "example", ["def"] = "yizd. (for example) yizdoc"},
   [265] = {["word"] = "excellent", ["def"] = "lesp, forblesp"},
   [266] = {["word"] = "excess", ["def"] = "taki"},
   [267] = {["word"] = "exchange", ["def"] = "xem"},
   [268] = {["word"] = "expect", ["def"] = "gifs"},
   [269] = {["word"] = "explain", ["def"] = "nudx"},
   [270] = {["word"] = "eye", ["def"] = "nen"},
   [271] = {["word"] = "eyelid", ["def"] = "nenelusefta"},
   [272] = {["word"] = "face", ["def"] = "glin"},
   [273] = {["word"] = "fair", ["def"] = "(level in judgement) sig. (aesthetic) silm"},
   [274] = {["word"] = "faith", ["def"] = "smiz"},
   [275] = {["word"] = "faithful", ["def"] = "lesmiz"},
   [276] = {["word"] = "fall", ["def"] = "(v) dozg. (of a regime) nain"},
   [277] = {["word"] = "family", ["def"] = "torb"},
   [278] = {["word"] = "far", ["def"] = "yolm"},
   [279] = {["word"] = "fast", ["def"] = "cid"},
   [280] = {["word"] = "fat", ["def"] = "sazb"},
   [281] = {["word"] = "father", ["def"] = "fen"},
   [282] = {["word"] = "feather", ["def"] = "svang"},
   [283] = {["word"] = "feel", ["def"] = "pord"},
   [284] = {["word"] = "feelings", ["def"] = "pord"},
   [285] = {["word"] = "fever", ["def"] = "cilkenusta"},
   [286] = {["word"] = "feverish", ["def"] = "lecilkenusta"},
   [287] = {["word"] = "field", ["def"] = "(uncultivated) nyil. (cultivated) keps"},
   [288] = {["word"] = "fifteen", ["def"] = "tuligong"},
   [289] = {["word"] = "fifty", ["def"] = "gong-tudi"},
   [290] = {["word"] = "fill", ["def"] = "(v) bostulp"},
   [291] = {["word"] = "first", ["def"] = "nedo"},
   [292] = {["word"] = "five", ["def"] = "gong"},
   [293] = {["word"] = "flaw", ["def"] = "tand"},
   [294] = {["word"] = "flawless", ["def"] = "yitand"},
   [295] = {["word"] = "flesh", ["def"] = "pouz"},
   [296] = {["word"] = "foot", ["def"] = "xor"},
   [297] = {["word"] = "forenoon", ["def"] = "yontkepi"},
   [298] = {["word"] = "forest", ["def"] = "nest"},
   [299] = {["word"] = "forget", ["def"] = "narm"},
   [300] = {["word"] = "forgive", ["def"] = "yarm"},
   [301] = {["word"] = "fortress", ["def"] = "sut"},
   [302] = {["word"] = "fortune", ["def"] = "saib"},
   [303] = {["word"] = "forty", ["def"] = "karp-tuli"},
   [304] = {["word"] = "fountain", ["def"] = "seil"},
   [305] = {["word"] = "four", ["def"] = "karp"},
   [306] = {["word"] = "fourteen", ["def"] = "tulikarp"},
   [307] = {["word"] = "free, freedom", ["def"] = "veda"},
   [308] = {["word"] = "frequent", ["def"] = "parb"},
   [309] = {["word"] = "fresh", ["def"] = "denz"},
   [310] = {["word"] = "friend", ["def"] = "(being a; pertaining to) (n) -lindx. (is or becomes a; act of being or becoming a) -lindxod. (former; having formerly been a) -alindx. (without any) -yilindx. (with a; having) -lelindx"},
   [311] = {["word"] = "friendly", ["def"] = "cark"},
   [312] = {["word"] = "fright", ["def"] = "kack"},
   [313] = {["word"] = "frighten", ["def"] = "kackulp"},
   [314] = {["word"] = "frontier", ["def"] = "dikopsemeva. (hostile land) fent"},
   [315] = {["word"] = "full", ["def"] = "bost"},
   [316] = {["word"] = "fur", ["def"] = "(something made of) svilmesk. (adj) -svilm. (is made of) yisvilm. (without; furless) -lesvilm. (with fur; furry) lesvilmindx."},
   [317] = {["word"] = "gang", ["def"] = "tcand"},
   [318] = {["word"] = "garden", ["def"] = "zeilp"},
   [319] = {["word"] = "garlic", ["def"] = "dxing"},
   [320] = {["word"] = "gate", ["def"] = "fint"},
   [321] = {["word"] = "get", ["def"] = "(v) reim"},
   [322] = {["word"] = "gift", ["def"] = "smenesk, cark smeneski"},
   [323] = {["word"] = "girl", ["def"] = "dven"},
   [324] = {["word"] = "give", ["def"] = "(to give up) xem."},
   [325] = {["word"] = "giving", ["def"] = "(the act of; gives; being given) -smen. (the former act of; gave; formerly given) -asmen. (the act of being given; is given) -smenod. (one who gives; giving (animate)) -nusmen. (the thing which gives; giving (inanimate)) -lusmen. (the thing given; gift) -smenesk. (act of causing to give; causes to give; being caused to give) -smenulp. (not giving; ungiving) -yismen. (to give a small amount) -smenidx"},
   [326] = {["word"] = "glow", ["def"] = "(v) denx"},
   [327] = {["word"] = "gluttony", ["def"] = "lekeneforgataki"},
   [328] = {["word"] = "go", ["def"] = "kem"},
   [329] = {["word"] = "god", ["def"] = "pald"},
   [330] = {["word"] = "gold", ["def"] = "rash"},
   [331] = {["word"] = "good", ["def"] = "dur"},
   [332] = {["word"] = "goose", ["def"] = "kerp"},
   [333] = {["word"] = "govern", ["def"] = "dvim"},
   [334] = {["word"] = "governor", ["def"] = "snir. (caste) shah"},
   [335] = {["word"] = "gratitude", ["def"] = "yair"},
   [336] = {["word"] = "gray", ["def"] = "slan"},
   [337] = {["word"] = "great", ["def"] = "fer"},
   [338] = {["word"] = "greed", ["def"] = "cimpsmenod"},
   [339] = {["word"] = "green", ["def"] = "blox"},
   [340] = {["word"] = "griffon", ["def"] = "moux"},
   [341] = {["word"] = "groom", ["def"] = "(at a wedding) numil"},
   [342] = {["word"] = "grow", ["def"] = "ferod"},
   [343] = {["word"] = "guard", ["def"] = "(n) todx. (v) todxod"},
   [344] = {["word"] = "guide", ["def"] = "(n) bilp. (v) bilpod"},
   [345] = {["word"] = "hair", ["def"] = "cak"},
   [346] = {["word"] = "half", ["def"] = "neit"},
   [347] = {["word"] = "hall", ["def"] = "gvinx"},
   [348] = {["word"] = "hammer", ["def"] = "tceb"},
   [349] = {["word"] = "hand", ["def"] = "nyor"},
   [350] = {["word"] = "happen", ["def"] = "(v) gil"},
   [351] = {["word"] = "happy", ["def"] = "gvet"},
   [352] = {["word"] = "harm", ["def"] = "(n) vaif. (v) vaifulp"},
   [353] = {["word"] = "harvest", ["def"] = "kopsod"},
   [354] = {["word"] = "hate", ["def"] = "tashar"},
   [355] = {["word"] = "haven", ["def"] = "kunxlevi"},
   [356] = {["word"] = "head", ["def"] = "svir"},
   [357] = {["word"] = "heal", ["def"] = "neilm"},
   [358] = {["word"] = "healer", ["def"] = "nuneilm"},
   [359] = {["word"] = "health", ["def"] = "nilm"},
   [360] = {["word"] = "healthy", ["def"] = "lenilm"},
   [361] = {["word"] = "hear", ["def"] = "sandx"},
   [362] = {["word"] = "heart", ["def"] = "nyel"},
   [363] = {["word"] = "heat", ["def"] = "nust"},
   [364] = {["word"] = "heaven", ["def"] = "forn"},
   [365] = {["word"] = "height", ["def"] = "ceir"},
   [366] = {["word"] = "help", ["def"] = "bink"},
   [367] = {["word"] = "hence", ["def"] = "ningevit"},
   [368] = {["word"] = "here", ["def"] = "ningevic, ningevi"},
   [369] = {["word"] = "high up", ["def"] = "nyiz"},
   [370] = {["word"] = "highest", ["def"] = "vur"},
   [371] = {["word"] = "hill", ["def"] = "pong"},
   [372] = {["word"] = "hire", ["def"] = "darb"},
   [373] = {["word"] = "history", ["def"] = "migim"},
   [374] = {["word"] = "hit", ["def"] = "(v) telp"},
   [375] = {["word"] = "hither", ["def"] = "ningevil"},
   [376] = {["word"] = "hold", ["def"] = "(v) yarp"},
   [377] = {["word"] = "hole", ["def"] = "sesp"},
   [378] = {["word"] = "honest", ["def"] = "smiz"},
   [379] = {["word"] = "honesty", ["def"] = "smiz"},
   [380] = {["word"] = "honey", ["def"] = "mink"},
   [381] = {["word"] = "honor", ["def"] = "smiz"},
   [382] = {["word"] = "honorable", ["def"] = "lesmiz"},
   [383] = {["word"] = "hope", ["def"] = "vleix"},
   [384] = {["word"] = "horse", ["def"] = "renggof"},
   [385] = {["word"] = "host", ["def"] = "zalb"},
   [386] = {["word"] = "hot", ["def"] = "nust"},
   [387] = {["word"] = "house", ["def"] = "toul"},
   [388] = {["word"] = "how", ["def"] = "cengkodic"},
   [389] = {["word"] = "human", ["def"] = "kvil"},
   [390] = {["word"] = "hunger", ["def"] = "keneforga"},
   [391] = {["word"] = "hungry", ["def"] = "lekeneforga"},
   [392] = {["word"] = "hurt", ["def"] = "(to feel bad) roup. (v) roupulp"},
   [393] = {["word"] = "husband", ["def"] = "sov"},
   [394] = {["word"] = "hydra", ["def"] = "fervedka"},
   [395] = {["word"] = "ice", ["def"] = "yein"},
   [396] = {["word"] = "icy", ["def"] = "leyein"},
   [397] = {["word"] = "ill", ["def"] = "yinilm"},
   [398] = {["word"] = "illness", ["def"] = "yinilm"},
   [399] = {["word"] = "important", ["def"] = "fintc"},
   [400] = {["word"] = "impossible", ["def"] = "yiveir"},
   [401] = {["word"] = "impure", ["def"] = "yidxil"},
   [402] = {["word"] = "industrious", ["def"] = "kindx"},
   [403] = {["word"] = "inform", ["def"] = "varg"},
   [404] = {["word"] = "inherit", ["def"] = "(to be inherited by; inheritance) teld"},
   [405] = {["word"] = "ink", ["def"] = "ludun"},
   [406] = {["word"] = "inn", ["def"] = "kereleva"},
   [407] = {["word"] = "inside", ["def"] = "mog"},
   [408] = {["word"] = "intend", ["def"] = "vrim"},
   [409] = {["word"] = "interest", ["def"] = "shias"},
   [410] = {["word"] = "interrupt", ["def"] = "veg"},
   [411] = {["word"] = "introduce", ["def"] = "yenz"},
   [412] = {["word"] = "invade, invasion", ["def"] = "fentevlana"},
   [413] = {["word"] = "iron", ["def"] = "bov"},
   [414] = {["word"] = "island", ["def"] = "gendx"},
   [415] = {["word"] = "jam", ["def"] = "(jelly; preserves) kein"},
   [416] = {["word"] = "join", ["def"] = "(to join oneself to) mil. (to join two things) -milulp"},
   [417] = {["word"] = "joke", ["def"] = "sleif"},
   [418] = {["word"] = "journey", ["def"] = "dval"},
   [419] = {["word"] = "juice", ["def"] = "klais"},
   [420] = {["word"] = "jump", ["def"] = "tok"},
   [421] = {["word"] = "just, justice", ["def"] = "sig"},
   [422] = {["word"] = "keep", ["def"] = "darb"},
   [423] = {["word"] = "kerchief", ["def"] = "svarb"},
   [424] = {["word"] = "key", ["def"] = "zert"},
   [425] = {["word"] = "kill", ["def"] = "men"},
   [426] = {["word"] = "kind", ["def"] = "(sort) dind. (friendly) cark"},
   [427] = {["word"] = "king", ["def"] = "padishah"},
   [428] = {["word"] = "kiss", ["def"] = "mint"},
   [429] = {["word"] = "kitchen", ["def"] = "teineleva"},
   [430] = {["word"] = "knife", ["def"] = "snos"},
   [431] = {["word"] = "knight", ["def"] = "dxir"},
   [432] = {["word"] = "know", ["def"] = "xac"},
   [433] = {["word"] = "lady", ["def"] = "gvir"},
   [434] = {["word"] = "lake", ["def"] = "lerg"},
   [435] = {["word"] = "lame", ["def"] = "yixour"},
   [436] = {["word"] = "lamp", ["def"] = "bel"},
   [437] = {["word"] = "land", ["def"] = "(expanse of) maz. (property) ban"},
   [438] = {["word"] = "language", ["def"] = "lain"},
   [439] = {["word"] = "large", ["def"] = "fer"},
   [440] = {["word"] = "last", ["def"] = "(preceding) dung"},
   [441] = {["word"] = "late, later", ["def"] = "bur"},
   [442] = {["word"] = "laugh", ["def"] = "nef"},
   [443] = {["word"] = "law", ["def"] = "yedx"},
   [444] = {["word"] = "lazy", ["def"] = "yikindx"},
   [445] = {["word"] = "leader", ["def"] = "svir"},
   [446] = {["word"] = "leaf", ["def"] = "zind"},
   [447] = {["word"] = "leap", ["def"] = "tok"},
   [448] = {["word"] = "learn", ["def"] = "tcid"},
   [449] = {["word"] = "leather", ["def"] = "slaik"},
   [450] = {["word"] = "leave", ["def"] = "(abandon) gorl. (depart) vulb"},
   [451] = {["word"] = "left", ["def"] = "(directional; sinistral) nink"},
   [452] = {["word"] = "leg", ["def"] = "vleim"},
   [453] = {["word"] = "lend", ["def"] = "pilf"},
   [454] = {["word"] = "letter", ["def"] = "zind, lutcar"},
   [455] = {["word"] = "library", ["def"] = "(facility) taizetoula. (collection) mitaiz"},
   [456] = {["word"] = "lid", ["def"] = "luseft"},
   [457] = {["word"] = "lie", ["def"] = "(n) zinkesk. (to tell an untruth; to lie down) zink."},
   [458] = {["word"] = "life", ["def"] = "mim"},
   [459] = {["word"] = "light", ["def"] = "denx. (a light source) bel. (to light something) kaktulp"},
   [460] = {["word"] = "like", ["def"] = "(to favor) nevu. (a comparison; simile) -ou"},
   [461] = {["word"] = "little", ["def"] = "medx"},
   [462] = {["word"] = "live", ["def"] = "(v) mim"},
   [463] = {["word"] = "liver", ["def"] = "zelb"},
   [464] = {["word"] = "loaf", ["def"] = "(of bread) zun"},
   [465] = {["word"] = "loan", ["def"] = "pilf"},
   [466] = {["word"] = "lock", ["def"] = "(of hair) cak. (as on a door or chest) sul"},
   [467] = {["word"] = "long", ["def"] = "meir"},
   [468] = {["word"] = "look", ["def"] = "(to look at) vob. (to search) serz"},
   [469] = {["word"] = "lord", ["def"] = "dvir"},
   [470] = {["word"] = "love", ["def"] = "dalae"},
   [471] = {["word"] = "lover", ["def"] = "dali"},
   [472] = {["word"] = "luck", ["def"] = "saib"},
   [473] = {["word"] = "lust", ["def"] = "dalek"},
   [474] = {["word"] = "maim", ["def"] = "yixourulp"},
   [475] = {["word"] = "main", ["def"] = "svir"},
   [476] = {["word"] = "make", ["def"] = "varb"},
   [477] = {["word"] = "man", ["def"] = "xird"},
   [478] = {["word"] = "manage", ["def"] = "medmazai"},
   [479] = {["word"] = "many", ["def"] = "rel"},
   [480] = {["word"] = "map", ["def"] = "mazesemba"},
   [481] = {["word"] = "market", ["def"] = "sningemeva"},
   [482] = {["word"] = "marry", ["def"] = "mil"},
   [483] = {["word"] = "materials", ["def"] = "nesk"},
   [484] = {["word"] = "meadow", ["def"] = "nyil"},
   [485] = {["word"] = "mean", ["def"] = "(to signify; definition) tcez"},
   [486] = {["word"] = "meat", ["def"] = "pouz"},
   [487] = {["word"] = "medicine", ["def"] = "luneilm"},
   [488] = {["word"] = "meet", ["def"] = "laimp"},
   [489] = {["word"] = "mention", ["def"] = "xink"},
   [490] = {["word"] = "message", ["def"] = "bop"},
   [491] = {["word"] = "midday", ["def"] = "kenkepi"},
   [492] = {["word"] = "middle", ["def"] = "ken"},
   [493] = {["word"] = "milk", ["def"] = "dor"},
   [494] = {["word"] = "mind", ["def"] = "(brain) (n) tisp"},
   [495] = {["word"] = "miss", ["def"] = "(to yearn) cenk. (to miss a target; inaccuracy) dxinf"},
   [496] = {["word"] = "mistake", ["def"] = "yorn"},
   [497] = {["word"] = "money", ["def"] = "porl"},
   [498] = {["word"] = "mood", ["def"] = "varx"},
   [499] = {["word"] = "morning", ["def"] = "laim, yontkepi"},
   [500] = {["word"] = "morph", ["def"] = "tcob"},
   [501] = {["word"] = "mother", ["def"] = "nem"},
   [502] = {["word"] = "mountain", ["def"] = "nyeiz"},
   [503] = {["word"] = "mouth", ["def"] = "xen"},
   [504] = {["word"] = "move", ["def"] = "tork"},
   [505] = {["word"] = "music", ["def"] = "dxair"},
   [506] = {["word"] = "my", ["def"] = "(denoting possession) -re"},
   [507] = {["word"] = "nail", ["def"] = "gig"},
   [508] = {["word"] = "name", ["def"] = "kuz"},
   [509] = {["word"] = "narrow", ["def"] = "vang"},
   [510] = {["word"] = "neck", ["def"] = "der"},
   [511] = {["word"] = "need", ["def"] = "(v) tcait"},
   [512] = {["word"] = "new", ["def"] = "zilt"},
   [513] = {["word"] = "next", ["def"] = "peng"},
   [514] = {["word"] = "night", ["def"] = "man"},
   [515] = {["word"] = "nine", ["def"] = "lam"},
   [516] = {["word"] = "nineteen", ["def"] = "tulilam"},
   [517] = {["word"] = "ninety", ["def"] = "lam-tudi"},
   [518] = {["word"] = "noise", ["def"] = "tcank"},
   [519] = {["word"] = "noon", ["def"] = "kenkepi"},
   [520] = {["word"] = "north", ["def"] = "vlor"},
   [521] = {["word"] = "nose", ["def"] = "lang"},
   [522] = {["word"] = "now", ["def"] = "nilbezic"},
   [523] = {["word"] = "number", ["def"] = "tinf"},
   [524] = {["word"] = "obtain", ["def"] = "reil"},
   [525] = {["word"] = "ocean", ["def"] = "nod"},
   [526] = {["word"] = "offer", ["def"] = "(v) slan"},
   [527] = {["word"] = "often", ["def"] = "parb"},
   [528] = {["word"] = "old", ["def"] = "gob"},
   [529] = {["word"] = "one", ["def"] = "ned"},
   [530] = {["word"] = "only", ["def"] = "siz"},
   [531] = {["word"] = "open", ["def"] = "(v) yirm"},
   [532] = {["word"] = "orange", ["def"] = "mimfulk"},
   [533] = {["word"] = "order", ["def"] = "(command) snon"},
   [534] = {["word"] = "origin", ["def"] = "ring"},
   [535] = {["word"] = "other", ["def"] = "minz"},
   [536] = {["word"] = "owe", ["def"] = "kark"},
   [537] = {["word"] = "own", ["def"] = "(adj) cip"},
   [538] = {["word"] = "pain, painful", ["def"] = "roup"},
   [539] = {["word"] = "paint", ["def"] = "(v) seftulp. (n) seftulpesk"},
   [540] = {["word"] = "palace", ["def"] = "neb"},
   [541] = {["word"] = "pale", ["def"] = "(n) lirm. (v) lirmod"},
   [542] = {["word"] = "pardon", ["def"] = "yarl"},
   [543] = {["word"] = "part", ["def"] = "(n) disk"},
   [544] = {["word"] = "pass", ["def"] = "(v) teld"},
   [545] = {["word"] = "pay", ["def"] = "(n) smenesk. (v) neggil, smeniu, pormou"},
   [546] = {["word"] = "pea", ["def"] = "tib"},
   [547] = {["word"] = "peace", ["def"] = "yort"},
   [548] = {["word"] = "peaceful", ["def"] = "leyort"},
   [549] = {["word"] = "perfect", ["def"] = "yitand"},
   [550] = {["word"] = "perform", ["def"] = "sarb"},
   [551] = {["word"] = "permit", ["def"] = "norb"},
   [552] = {["word"] = "person", ["def"] = "(n) bik, lemir. (in person) mad. (prefix denoting a person) nu-"},
   [553] = {["word"] = "physician", ["def"] = "nuneilm"},
   [554] = {["word"] = "pick", ["def"] = "(v) fis"},
   [555] = {["word"] = "picture", ["def"] = "selb"},
   [556] = {["word"] = "pierce", ["def"] = "nit"},
   [557] = {["word"] = "pipe", ["def"] = "dxod"},
   [558] = {["word"] = "pity", ["def"] = "(v) ging"},
   [559] = {["word"] = "place", ["def"] = "(n) mev. (v) dxag"},
   [560] = {["word"] = "plank", ["def"] = "snad"},
   [561] = {["word"] = "plum", ["def"] = "(fruit) dxim. (brandy) dximesk, ludximesk."},
   [562] = {["word"] = "pocket", ["def"] = "fong"},
   [563] = {["word"] = "poem", ["def"] = "larb"},
   [564] = {["word"] = "poet", ["def"] = "nularbulp"},
   [565] = {["word"] = "point", ["def"] = "(v) yink. (n) seis"},
   [566] = {["word"] = "poison", ["def"] = "luyinilmulp"},
   [567] = {["word"] = "pond", ["def"] = "lerg"},
   [568] = {["word"] = "port", ["def"] = "mer"},
   [569] = {["word"] = "possible", ["def"] = "veir"},
   [570] = {["word"] = "post", ["def"] = "(station; guard) ved"},
   [571] = {["word"] = "power", ["def"] = "drak"},
   [572] = {["word"] = "powerful", ["def"] = "ledrak"},
   [573] = {["word"] = "precise", ["def"] = "cand"},
   [574] = {["word"] = "presence", ["def"] = "nind"},
   [575] = {["word"] = "present", ["def"] = "(to be present) nind"},
   [576] = {["word"] = "pretty", ["def"] = "cem"},
   [577] = {["word"] = "price", ["def"] = "marb"},
   [578] = {["word"] = "pride", ["def"] = "kun"},
   [579] = {["word"] = "prince, princess", ["def"] = "forb"},
   [580] = {["word"] = "principal", ["def"] = "svir"},
   [581] = {["word"] = "principality", ["def"] = "dvil"},
   [582] = {["word"] = "procure", ["def"] = "reil"},
   [583] = {["word"] = "proud", ["def"] = "kun"},
   [584] = {["word"] = "province", ["def"] = "dvil"},
   [585] = {["word"] = "pull", ["def"] = "dxaz"},
   [586] = {["word"] = "punch", ["def"] = "dxak"},
   [587] = {["word"] = "pure", ["def"] = "dxil"},
   [588] = {["word"] = "purple", ["def"] = "mimtelm"},
   [589] = {["word"] = "purpose", ["def"] = "vais"},
   [590] = {["word"] = "purse", ["def"] = "pormefonga"},
   [591] = {["word"] = "put", ["def"] = "dxag"},
   [592] = {["word"] = "queen", ["def"] = "nimir"},
   [593] = {["word"] = "question", ["def"] = "don"},
   [594] = {["word"] = "quick", ["def"] = "cid"},
   [595] = {["word"] = "quiet", ["def"] = "(n) yitcank. (adj) leyort"},
   [596] = {["word"] = "raise", ["def"] = "(v) nazulp"},
   [597] = {["word"] = "rank", ["def"] = "pind"},
   [598] = {["word"] = "reach", ["def"] = "dxad"},
   [599] = {["word"] = "read", ["def"] = "taf"},
   [600] = {["word"] = "ready", ["def"] = "tokaf"},
   [601] = {["word"] = "real", ["def"] = "vist"},
   [602] = {["word"] = "realm", ["def"] = "maz"},
   [603] = {["word"] = "reason", ["def"] = "(n) vais"},
   [604] = {["word"] = "receive", ["def"] = "(v) reil"},
   [605] = {["word"] = "recommend", ["def"] = "dved"},
   [606] = {["word"] = "red", ["def"] = "nim"},
   [607] = {["word"] = "reflect", ["def"] = "gord"},
   [608] = {["word"] = "regret", ["def"] = "serl"},
   [609] = {["word"] = "reign", ["def"] = "(v) bin"},
   [610] = {["word"] = "rejoice", ["def"] = "kaiz"},
   [611] = {["word"] = "remove", ["def"] = "lec"},
   [612] = {["word"] = "report", ["def"] = "(v) vlop"},
   [613] = {["word"] = "represent", ["def"] = "(v) meik"},
   [614] = {["word"] = "request", ["def"] = "(v) (ask for) donp"},
   [615] = {["word"] = "resist", ["def"] = "(v) dord"},
   [616] = {["word"] = "rest", ["def"] = "(v) felp"},
   [617] = {["word"] = "result", ["def"] = "(n) zat. (v) zatod"},
   [618] = {["word"] = "retain", ["def"] = "darb"},
   [619] = {["word"] = "return", ["def"] = "(v) duc"},
   [620] = {["word"] = "reward", ["def"] = "(v) forbsmen"},
   [621] = {["word"] = "rice", ["def"] = "fulb"},
   [622] = {["word"] = "ride", ["def"] = "(v) vars"},
   [623] = {["word"] = "right", ["def"] = "(directional; dextral) nirk. (moral) cikesk"},
   [624] = {["word"] = "ring", ["def"] = "(v) purdx. (n) purkesk"},
   [625] = {["word"] = "rise", ["def"] = "cel"},
   [626] = {["word"] = "risk", ["def"] = "dutindx"},
   [627] = {["word"] = "risky", ["def"] = "ledutindx"},
   [628] = {["word"] = "river", ["def"] = "cil"},
   [629] = {["word"] = "road", ["def"] = "lar"},
   [630] = {["word"] = "roast", ["def"] = "(v) visk"},
   [631] = {["word"] = "roll", ["def"] = "(v) tark"},
   [632] = {["word"] = "room", ["def"] = "(free space) dxarl. (a chamber) toudx"},
   [633] = {["word"] = "root", ["def"] = "ring"},
   [634] = {["word"] = "rose", ["def"] = "(flower) parn"},
   [635] = {["word"] = "round", ["def"] = "pur"},
   [636] = {["word"] = "rule", ["def"] = "(v) bin, maz"},
   [637] = {["word"] = "ruler", ["def"] = "nu'maz"},
   [638] = {["word"] = "run", ["def"] = "(v) smod"},
   [639] = {["word"] = "sack", ["def"] = "raig"},
   [640] = {["word"] = "sad", ["def"] = "nek"},
   [641] = {["word"] = "safe", ["def"] = "(n) kunx. (safety) (adj) nep"},
   [642] = {["word"] = "salary", ["def"] = "smenesk"},
   [643] = {["word"] = "salt", ["def"] = "zimp"},
   [644] = {["word"] = "same", ["def"] = "vlod"},
   [645] = {["word"] = "sandal", ["def"] = "niks"},
   [646] = {["word"] = "satin", ["def"] = "vilg"},
   [647] = {["word"] = "sausage", ["def"] = "baib"},
   [648] = {["word"] = "say", ["def"] = "(v) pod"},
   [649] = {["word"] = "scarf", ["def"] = "svarb"},
   [650] = {["word"] = "sea", ["def"] = "nod"},
   [651] = {["word"] = "search", ["def"] = "zeir"},
   [652] = {["word"] = "seat", ["def"] = "mond"},
   [653] = {["word"] = "second", ["def"] = "diyo"},
   [654] = {["word"] = "see", ["def"] = "(v) xev"},
   [655] = {["word"] = "seek", ["def"] = "(v) serz"},
   [656] = {["word"] = "seem", ["def"] = "(appearance) xevkt"},
   [657] = {["word"] = "select", ["def"] = "(v) fis"},
   [658] = {["word"] = "send", ["def"] = "(v) tcar"},
   [659] = {["word"] = "servant", ["def"] = "nuvling. (female) sernuvling"},
   [660] = {["word"] = "serve", ["def"] = "(v) vling"},
   [661] = {["word"] = "set", ["def"] = "(v) nain"},
   [662] = {["word"] = "settle", ["def"] = "nain"},
   [663] = {["word"] = "seven", ["def"] = "dxem"},
   [664] = {["word"] = "seventeen", ["def"] = "tumidxem"},
   [665] = {["word"] = "seventy", ["def"] = "dxem-tudi"},
   [666] = {["word"] = "several", ["def"] = "netinfi"},
   [667] = {["word"] = "sew", ["def"] = "(v) palk"},
   [668] = {["word"] = "shadow", ["def"] = "zal"},
   [669] = {["word"] = "shame", ["def"] = "firt"},
   [670] = {["word"] = "sharp", ["def"] = "lab"},
   [671] = {["word"] = "shell", ["def"] = "milb"},
   [672] = {["word"] = "shine", ["def"] = "ril"},
   [673] = {["word"] = "shiny", ["def"] = "ril"},
   [674] = {["word"] = "shoe", ["def"] = "ninf"},
   [675] = {["word"] = "shop", ["def"] = "(n) xig"},
   [676] = {["word"] = "shore", ["def"] = "kveb"},
   [677] = {["word"] = "short", ["def"] = "tisk"},
   [678] = {["word"] = "show", ["def"] = "(v) slib"},
   [679] = {["word"] = "shrink", ["def"] = "(describing the act) medxod. (to shrink) medxulp"},
   [680] = {["word"] = "shut", ["def"] = "(to close) cerdx"},
   [681] = {["word"] = "sick, sickness", ["def"] = "yinilm. (to become sick) yinilmod"},
   [682] = {["word"] = "side", ["def"] = "nend"},
   [683] = {["word"] = "sight", ["def"] = "xev"},
   [684] = {["word"] = "signify", ["def"] = "tcez"},
   [685] = {["word"] = "silent", ["def"] = "yitcank"},
   [686] = {["word"] = "silk", ["def"] = "dvez"},
   [687] = {["word"] = "silver", ["def"] = "pok"},
   [688] = {["word"] = "similar", ["def"] = "nev"},
   [689] = {["word"] = "sing", ["def"] = "smec"},
   [690] = {["word"] = "siren", ["def"] = "(like a siren) nick"},
   [691] = {["word"] = "sister", ["def"] = "carf"},
   [692] = {["word"] = "sit", ["def"] = "pim"},
   [693] = {["word"] = "six", ["def"] = "teit"},
   [694] = {["word"] = "sixteen", ["def"] = "tumiteit"},
   [695] = {["word"] = "sixty", ["def"] = "teit-tudi"},
   [696] = {["word"] = "skin", ["def"] = "slaik"},
   [697] = {["word"] = "sky", ["def"] = "forn"},
   [698] = {["word"] = "sleep", ["def"] = "ker"},
   [699] = {["word"] = "sleepy", ["def"] = "tolx"},
   [700] = {["word"] = "sloth", ["def"] = "tolxpadi"},
   [701] = {["word"] = "slow", ["def"] = "pad"},
   [702] = {["word"] = "small", ["def"] = "medx"},
   [703] = {["word"] = "smell", ["def"] = "(v) nis"},
   [704] = {["word"] = "smile", ["def"] = "(v) rab"},
   [705] = {["word"] = "smoke", ["def"] = "(n) mek"},
   [706] = {["word"] = "smooth", ["def"] = "bok"},
   [707] = {["word"] = "snake", ["def"] = "vedka"},
   [708] = {["word"] = "soap", ["def"] = "kir"},
   [709] = {["word"] = "soft", ["def"] = "yirn"},
   [710] = {["word"] = "soil", ["def"] = "blaf"},
   [711] = {["word"] = "some", ["def"] = "ned"},
   [712] = {["word"] = "someone", ["def"] = "negg"},
   [713] = {["word"] = "sometime", ["def"] = "nebbezi"},
   [714] = {["word"] = "somewhere", ["def"] = "nedmevi"},
   [715] = {["word"] = "son", ["def"] = "nir"},
   [716] = {["word"] = "soon", ["def"] = "yep"},
   [717] = {["word"] = "sorry", ["def"] = "(to be sorry) seit"},
   [718] = {["word"] = "sort", ["def"] = "(syn. kind; of a persuasion) dind"},
   [719] = {["word"] = "soul", ["def"] = "mir"},
   [720] = {["word"] = "sound", ["def"] = "(aural) tcank"},
   [721] = {["word"] = "soup", ["def"] = "dxid"},
   [722] = {["word"] = "sour", ["def"] = "kenk"},
   [723] = {["word"] = "source", ["def"] = "ring"},
   [724] = {["word"] = "south", ["def"] = "sar"},
   [725] = {["word"] = "sovereign", ["def"] = "(a ruler) nu'maz"},
   [726] = {["word"] = "spar", ["def"] = "kerf"},
   [727] = {["word"] = "sparkle", ["def"] = "(v) zorb"},
   [728] = {["word"] = "speak", ["def"] = "(v) xid"},
   [729] = {["word"] = "spell", ["def"] = "(sorcery) silpesk"},
   [730] = {["word"] = "squeeze", ["def"] = "klais"},
   [731] = {["word"] = "stand", ["def"] = "(v) tolt"},
   [732] = {["word"] = "star", ["def"] = "xin, fornebela"},
   [733] = {["word"] = "start", ["def"] = "nord"},
   [734] = {["word"] = "starve", ["def"] = "(v) borm"},
   [735] = {["word"] = "state", ["def"] = "(government) maz"},
   [736] = {["word"] = "station", ["def"] = "ved"},
   [737] = {["word"] = "status", ["def"] = "pind"},
   [738] = {["word"] = "steal", ["def"] = "(v) telb"},
   [739] = {["word"] = "steam", ["def"] = "(n) fix"},
   [740] = {["word"] = "step", ["def"] = "(of a stair; a step taken) larp"},
   [741] = {["word"] = "stick", ["def"] = "(n) kolk"},
   [742] = {["word"] = "still", ["def"] = "(unmoving) ladx. (as in 'even yet') kob"},
   [743] = {["word"] = "stolen", ["def"] = "telb"},
   [744] = {["word"] = "stomach", ["def"] = "ken"},
   [745] = {["word"] = "stone", ["def"] = "bict"},
   [746] = {["word"] = "stop", ["def"] = "(v) telk"},
   [747] = {["word"] = "storm", ["def"] = "(n) pont"},
   [748] = {["word"] = "story", ["def"] = "dving"},
   [749] = {["word"] = "strange", ["def"] = "pof"},
   [750] = {["word"] = "stranger", ["def"] = "(n) mig"},
   [751] = {["word"] = "street", ["def"] = "nilb"},
   [752] = {["word"] = "strength", ["def"] = "klem"},
   [753] = {["word"] = "strike", ["def"] = "(v) telp"},
   [754] = {["word"] = "strive", ["def"] = "(v) sen"},
   [755] = {["word"] = "strong", ["def"] = "klem"},
   [756] = {["word"] = "student", ["def"] = "nutcid"},
   [757] = {["word"] = "stupid", ["def"] = "gog"},
   [758] = {["word"] = "succeed", ["def"] = "(v) kund"},
   [759] = {["word"] = "sudden", ["def"] = "minf"},
   [760] = {["word"] = "sugar", ["def"] = "nedx"},
   [761] = {["word"] = "sun", ["def"] = "fob"},
   [762] = {["word"] = "sunrise", ["def"] = "cel, kep"},
   [763] = {["word"] = "sunset", ["def"] = "nain"},
   [764] = {["word"] = "supreme", ["def"] = "vur"},
   [765] = {["word"] = "surrender", ["def"] = "xel"},
   [766] = {["word"] = "swan", ["def"] = "triz"},
   [767] = {["word"] = "sweet", ["def"] = "tcerk"},
   [768] = {["word"] = "swift", ["def"] = "cid"},
   [769] = {["word"] = "swim", ["def"] = "(v) plim"},
   [770] = {["word"] = "sword", ["def"] = "dxats"},
   [771] = {["word"] = "table", ["def"] = "lutolt"},
   [772] = {["word"] = "tail", ["def"] = "tur"},
   [773] = {["word"] = "take", ["def"] = "(v) dxink"},
   [774] = {["word"] = "talk", ["def"] = "(v) cilt"},
   [775] = {["word"] = "tall", ["def"] = "ceir"},
   [776] = {["word"] = "talon", ["def"] = "xoz"},
   [777] = {["word"] = "taste", ["def"] = "(v) gvek"},
   [778] = {["word"] = "teach", ["def"] = "ketaer"},
   [779] = {["word"] = "teacher", ["def"] = "ketaera"},
   [780] = {["word"] = "tell", ["def"] = "(to tell a story) dving. (to inform) varg"},
   [781] = {["word"] = "ten", ["def"] = "tud"},
   [782] = {["word"] = "territory", ["def"] = "maz"},
   [783] = {["word"] = "thank", ["def"] = "gid. (phrase: 'Thank you.') 'Gidu lou', 'Re gidau lou'"},
   [784] = {["word"] = "that", ["def"] = "(selecting a thing) keng. (denoting a thing (positional); in pointing out) leng"},
   [785] = {["word"] = "then", ["def"] = "(relating to time) kembezic"},
   [786] = {["word"] = "thence", ["def"] = "kengevit, kemmevit"},
   [787] = {["word"] = "there", ["def"] = "(positional (general)) kengevic, kengevi, kemmevic, kemmevit. (positional (personal)) lengevic, lengevi, lemmevic, lemmevi"},
   [788] = {["word"] = "therefore", ["def"] = "ningevaisac"},
   [789] = {["word"] = "thin", ["def"] = "fult"},
   [790] = {["word"] = "thing", ["def"] = "(prefix, denoting an object) lu-"},
   [791] = {["word"] = "think", ["def"] = "neg"},
   [792] = {["word"] = "third", ["def"] = "semo"},
   [793] = {["word"] = "thirst", ["def"] = "leb"},
   [794] = {["word"] = "thirsty", ["def"] = "leleb"},
   [795] = {["word"] = "thirteen", ["def"] = "tumisem"},
   [796] = {["word"] = "thirty", ["def"] = "sem-tudi"},
   [797] = {["word"] = "this", ["def"] = "ning"},
   [798] = {["word"] = "thither", ["def"] = "kengevil, kemmevil"},
   [799] = {["word"] = "thought", ["def"] = "neg"},
   [800] = {["word"] = "three", ["def"] = "sem"},
   [801] = {["word"] = "throw", ["def"] = "(v) neps"},
   [802] = {["word"] = "tidy", ["def"] = "plox"},
   [803] = {["word"] = "time", ["def"] = "bez"},
   [804] = {["word"] = "tiny", ["def"] = "medxail"},
   [805] = {["word"] = "tip", ["def"] = "(n) vlingpormi"},
   [806] = {["word"] = "tired", ["def"] = "(adj) tolx"},
   [807] = {["word"] = "today", ["def"] = "ninkepic, ninkepi"},
   [808] = {["word"] = "together", ["def"] = "mic"},
   [809] = {["word"] = "tomorrow", ["def"] = "penkepi, penkepic"},
   [810] = {["word"] = "tongue", ["def"] = "lain"},
   [811] = {["word"] = "tooth", ["def"] = "pling"},
   [812] = {["word"] = "touch", ["def"] = "(v) pord"},
   [813] = {["word"] = "towel", ["def"] = "laim"},
   [814] = {["word"] = "tower", ["def"] = "glam"},
   [815] = {["word"] = "town", ["def"] = "kol"},
   [816] = {["word"] = "translate", ["def"] = "(v) minzpod"},
   [817] = {["word"] = "travel", ["def"] = "dval"},
   [818] = {["word"] = "tree", ["def"] = "tcaiz"},
   [819] = {["word"] = "true", ["def"] = "merb"},
   [820] = {["word"] = "trunk", ["def"] = "(of a tree) nelt"},
   [821] = {["word"] = "try", ["def"] = "(to try for a crime) mod"},
   [822] = {["word"] = "turn", ["def"] = "(to turn something (directional)) klar. (to turn oneself (directional)) klarkeck. (to transform) tcob"},
   [823] = {["word"] = "twelve", ["def"] = "tumideg"},
   [824] = {["word"] = "twenty", ["def"] = "ditum"},
   [825] = {["word"] = "two", ["def"] = "(number) deg. (prefix, denoting duality) di-. (two-by-two; in a group of two) dic"},
   [826] = {["word"] = "ugly", ["def"] = "norf"},
   [827] = {["word"] = "understand", ["def"] = "tispxev"},
   [828] = {["word"] = "urge", ["def"] = "(v) trid"},
   [829] = {["word"] = "use", ["def"] = "(v) smid"},
   [830] = {["word"] = "usual", ["def"] = "lark"},
   [831] = {["word"] = "vain", ["def"] = "malar"},
   [832] = {["word"] = "valley", ["def"] = "kog"},
   [833] = {["word"] = "vanish", ["def"] = "gvokod"},
   [834] = {["word"] = "vanity", ["def"] = "malarsh"},
   [835] = {["word"] = "vary", ["def"] = "(v) mild"},
   [836] = {["word"] = "vegetable", ["def"] = "zeilpesk"},
   [837] = {["word"] = "velvet", ["def"] = "smar"},
   [838] = {["word"] = "verdict", ["def"] = "faltesk"},
   [839] = {["word"] = "very", ["def"] = "-ail"},
   [840] = {["word"] = "village", ["def"] = "gult"},
   [841] = {["word"] = "visit", ["def"] = "(v) keb"},
   [842] = {["word"] = "voice", ["def"] = "kup"},
   [843] = {["word"] = "wail", ["def"] = "(v) feg"},
   [844] = {["word"] = "wait", ["def"] = "(v) gifs"},
   [845] = {["word"] = "wake", ["def"] = "(v) nulmod"},
   [846] = {["word"] = "walk", ["def"] = "(v) xour"},
   [847] = {["word"] = "wall", ["def"] = "(n) kur"},
   [848] = {["word"] = "want", ["def"] = "cimp"},
   [849] = {["word"] = "warm", ["def"] = "nork, nustindx"},
   [850] = {["word"] = "warrior", ["def"] = "dxir"},
   [851] = {["word"] = "wash", ["def"] = "porp"},
   [852] = {["word"] = "watch", ["def"] = "(v) nel"},
   [853] = {["word"] = "water", ["def"] = "bor"},
   [854] = {["word"] = "weak", ["def"] = "yiklem"},
   [855] = {["word"] = "wear", ["def"] = "(to wear a garment) vind. (erosion) tord"},
   [856] = {["word"] = "weary", ["def"] = "tolx"},
   [857] = {["word"] = "weather", ["def"] = "sleb"},
   [858] = {["word"] = "weave", ["def"] = "(v) tist"},
   [859] = {["word"] = "weep", ["def"] = "(v) feg"},
   [860] = {["word"] = "west", ["def"] = "nain"},
   [861] = {["word"] = "wet", ["def"] = "dxer"},
   [862] = {["word"] = "what", ["def"] = "ceng"},
   [863] = {["word"] = "wheel", ["def"] = "lupur"},
   [864] = {["word"] = "whence", ["def"] = "cengevit"},
   [865] = {["word"] = "where", ["def"] = "cengevic, cengevi"},
   [866] = {["word"] = "which", ["def"] = "ceng"},
   [867] = {["word"] = "white", ["def"] = "mar"},
   [868] = {["word"] = "whither", ["def"] = "cengevil"},
   [869] = {["word"] = "who", ["def"] = "cengg"},
   [870] = {["word"] = "whole", ["def"] = "vaic"},
   [871] = {["word"] = "why", ["def"] = "cengevaisac"},
   [872] = {["word"] = "wide", ["def"] = "serd"},
   [873] = {["word"] = "wife", ["def"] = "svin"},
   [874] = {["word"] = "wild", ["def"] = "(untamed; undomesticated) tintc. (in manner) poub"},
   [875] = {["word"] = "wind", ["def"] = "(n) yob"},
   [876] = {["word"] = "window", ["def"] = "kuresespa"},
   [877] = {["word"] = "wine", ["def"] = "slem"},
   [878] = {["word"] = "wish", ["def"] = "(v) milg"},
   [879] = {["word"] = "wither", ["def"] = "setpadi"},
   [880] = {["word"] = "wolf", ["def"] = "kvix. (female) serkvix"},
   [881] = {["word"] = "woman", ["def"] = "gvir"},
   [882] = {["word"] = "wood", ["def"] = "tcaizesk"},
   [883] = {["word"] = "word", ["def"] = "dxor"},
   [884] = {["word"] = "work", ["def"] = "(v) fin"},
   [885] = {["word"] = "worm", ["def"] = "nur"},
   [886] = {["word"] = "worthy, worthiness", ["def"] = "mag"},
   [887] = {["word"] = "wrath", ["def"] = "tahar"},
   [888] = {["word"] = "write", ["def"] = "(v) sard"},
   [889] = {["word"] = "wrong", ["def"] = "(moral) gor"},
   [890] = {["word"] = "xix", ["def"] = "tuliailkoln"},
   [891] = {["word"] = "yawn", ["def"] = "(v) neft"},
   [892] = {["word"] = "year", ["def"] = "neg"},
   [893] = {["word"] = "yell", ["def"] = "bul"},
   [894] = {["word"] = "yellow", ["def"] = "fulk"},
   [895] = {["word"] = "yesterday", ["def"] = "dunkepi, dunkepic"},
   [896] = {["word"] = "young", ["def"] = "gond"},
   [897] = {["word"] = "your", ["def"] = "-le"},
   [898] = {["word"] = "zoo", ["def"] = "gentemeva"},
}

vk.r_dictionary = {
   [1] = {["word"] = "'Re gidau lou'", ["def"] = "thank."},
   [2] = {["word"] = "'ge nosta'c'", ["def"] = "about (phrase: 'about it'). around (phrase: 'around it')."},
   [3] = {["word"] = "'ge nurta'c'", ["def"] = "above (phrase: 'above it')."},
   [4] = {["word"] = "(syn. kind; of a persuasion) dind", ["def"] = "sort."},
   [5] = {["word"] = "-abatod", ["def"] = "darkness (became; darkened; former act of becoming)."},
   [6] = {["word"] = "-ail", ["def"] = "very."},
   [7] = {["word"] = "-alindx", ["def"] = "friend (former; having formerly been a)."},
   [8] = {["word"] = "-asmen", ["def"] = "giving (the former act of; gave; formerly given)."},
   [9] = {["word"] = "-batail", ["def"] = "darkness (extreme; very)."},
   [10] = {["word"] = "-batindx", ["def"] = "darkness (slight; slightly; a little)."},
   [11] = {["word"] = "-batod", ["def"] = "darkness (becomes; darkens; act of becoming; evening)."},
   [12] = {["word"] = "-batulp", ["def"] = "darkness (makes; being made)."},
   [13] = {["word"] = "-le", ["def"] = "your."},
   [14] = {["word"] = "-lelindx", ["def"] = "friend (with a; having)."},
   [15] = {["word"] = "-lesvilm", ["def"] = "fur (without; furless)."},
   [16] = {["word"] = "-lindx", ["def"] = "friend (being a; pertaining to) (n)."},
   [17] = {["word"] = "-lindxod", ["def"] = "friend (is or becomes a; act of being or becoming a)."},
   [18] = {["word"] = "-lubat", ["def"] = "darkness (something that is dark)."},
   [19] = {["word"] = "-lusmen", ["def"] = "giving (the thing which gives; giving (inanimate))."},
   [20] = {["word"] = "-milulp", ["def"] = "join (to join two things)."},
   [21] = {["word"] = "-nubat", ["def"] = "darkness (someone who is dark)."},
   [22] = {["word"] = "-nusmen", ["def"] = "giving (one who gives; giving (animate))."},
   [23] = {["word"] = "-ou", ["def"] = "ability (suffix, denoting one who is able). like (a comparison; simile)."},
   [24] = {["word"] = "-re", ["def"] = "my (denoting possession)."},
   [25] = {["word"] = "-smen", ["def"] = "giving (the act of; gives; being given)."},
   [26] = {["word"] = "-smenesk", ["def"] = "giving (the thing given; gift)."},
   [27] = {["word"] = "-smenidx", ["def"] = "giving (to give a small amount)."},
   [28] = {["word"] = "-smenod", ["def"] = "giving (the act of being given; is given)."},
   [29] = {["word"] = "-smenulp", ["def"] = "giving (act of causing to give; causes to give; being caused to give)."},
   [30] = {["word"] = "-svilm", ["def"] = "fur (adj)."},
   [31] = {["word"] = "-xank", ["def"] = "appear (suffix, one that appears)."},
   [32] = {["word"] = "-xer", ["def"] = "birth."},
   [33] = {["word"] = "-yibat", ["def"] = "darkness (without; lack thereof; is not)."},
   [34] = {["word"] = "-yilindx", ["def"] = "friend (without any)."},
   [35] = {["word"] = "-yismen", ["def"] = "giving (not giving; ungiving)."},
   [36] = {["word"] = "baib", ["def"] = "sausage."},
   [37] = {["word"] = "ban", ["def"] = "land (property)."},
   [38] = {["word"] = "batod", ["def"] = "evening."},
   [39] = {["word"] = "beb", ["def"] = "calm."},
   [40] = {["word"] = "beir", ["def"] = "assure."},
   [41] = {["word"] = "bel", ["def"] = "lamp. light (a light source)."},
   [42] = {["word"] = "belb", ["def"] = "door."},
   [43] = {["word"] = "bez", ["def"] = "time."},
   [44] = {["word"] = "bict", ["def"] = "stone."},
   [45] = {["word"] = "bifs", ["def"] = "chair."},
   [46] = {["word"] = "bik", ["def"] = "person (n)."},
   [47] = {["word"] = "bilp", ["def"] = "guide (n)."},
   [48] = {["word"] = "bilpod", ["def"] = "guide (v)."},
   [49] = {["word"] = "bin", ["def"] = "reign (v). rule (v)."},
   [50] = {["word"] = "bink", ["def"] = "assist. help."},
   [51] = {["word"] = "blaf", ["def"] = "dirt. earth. soil."},
   [52] = {["word"] = "blin", ["def"] = "beer."},
   [53] = {["word"] = "blox", ["def"] = "green."},
   [54] = {["word"] = "bok", ["def"] = "smooth."},
   [55] = {["word"] = "boln", ["def"] = "concern."},
   [56] = {["word"] = "bop", ["def"] = "message."},
   [57] = {["word"] = "bor", ["def"] = "water."},
   [58] = {["word"] = "borm", ["def"] = "starve (v)."},
   [59] = {["word"] = "bost", ["def"] = "full."},
   [60] = {["word"] = "bostulp", ["def"] = "fill (v)."},
   [61] = {["word"] = "bov", ["def"] = "iron."},
   [62] = {["word"] = "bul", ["def"] = "cry (to cry out). yell."},
   [63] = {["word"] = "bur", ["def"] = "late, later."},
   [64] = {["word"] = "burkepi", ["def"] = "afternoon."},
   [65] = {["word"] = "bux", ["def"] = "busy."},
   [66] = {["word"] = "cak", ["def"] = "hair. lock (of hair)."},
   [67] = {["word"] = "calt", ["def"] = "cloak. coat (piece of clothing)."},
   [68] = {["word"] = "cand", ["def"] = "exact. precise."},
   [69] = {["word"] = "carf", ["def"] = "sister."},
   [70] = {["word"] = "cark", ["def"] = "friendly. kind (friendly)."},
   [71] = {["word"] = "cark smeneski", ["def"] = "gift."},
   [72] = {["word"] = "ceir", ["def"] = "height. tall."},
   [73] = {["word"] = "cel", ["def"] = "east. rise. sunrise."},
   [74] = {["word"] = "cem", ["def"] = "pretty."},
   [75] = {["word"] = "ceng", ["def"] = "what. which."},
   [76] = {["word"] = "cengevaisac", ["def"] = "why."},
   [77] = {["word"] = "cengevi", ["def"] = "where."},
   [78] = {["word"] = "cengevic", ["def"] = "where."},
   [79] = {["word"] = "cengevil", ["def"] = "whither."},
   [80] = {["word"] = "cengevit", ["def"] = "whence."},
   [81] = {["word"] = "cengg", ["def"] = "who."},
   [82] = {["word"] = "cengkodic", ["def"] = "how."},
   [83] = {["word"] = "cenk", ["def"] = "miss (to yearn)."},
   [84] = {["word"] = "cerdx", ["def"] = "shut (to close)."},
   [85] = {["word"] = "cet", ["def"] = "death. die (v)."},
   [86] = {["word"] = "cid", ["def"] = "fast. quick. swift."},
   [87] = {["word"] = "cikesk", ["def"] = "right (moral)."},
   [88] = {["word"] = "cil", ["def"] = "river."},
   [89] = {["word"] = "cilk", ["def"] = "body."},
   [90] = {["word"] = "cilkenusta", ["def"] = "fever."},
   [91] = {["word"] = "cilt", ["def"] = "talk (v)."},
   [92] = {["word"] = "cimp", ["def"] = "desire (v). envy. want."},
   [93] = {["word"] = "cimpsmenod", ["def"] = "greed."},
   [94] = {["word"] = "cin", ["def"] = "air."},
   [95] = {["word"] = "cink", ["def"] = "brother."},
   [96] = {["word"] = "cip", ["def"] = "own (adj)."},
   [97] = {["word"] = "corb", ["def"] = "approve."},
   [98] = {["word"] = "dack", ["def"] = "dragon."},
   [99] = {["word"] = "dalae", ["def"] = "love."},
   [100] = {["word"] = "dalaen", ["def"] = "darling."},
   [101] = {["word"] = "dalb", ["def"] = "consider."},
   [102] = {["word"] = "dale", ["def"] = "dear."},
   [103] = {["word"] = "dalek", ["def"] = "lust."},
   [104] = {["word"] = "dalg", ["def"] = "cloth."},
   [105] = {["word"] = "dali", ["def"] = "lover."},
   [106] = {["word"] = "dalshk", ["def"] = "court (v)."},
   [107] = {["word"] = "dar", ["def"] = "but."},
   [108] = {["word"] = "darb", ["def"] = "hire. keep. retain."},
   [109] = {["word"] = "darl", ["def"] = "ability (describing capability). capability. capable."},
   [110] = {["word"] = "darlu", ["def"] = "ability (describing capability)."},
   [111] = {["word"] = "darmulp", ["def"] = "enable."},
   [112] = {["word"] = "deg", ["def"] = "two (number)."},
   [113] = {["word"] = "delm", ["def"] = "charm (v)."},
   [114] = {["word"] = "den", ["def"] = "beautiful. beauty."},
   [115] = {["word"] = "denx", ["def"] = "glow (v)."},
   [116] = {["word"] = "denz", ["def"] = "fresh."},
   [117] = {["word"] = "der", ["def"] = "neck."},
   [118] = {["word"] = "derz", ["def"] = "avoid."},
   [119] = {["word"] = "di-", ["def"] = "two (prefix, denoting duality)."},
   [120] = {["word"] = "dikops", ["def"] = "divide."},
   [121] = {["word"] = "dikopsemeva", ["def"] = "border (territorial)."},
   [122] = {["word"] = "dilz", ["def"] = "accept."},
   [123] = {["word"] = "dimb", ["def"] = "continue."},
   [124] = {["word"] = "dind", ["def"] = "kind (sort)."},
   [125] = {["word"] = "ding", ["def"] = "cold."},
   [126] = {["word"] = "disk", ["def"] = "part (n)."},
   [127] = {["word"] = "ditum", ["def"] = "twenty."},
   [128] = {["word"] = "divic", ["def"] = "both."},
   [129] = {["word"] = "diyo", ["def"] = "second."},
   [130] = {["word"] = "diz", ["def"] = "bear (animal)."},
   [131] = {["word"] = "don", ["def"] = "ask. question."},
   [132] = {["word"] = "dond", ["def"] = "certain."},
   [133] = {["word"] = "donp", ["def"] = "request (v) (ask for)."},
   [134] = {["word"] = "dor", ["def"] = "milk."},
   [135] = {["word"] = "dorb", ["def"] = "dress."},
   [136] = {["word"] = "dord", ["def"] = "resist (v)."},
   [137] = {["word"] = "doud", ["def"] = "brown."},
   [138] = {["word"] = "dozg", ["def"] = "fall (v)."},
   [139] = {["word"] = "drak", ["def"] = "control. power."},
   [140] = {["word"] = "duc", ["def"] = "return (v)."},
   [141] = {["word"] = "ducp", ["def"] = "claw."},
   [142] = {["word"] = "dul", ["def"] = "agree. agreement."},
   [143] = {["word"] = "dun", ["def"] = "black."},
   [144] = {["word"] = "dung", ["def"] = "last (preceding)."},
   [145] = {["word"] = "dunkepi", ["def"] = "yesterday."},
   [146] = {["word"] = "dunkepic", ["def"] = "yesterday."},
   [147] = {["word"] = "dur", ["def"] = "good."},
   [148] = {["word"] = "dut", ["def"] = "danger."},
   [149] = {["word"] = "dutindx", ["def"] = "risk."},
   [150] = {["word"] = "dval", ["def"] = "journey. travel."},
   [151] = {["word"] = "dvar", ["def"] = "brave."},
   [152] = {["word"] = "dved", ["def"] = "recommend."},
   [153] = {["word"] = "dveg", ["def"] = "chicken."},
   [154] = {["word"] = "dven", ["def"] = "girl."},
   [155] = {["word"] = "dvez", ["def"] = "silk."},
   [156] = {["word"] = "dvifs", ["def"] = "ample. enough."},
   [157] = {["word"] = "dvifsulp", ["def"] = "compensate."},
   [158] = {["word"] = "dvil", ["def"] = "principality. province."},
   [159] = {["word"] = "dvim", ["def"] = "govern."},
   [160] = {["word"] = "dving", ["def"] = "story. tell (to tell a story)."},
   [161] = {["word"] = "dvir", ["def"] = "lord."},
   [162] = {["word"] = "dvit", ["def"] = "alarm."},
   [163] = {["word"] = "dxad", ["def"] = "reach."},
   [164] = {["word"] = "dxag", ["def"] = "place (v). put."},
   [165] = {["word"] = "dxair", ["def"] = "music."},
   [166] = {["word"] = "dxak", ["def"] = "punch."},
   [167] = {["word"] = "dxard", ["def"] = "cup."},
   [168] = {["word"] = "dxarl", ["def"] = "room (free space)."},
   [169] = {["word"] = "dxart", ["def"] = "easy."},
   [170] = {["word"] = "dxats", ["def"] = "sword."},
   [171] = {["word"] = "dxaz", ["def"] = "draw (from a container). pull."},
   [172] = {["word"] = "dxem", ["def"] = "seven."},
   [173] = {["word"] = "dxem-tudi", ["def"] = "seventy."},
   [174] = {["word"] = "dxer", ["def"] = "wet."},
   [175] = {["word"] = "dxerindx", ["def"] = "damp."},
   [176] = {["word"] = "dxib", ["def"] = "doll."},
   [177] = {["word"] = "dxid", ["def"] = "soup."},
   [178] = {["word"] = "dxil", ["def"] = "pure."},
   [179] = {["word"] = "dxim", ["def"] = "plum (fruit)."},
   [180] = {["word"] = "dximesk", ["def"] = "plum (brandy)."},
   [181] = {["word"] = "dxinf", ["def"] = "miss (to miss a target; inaccuracy)."},
   [182] = {["word"] = "dxing", ["def"] = "garlic."},
   [183] = {["word"] = "dxink", ["def"] = "take (v)."},
   [184] = {["word"] = "dxir", ["def"] = "knight. warrior."},
   [185] = {["word"] = "dxiv", ["def"] = "camp."},
   [186] = {["word"] = "dxod", ["def"] = "pipe."},
   [187] = {["word"] = "dxond", ["def"] = "carpet."},
   [188] = {["word"] = "dxor", ["def"] = "word."},
   [189] = {["word"] = "dxot", ["def"] = "cheap."},
   [190] = {["word"] = "el deut", ["def"] = "alarm."},
   [191] = {["word"] = "falt", ["def"] = "decide."},
   [192] = {["word"] = "faltesk", ["def"] = "decision. verdict."},
   [193] = {["word"] = "feg", ["def"] = "cry (to weep). wail (v). weep (v)."},
   [194] = {["word"] = "fel", ["def"] = "aim (v)."},
   [195] = {["word"] = "felp", ["def"] = "rest (v)."},
   [196] = {["word"] = "fen", ["def"] = "father."},
   [197] = {["word"] = "fenk", ["def"] = "bottle."},
   [198] = {["word"] = "fent", ["def"] = "advance (military). frontier (hostile land)."},
   [199] = {["word"] = "fentevlana", ["def"] = "invade, invasion."},
   [200] = {["word"] = "fer", ["def"] = "big. great. large."},
   [201] = {["word"] = "ferod", ["def"] = "grow."},
   [202] = {["word"] = "fervedka", ["def"] = "hydra."},
   [203] = {["word"] = "fidx", ["def"] = "cabbage."},
   [204] = {["word"] = "fil", ["def"] = "ear."},
   [205] = {["word"] = "fim", ["def"] = "box. container."},
   [206] = {["word"] = "fin", ["def"] = "work (v)."},
   [207] = {["word"] = "findx", ["def"] = "cheese."},
   [208] = {["word"] = "fint", ["def"] = "gate."},
   [209] = {["word"] = "fintc", ["def"] = "important."},
   [210] = {["word"] = "firt", ["def"] = "shame."},
   [211] = {["word"] = "fis", ["def"] = "choose. pick (v). select (v)."},
   [212] = {["word"] = "fisp", ["def"] = "bear (v). carry."},
   [213] = {["word"] = "fitc", ["def"] = "brush."},
   [214] = {["word"] = "fix", ["def"] = "steam (n)."},
   [215] = {["word"] = "flot", ["def"] = "butter."},
   [216] = {["word"] = "fob", ["def"] = "sun."},
   [217] = {["word"] = "fong", ["def"] = "pocket."},
   [218] = {["word"] = "fonk", ["def"] = "cripple (n)."},
   [219] = {["word"] = "fonkulp", ["def"] = "cripple (v)."},
   [220] = {["word"] = "forb", ["def"] = "prince, princess."},
   [221] = {["word"] = "forblesp", ["def"] = "excellent."},
   [222] = {["word"] = "forbsmen", ["def"] = "reward (v)."},
   [223] = {["word"] = "forg", ["def"] = "bother."},
   [224] = {["word"] = "forn", ["def"] = "heaven. sky."},
   [225] = {["word"] = "fornebela", ["def"] = "star."},
   [226] = {["word"] = "fulb", ["def"] = "rice."},
   [227] = {["word"] = "fulk", ["def"] = "yellow."},
   [228] = {["word"] = "fuln", ["def"] = "bright."},
   [229] = {["word"] = "fult", ["def"] = "thin."},
   [230] = {["word"] = "garl", ["def"] = "bind."},
   [231] = {["word"] = "gendx", ["def"] = "island."},
   [232] = {["word"] = "gent", ["def"] = "animal."},
   [233] = {["word"] = "gentemeva", ["def"] = "zoo."},
   [234] = {["word"] = "gid. (phrase: 'Thank you.') 'Gidu lou'", ["def"] = "thank."},
   [235] = {["word"] = "gifs", ["def"] = "await. expect. wait (v)."},
   [236] = {["word"] = "gig", ["def"] = "nail."},
   [237] = {["word"] = "gil", ["def"] = "happen (v)."},
   [238] = {["word"] = "gimb", ["def"] = "corner."},
   [239] = {["word"] = "ging", ["def"] = "pity (v)."},
   [240] = {["word"] = "gink", ["def"] = "alight. disembark. dismount."},
   [241] = {["word"] = "glam", ["def"] = "tower."},
   [242] = {["word"] = "glin", ["def"] = "face."},
   [243] = {["word"] = "gob", ["def"] = "old."},
   [244] = {["word"] = "gog", ["def"] = "stupid."},
   [245] = {["word"] = "gond", ["def"] = "young."},
   [246] = {["word"] = "gong", ["def"] = "five."},
   [247] = {["word"] = "gong-tudi", ["def"] = "fifty."},
   [248] = {["word"] = "gor", ["def"] = "accident. wrong (moral)."},
   [249] = {["word"] = "gord", ["def"] = "reflect."},
   [250] = {["word"] = "gorl", ["def"] = "abandon (v). desert (v). leave (abandon)."},
   [251] = {["word"] = "gult", ["def"] = "village."},
   [252] = {["word"] = "gvand", ["def"] = "behave (well or poorly)."},
   [253] = {["word"] = "gvek", ["def"] = "taste (v)."},
   [254] = {["word"] = "gvet", ["def"] = "happy."},
   [255] = {["word"] = "gvilz", ["def"] = "answer."},
   [256] = {["word"] = "gvinx", ["def"] = "hall."},
   [257] = {["word"] = "gvir", ["def"] = "lady. woman."},
   [258] = {["word"] = "gvok", ["def"] = "absence. absent. elsewhere."},
   [259] = {["word"] = "gvokod", ["def"] = "disappear. vanish."},
   [260] = {["word"] = "kack", ["def"] = "afraid. fright."},
   [261] = {["word"] = "kackulp", ["def"] = "frighten."},
   [262] = {["word"] = "kail", ["def"] = "comb."},
   [263] = {["word"] = "kaiz", ["def"] = "rejoice."},
   [264] = {["word"] = "kakt", ["def"] = "burn."},
   [265] = {["word"] = "kaktulp", ["def"] = "light (to light something)."},
   [266] = {["word"] = "kark", ["def"] = "owe."},
   [267] = {["word"] = "karkesk", ["def"] = "debt."},
   [268] = {["word"] = "karp", ["def"] = "four."},
   [269] = {["word"] = "karp-tuli", ["def"] = "forty."},
   [270] = {["word"] = "keb", ["def"] = "visit (v)."},
   [271] = {["word"] = "kein", ["def"] = "jam (jelly; preserves)."},
   [272] = {["word"] = "kelb", ["def"] = "beg."},
   [273] = {["word"] = "kem", ["def"] = "go."},
   [274] = {["word"] = "kembezic", ["def"] = "then (relating to time)."},
   [275] = {["word"] = "kemmevic", ["def"] = "there (positional (general))."},
   [276] = {["word"] = "kemmevil", ["def"] = "thither."},
   [277] = {["word"] = "kemmevit", ["def"] = "thence. there (positional (general))."},
   [278] = {["word"] = "ken", ["def"] = "belly. middle. stomach."},
   [279] = {["word"] = "keneforga", ["def"] = "hunger."},
   [280] = {["word"] = "keng", ["def"] = "that (selecting a thing)."},
   [281] = {["word"] = "kengevi", ["def"] = "there (positional (general))."},
   [282] = {["word"] = "kengevic", ["def"] = "there (positional (general))."},
   [283] = {["word"] = "kengevil", ["def"] = "thither."},
   [284] = {["word"] = "kengevit", ["def"] = "thence."},
   [285] = {["word"] = "kenk", ["def"] = "sour."},
   [286] = {["word"] = "kenkepi", ["def"] = "midday. noon."},
   [287] = {["word"] = "kep", ["def"] = "day. sunrise."},
   [288] = {["word"] = "keps", ["def"] = "field (cultivated)."},
   [289] = {["word"] = "ker", ["def"] = "sleep."},
   [290] = {["word"] = "kereleva", ["def"] = "inn."},
   [291] = {["word"] = "kerf", ["def"] = "duel. spar."},
   [292] = {["word"] = "kerp", ["def"] = "goose."},
   [293] = {["word"] = "kerz", ["def"] = "activity. do (v)."},
   [294] = {["word"] = "kesp", ["def"] = "blade."},
   [295] = {["word"] = "kest", ["def"] = "ache."},
   [296] = {["word"] = "ketaer", ["def"] = "teach."},
   [297] = {["word"] = "ketaera", ["def"] = "teacher."},
   [298] = {["word"] = "kilk", ["def"] = "clean (adj)."},
   [299] = {["word"] = "kilkulp", ["def"] = "clean (v)."},
   [300] = {["word"] = "kindx", ["def"] = "industrious."},
   [301] = {["word"] = "kir", ["def"] = "soap."},
   [302] = {["word"] = "klais", ["def"] = "juice. squeeze."},
   [303] = {["word"] = "klar", ["def"] = "turn (to turn something (directional))."},
   [304] = {["word"] = "klarkeck", ["def"] = "turn (to turn oneself (directional))."},
   [305] = {["word"] = "klem", ["def"] = "strength. strong."},
   [306] = {["word"] = "kob", ["def"] = "still (as in 'even yet')."},
   [307] = {["word"] = "kod", ["def"] = "condition."},
   [308] = {["word"] = "kog", ["def"] = "valley."},
   [309] = {["word"] = "kol", ["def"] = "town."},
   [310] = {["word"] = "kolk", ["def"] = "stick (n)."},
   [311] = {["word"] = "kolm", ["def"] = "deserve (v)."},
   [312] = {["word"] = "koln", ["def"] = "eight."},
   [313] = {["word"] = "koln-tudi", ["def"] = "eighty."},
   [314] = {["word"] = "kops", ["def"] = "cut."},
   [315] = {["word"] = "kopsod", ["def"] = "harvest."},
   [316] = {["word"] = "kult", ["def"] = "appear (to appear; show up somewhere)."},
   [317] = {["word"] = "kun", ["def"] = "pride. proud."},
   [318] = {["word"] = "kund", ["def"] = "succeed (v)."},
   [319] = {["word"] = "kunx", ["def"] = "safe (n)."},
   [320] = {["word"] = "kunxlevi", ["def"] = "haven."},
   [321] = {["word"] = "kup", ["def"] = "voice."},
   [322] = {["word"] = "kur", ["def"] = "wall (n)."},
   [323] = {["word"] = "kuresespa", ["def"] = "window."},
   [324] = {["word"] = "kuz", ["def"] = "call (to be called). name."},
   [325] = {["word"] = "kveb", ["def"] = "shore."},
   [326] = {["word"] = "kvil", ["def"] = "human."},
   [327] = {["word"] = "lab", ["def"] = "sharp."},
   [328] = {["word"] = "lad", ["def"] = "empty (adj)."},
   [329] = {["word"] = "ladulp", ["def"] = "empty (v)."},
   [330] = {["word"] = "ladx", ["def"] = "still (unmoving)."},
   [331] = {["word"] = "laim", ["def"] = "morning. towel."},
   [332] = {["word"] = "laimp", ["def"] = "meet."},
   [333] = {["word"] = "lain", ["def"] = "language. tongue."},
   [334] = {["word"] = "lam", ["def"] = "nine."},
   [335] = {["word"] = "lam-tudi", ["def"] = "ninety."},
   [336] = {["word"] = "lang", ["def"] = "nose."},
   [337] = {["word"] = "lar", ["def"] = "road."},
   [338] = {["word"] = "larb", ["def"] = "poem."},
   [339] = {["word"] = "lark", ["def"] = "usual."},
   [340] = {["word"] = "larp", ["def"] = "step (of a stair; a step taken)."},
   [341] = {["word"] = "leb", ["def"] = "thirst."},
   [342] = {["word"] = "lec", ["def"] = "remove."},
   [343] = {["word"] = "lecet", ["def"] = "dead."},
   [344] = {["word"] = "lecetod", ["def"] = "die (v)."},
   [345] = {["word"] = "lecilkenusta", ["def"] = "feverish."},
   [346] = {["word"] = "ledrak", ["def"] = "powerful."},
   [347] = {["word"] = "ledut", ["def"] = "dangerous."},
   [348] = {["word"] = "ledutindx", ["def"] = "risky."},
   [349] = {["word"] = "lekeneforga", ["def"] = "hungry."},
   [350] = {["word"] = "lekeneforgataki", ["def"] = "gluttony."},
   [351] = {["word"] = "leleb", ["def"] = "thirsty."},
   [352] = {["word"] = "lemir", ["def"] = "person (n)."},
   [353] = {["word"] = "lemmevi", ["def"] = "there (positional (personal))."},
   [354] = {["word"] = "lemmevic", ["def"] = "there (positional (personal))."},
   [355] = {["word"] = "leng", ["def"] = "that (denoting a thing (positional); in pointing out)."},
   [356] = {["word"] = "lengevi", ["def"] = "there (positional (personal))."},
   [357] = {["word"] = "lengevic", ["def"] = "there (positional (personal))."},
   [358] = {["word"] = "lenilm", ["def"] = "healthy."},
   [359] = {["word"] = "lerg", ["def"] = "lake. pond."},
   [360] = {["word"] = "lesmiz", ["def"] = "faithful. honorable."},
   [361] = {["word"] = "lesp", ["def"] = "excellent."},
   [362] = {["word"] = "lesvilmindx", ["def"] = "fur (with fur; furry)."},
   [363] = {["word"] = "leyein", ["def"] = "icy."},
   [364] = {["word"] = "leyort", ["def"] = "peaceful. quiet (adj)."},
   [365] = {["word"] = "lifs", ["def"] = "arm. bet."},
   [366] = {["word"] = "lindxulp", ["def"] = "befriend."},
   [367] = {["word"] = "lirm", ["def"] = "pale (n)."},
   [368] = {["word"] = "lirmod", ["def"] = "pale (v)."},
   [369] = {["word"] = "lu'xeb", ["def"] = "desert (n)."},
   [370] = {["word"] = "lu-", ["def"] = "thing (prefix, denoting an object)."},
   [371] = {["word"] = "ludun", ["def"] = "ink."},
   [372] = {["word"] = "ludximesk", ["def"] = "plum (brandy)."},
   [373] = {["word"] = "luneilm", ["def"] = "medicine."},
   [374] = {["word"] = "lupur", ["def"] = "wheel."},
   [375] = {["word"] = "luseft", ["def"] = "cover (n). lid."},
   [376] = {["word"] = "lutcar", ["def"] = "letter."},
   [377] = {["word"] = "lutolt", ["def"] = "table."},
   [378] = {["word"] = "luyinilmulp", ["def"] = "poison."},
   [379] = {["word"] = "mad", ["def"] = "actual. person (in person)."},
   [380] = {["word"] = "mag", ["def"] = "worthy, worthiness."},
   [381] = {["word"] = "malar", ["def"] = "vain."},
   [382] = {["word"] = "malarsh", ["def"] = "vanity."},
   [383] = {["word"] = "man", ["def"] = "night."},
   [384] = {["word"] = "mar", ["def"] = "white."},
   [385] = {["word"] = "marb", ["def"] = "cost. price."},
   [386] = {["word"] = "mashar", ["def"] = "duck (fowl)."},
   [387] = {["word"] = "maz", ["def"] = "country. dominion. land (expanse of). realm. rule (v). state (government). territory."},
   [388] = {["word"] = "mazesemba", ["def"] = "map."},
   [389] = {["word"] = "medmazai", ["def"] = "manage."},
   [390] = {["word"] = "medx", ["def"] = "little. small."},
   [391] = {["word"] = "medxail", ["def"] = "tiny."},
   [392] = {["word"] = "medxod", ["def"] = "shrink (describing the act)."},
   [393] = {["word"] = "medxulp", ["def"] = "shrink (to shrink)."},
   [394] = {["word"] = "meif", ["def"] = "eat."},
   [395] = {["word"] = "meik", ["def"] = "represent (v)."},
   [396] = {["word"] = "meir", ["def"] = "long."},
   [397] = {["word"] = "mek", ["def"] = "smoke (n)."},
   [398] = {["word"] = "men", ["def"] = "kill."},
   [399] = {["word"] = "mer", ["def"] = "port."},
   [400] = {["word"] = "merb", ["def"] = "true."},
   [401] = {["word"] = "mev", ["def"] = "place (n)."},
   [402] = {["word"] = "mi", ["def"] = "and."},
   [403] = {["word"] = "mic", ["def"] = "together."},
   [404] = {["word"] = "mid", ["def"] = "bridge."},
   [405] = {["word"] = "mig", ["def"] = "stranger (n)."},
   [406] = {["word"] = "migim", ["def"] = "history."},
   [407] = {["word"] = "mil", ["def"] = "join (to join oneself to). marry."},
   [408] = {["word"] = "milb", ["def"] = "shell."},
   [409] = {["word"] = "mild", ["def"] = "vary (v)."},
   [410] = {["word"] = "milg", ["def"] = "wish (v)."},
   [411] = {["word"] = "mim", ["def"] = "blood. life. live (v)."},
   [412] = {["word"] = "mimfulk", ["def"] = "orange."},
   [413] = {["word"] = "mimtelm", ["def"] = "purple."},
   [414] = {["word"] = "minf", ["def"] = "sudden."},
   [415] = {["word"] = "mink", ["def"] = "honey."},
   [416] = {["word"] = "mint", ["def"] = "kiss."},
   [417] = {["word"] = "minz", ["def"] = "other."},
   [418] = {["word"] = "minzpod", ["def"] = "translate (v)."},
   [419] = {["word"] = "mir", ["def"] = "soul."},
   [420] = {["word"] = "mitaiz", ["def"] = "library (collection)."},
   [421] = {["word"] = "mod", ["def"] = "court (n). try (to try for a crime)."},
   [422] = {["word"] = "mog", ["def"] = "inside."},
   [423] = {["word"] = "mond", ["def"] = "seat."},
   [424] = {["word"] = "moux", ["def"] = "griffon."},
   [425] = {["word"] = "mudalg", ["def"] = "clothing."},
   [426] = {["word"] = "nain", ["def"] = "end (n). fall (of a regime). set (v). settle. sunset. west."},
   [427] = {["word"] = "narm", ["def"] = "forget."},
   [428] = {["word"] = "nart", ["def"] = "bed."},
   [429] = {["word"] = "nazulp", ["def"] = "raise (v)."},
   [430] = {["word"] = "neb", ["def"] = "palace."},
   [431] = {["word"] = "nebbezi", ["def"] = "sometime."},
   [432] = {["word"] = "ned", ["def"] = "any. one. some."},
   [433] = {["word"] = "nedmevi", ["def"] = "somewhere."},
   [434] = {["word"] = "nedo", ["def"] = "first."},
   [435] = {["word"] = "nedx", ["def"] = "sugar."},
   [436] = {["word"] = "nef", ["def"] = "laugh."},
   [437] = {["word"] = "neft", ["def"] = "yawn (v)."},
   [438] = {["word"] = "neg", ["def"] = "think. thought. year."},
   [439] = {["word"] = "negg", ["def"] = "someone."},
   [440] = {["word"] = "neggil", ["def"] = "pay (v)."},
   [441] = {["word"] = "neilm", ["def"] = "cure. heal."},
   [442] = {["word"] = "neit", ["def"] = "half."},
   [443] = {["word"] = "nek", ["def"] = "sad."},
   [444] = {["word"] = "nel", ["def"] = "watch (v)."},
   [445] = {["word"] = "nell", ["def"] = "always."},
   [446] = {["word"] = "nelm", ["def"] = "constant."},
   [447] = {["word"] = "nelt", ["def"] = "trunk (of a tree)."},
   [448] = {["word"] = "nem", ["def"] = "mother."},
   [449] = {["word"] = "nen", ["def"] = "eye."},
   [450] = {["word"] = "nend", ["def"] = "side."},
   [451] = {["word"] = "nenelusefta", ["def"] = "eyelid."},
   [452] = {["word"] = "nep", ["def"] = "safe (safety) (adj)."},
   [453] = {["word"] = "neps", ["def"] = "throw (v)."},
   [454] = {["word"] = "neshtar", ["def"] = "ambassador."},
   [455] = {["word"] = "nesk", ["def"] = "materials."},
   [456] = {["word"] = "nest", ["def"] = "forest."},
   [457] = {["word"] = "netinfi", ["def"] = "several."},
   [458] = {["word"] = "nev", ["def"] = "similar."},
   [459] = {["word"] = "nevu", ["def"] = "like (to favor)."},
   [460] = {["word"] = "nick", ["def"] = "beguiling (deceptively). siren (like a siren)."},
   [461] = {["word"] = "nifs", ["def"] = "admiration. admire."},
   [462] = {["word"] = "niks", ["def"] = "sandal."},
   [463] = {["word"] = "nilb", ["def"] = "street."},
   [464] = {["word"] = "nilbezic", ["def"] = "now."},
   [465] = {["word"] = "nild", ["def"] = "discuss."},
   [466] = {["word"] = "nilm", ["def"] = "health."},
   [467] = {["word"] = "nilod", ["def"] = "blush."},
   [468] = {["word"] = "nim", ["def"] = "red."},
   [469] = {["word"] = "nimir", ["def"] = "queen."},
   [470] = {["word"] = "nin", ["def"] = "daughter."},
   [471] = {["word"] = "nind", ["def"] = "presence. present (to be present)."},
   [472] = {["word"] = "ninf", ["def"] = "shoe."},
   [473] = {["word"] = "ning", ["def"] = "this."},
   [474] = {["word"] = "ningevaisac", ["def"] = "therefore."},
   [475] = {["word"] = "ningevi", ["def"] = "here."},
   [476] = {["word"] = "ningevic", ["def"] = "here."},
   [477] = {["word"] = "ningevil", ["def"] = "hither."},
   [478] = {["word"] = "ningevit", ["def"] = "hence."},
   [479] = {["word"] = "nink", ["def"] = "left (directional; sinistral)."},
   [480] = {["word"] = "ninkepi", ["def"] = "today."},
   [481] = {["word"] = "ninkepic", ["def"] = "today."},
   [482] = {["word"] = "nir", ["def"] = "son."},
   [483] = {["word"] = "nirk", ["def"] = "right (directional; dextral)."},
   [484] = {["word"] = "nis", ["def"] = "smell (v)."},
   [485] = {["word"] = "nit", ["def"] = "pierce."},
   [486] = {["word"] = "nod", ["def"] = "ocean. sea."},
   [487] = {["word"] = "nong", ["def"] = "burden."},
   [488] = {["word"] = "norb", ["def"] = "allow. permit."},
   [489] = {["word"] = "nord", ["def"] = "begin. start."},
   [490] = {["word"] = "norf", ["def"] = "ugly."},
   [491] = {["word"] = "nork", ["def"] = "warm."},
   [492] = {["word"] = "nost", ["def"] = "about (the area about something). around (the area around something)."},
   [493] = {["word"] = "nu'maz", ["def"] = "ruler. sovereign (a ruler)."},
   [494] = {["word"] = "nu-", ["def"] = "person (prefix denoting a person)."},
   [495] = {["word"] = "nudx", ["def"] = "explain."},
   [496] = {["word"] = "nularbulp", ["def"] = "poet."},
   [497] = {["word"] = "nulmod", ["def"] = "wake (v)."},
   [498] = {["word"] = "numil", ["def"] = "groom (at a wedding)."},
   [499] = {["word"] = "nuneilm", ["def"] = "doctor. healer. physician."},
   [500] = {["word"] = "nupoub", ["def"] = "berserker."},
   [501] = {["word"] = "nur", ["def"] = "worm."},
   [502] = {["word"] = "nurt", ["def"] = "above (the area above something)."},
   [503] = {["word"] = "nusnulail", ["def"] = "drunken (intoxicated)."},
   [504] = {["word"] = "nust", ["def"] = "heat. hot."},
   [505] = {["word"] = "nustindx", ["def"] = "warm."},
   [506] = {["word"] = "nutcid", ["def"] = "student."},
   [507] = {["word"] = "nyac", ["def"] = "deny (v)."},
   [508] = {["word"] = "nyarz", ["def"] = "difference."},
   [509] = {["word"] = "nyeb", ["def"] = "anarchy. chaos. disarray."},
   [510] = {["word"] = "nyeiz", ["def"] = "mountain."},
   [511] = {["word"] = "nyel", ["def"] = "heart."},
   [512] = {["word"] = "nyet", ["def"] = "esteem (n). esteemed (adj)."},
   [513] = {["word"] = "nyetulp", ["def"] = "esteem (v)."},
   [514] = {["word"] = "nyex", ["def"] = "believe."},
   [515] = {["word"] = "nyil", ["def"] = "field (uncultivated). meadow."},
   [516] = {["word"] = "nyiz", ["def"] = "high up."},
   [517] = {["word"] = "nyonk", ["def"] = "announce. announcement."},
   [518] = {["word"] = "nyor", ["def"] = "hand."},
   [519] = {["word"] = "pad", ["def"] = "slow."},
   [520] = {["word"] = "padishah", ["def"] = "king."},
   [521] = {["word"] = "pald", ["def"] = "god."},
   [522] = {["word"] = "palk", ["def"] = "child. sew (v)."},
   [523] = {["word"] = "pant", ["def"] = "egg."},
   [524] = {["word"] = "parb", ["def"] = "frequent. often."},
   [525] = {["word"] = "parn", ["def"] = "rose (flower)."},
   [526] = {["word"] = "pelg", ["def"] = "apple."},
   [527] = {["word"] = "pelgesk", ["def"] = "cider."},
   [528] = {["word"] = "peng", ["def"] = "next."},
   [529] = {["word"] = "penkepi", ["def"] = "tomorrow."},
   [530] = {["word"] = "penkepic", ["def"] = "tomorrow."},
   [531] = {["word"] = "pex", ["def"] = "borrow."},
   [532] = {["word"] = "pilf", ["def"] = "lend. loan."},
   [533] = {["word"] = "pim", ["def"] = "sit."},
   [534] = {["word"] = "pind", ["def"] = "rank. status."},
   [535] = {["word"] = "pink", ["def"] = "catch."},
   [536] = {["word"] = "plim", ["def"] = "swim (v)."},
   [537] = {["word"] = "pling", ["def"] = "tooth."},
   [538] = {["word"] = "plox", ["def"] = "tidy."},
   [539] = {["word"] = "pob", ["def"] = "broad."},
   [540] = {["word"] = "pod", ["def"] = "say (v)."},
   [541] = {["word"] = "pof", ["def"] = "strange."},
   [542] = {["word"] = "pok", ["def"] = "silver."},
   [543] = {["word"] = "pong", ["def"] = "hill."},
   [544] = {["word"] = "pont", ["def"] = "storm (n)."},
   [545] = {["word"] = "ponx", ["def"] = "deep."},
   [546] = {["word"] = "pord", ["def"] = "feel. feelings. touch (v)."},
   [547] = {["word"] = "porl", ["def"] = "money."},
   [548] = {["word"] = "pormefonga", ["def"] = "purse."},
   [549] = {["word"] = "pormou", ["def"] = "pay (v)."},
   [550] = {["word"] = "porp", ["def"] = "wash."},
   [551] = {["word"] = "poub", ["def"] = "wild (in manner)."},
   [552] = {["word"] = "poul", ["def"] = "crazed."},
   [553] = {["word"] = "poulg", ["def"] = "chance."},
   [554] = {["word"] = "pouz", ["def"] = "flesh. meat."},
   [555] = {["word"] = "pur", ["def"] = "circular. round."},
   [556] = {["word"] = "purdx", ["def"] = "ring (v)."},
   [557] = {["word"] = "purkesk", ["def"] = "ring (n)."},
   [558] = {["word"] = "rab", ["def"] = "smile (v)."},
   [559] = {["word"] = "raid", ["def"] = "bride."},
   [560] = {["word"] = "raig", ["def"] = "sack."},
   [561] = {["word"] = "rash", ["def"] = "gold."},
   [562] = {["word"] = "reil", ["def"] = "obtain. procure. receive (v)."},
   [563] = {["word"] = "reim", ["def"] = "get (v)."},
   [564] = {["word"] = "rel", ["def"] = "many."},
   [565] = {["word"] = "renggof", ["def"] = "horse."},
   [566] = {["word"] = "ril", ["def"] = "shine. shiny."},
   [567] = {["word"] = "ring", ["def"] = "origin. root. source."},
   [568] = {["word"] = "roup", ["def"] = "hurt (to feel bad). pain, painful."},
   [569] = {["word"] = "roupulp", ["def"] = "hurt (v)."},
   [570] = {["word"] = "saib", ["def"] = "fortune. luck."},
   [571] = {["word"] = "sandx", ["def"] = "hear."},
   [572] = {["word"] = "sank", ["def"] = "cake."},
   [573] = {["word"] = "sar", ["def"] = "south."},
   [574] = {["word"] = "sarb", ["def"] = "perform."},
   [575] = {["word"] = "sard", ["def"] = "write (v)."},
   [576] = {["word"] = "sazb", ["def"] = "fat."},
   [577] = {["word"] = "seft", ["def"] = "cover (v)."},
   [578] = {["word"] = "seftulp", ["def"] = "paint (v)."},
   [579] = {["word"] = "seftulpesk", ["def"] = "paint (n)."},
   [580] = {["word"] = "seil", ["def"] = "fountain."},
   [581] = {["word"] = "seis", ["def"] = "point (n)."},
   [582] = {["word"] = "seit", ["def"] = "sorry (to be sorry)."},
   [583] = {["word"] = "selb", ["def"] = "picture."},
   [584] = {["word"] = "sem", ["def"] = "three."},
   [585] = {["word"] = "sem-tudi", ["def"] = "thirty."},
   [586] = {["word"] = "semo", ["def"] = "third."},
   [587] = {["word"] = "sen", ["def"] = "strive (v)."},
   [588] = {["word"] = "serd", ["def"] = "wide."},
   [589] = {["word"] = "serdiz", ["def"] = "bear (animal, female)."},
   [590] = {["word"] = "serk", ["def"] = "escape."},
   [591] = {["word"] = "serkvix", ["def"] = "wolf (female)."},
   [592] = {["word"] = "serl", ["def"] = "regret."},
   [593] = {["word"] = "sernuvling", ["def"] = "servant (female)."},
   [594] = {["word"] = "serz", ["def"] = "look (to search). seek (v)."},
   [595] = {["word"] = "sesp", ["def"] = "hole."},
   [596] = {["word"] = "setpadi", ["def"] = "wither."},
   [597] = {["word"] = "shah", ["def"] = "governor (caste)."},
   [598] = {["word"] = "shias", ["def"] = "interest."},
   [599] = {["word"] = "sict", ["def"] = "choice. choose."},
   [600] = {["word"] = "sig", ["def"] = "fair (level in judgement). just, justice."},
   [601] = {["word"] = "silf", ["def"] = "dance."},
   [602] = {["word"] = "silm", ["def"] = "blonde. fair (aesthetic)."},
   [603] = {["word"] = "silp", ["def"] = "bewitch. enchant."},
   [604] = {["word"] = "silpesk", ["def"] = "spell (sorcery)."},
   [605] = {["word"] = "sint", ["def"] = "boy."},
   [606] = {["word"] = "sinx", ["def"] = "acquaintance (person)."},
   [607] = {["word"] = "siz", ["def"] = "only."},
   [608] = {["word"] = "slaf", ["def"] = "boring."},
   [609] = {["word"] = "slaik", ["def"] = "leather. skin."},
   [610] = {["word"] = "slan", ["def"] = "gray. offer (v)."},
   [611] = {["word"] = "sleb", ["def"] = "weather."},
   [612] = {["word"] = "sleif", ["def"] = "joke."},
   [613] = {["word"] = "slem", ["def"] = "wine."},
   [614] = {["word"] = "slib", ["def"] = "show (v)."},
   [615] = {["word"] = "smar", ["def"] = "velvet."},
   [616] = {["word"] = "smec", ["def"] = "sing."},
   [617] = {["word"] = "smenesk", ["def"] = "gift. pay (n). salary."},
   [618] = {["word"] = "smeniu", ["def"] = "pay (v)."},
   [619] = {["word"] = "smid", ["def"] = "use (v)."},
   [620] = {["word"] = "smiz", ["def"] = "faith. honest. honesty. honor."},
   [621] = {["word"] = "smod", ["def"] = "run (v)."},
   [622] = {["word"] = "snad", ["def"] = "board (of wood). plank."},
   [623] = {["word"] = "snic", ["def"] = "charm (n)."},
   [624] = {["word"] = "snil", ["def"] = "bring."},
   [625] = {["word"] = "sning", ["def"] = "buy."},
   [626] = {["word"] = "sningemeva", ["def"] = "market."},
   [627] = {["word"] = "snon", ["def"] = "command. order (command)."},
   [628] = {["word"] = "snos", ["def"] = "knife."},
   [629] = {["word"] = "snul", ["def"] = "drink (v)."},
   [630] = {["word"] = "sorb", ["def"] = "chain."},
   [631] = {["word"] = "sov", ["def"] = "husband."},
   [632] = {["word"] = "sul", ["def"] = "lock (as on a door or chest)."},
   [633] = {["word"] = "sulv", ["def"] = "bow (to bow)."},
   [634] = {["word"] = "sut", ["def"] = "castle. fortress."},
   [635] = {["word"] = "svang", ["def"] = "feather."},
   [636] = {["word"] = "svarb", ["def"] = "kerchief. scarf."},
   [637] = {["word"] = "sved", ["def"] = "alter (to alter something). change."},
   [638] = {["word"] = "sverkoli", ["def"] = "capital (city)."},
   [639] = {["word"] = "svilmesk", ["def"] = "fur (something made of)."},
   [640] = {["word"] = "svin", ["def"] = "wife."},
   [641] = {["word"] = "svir", ["def"] = "head. leader. main. principal."},
   [642] = {["word"] = "taf", ["def"] = "read."},
   [643] = {["word"] = "tahar", ["def"] = "angry. wrath."},
   [644] = {["word"] = "taig", ["def"] = "coffee (or tea)."},
   [645] = {["word"] = "tail", ["def"] = "beach."},
   [646] = {["word"] = "taiz", ["def"] = "book."},
   [647] = {["word"] = "taizetoula", ["def"] = "library (facility)."},
   [648] = {["word"] = "taki", ["def"] = "excess."},
   [649] = {["word"] = "talia", ["def"] = "brain."},
   [650] = {["word"] = "tand", ["def"] = "flaw."},
   [651] = {["word"] = "tar", ["def"] = "arrow."},
   [652] = {["word"] = "tark", ["def"] = "roll (v)."},
   [653] = {["word"] = "tashar", ["def"] = "hate."},
   [654] = {["word"] = "tats", ["def"] = "break."},
   [655] = {["word"] = "tcait", ["def"] = "need (v)."},
   [656] = {["word"] = "tcaiz", ["def"] = "tree."},
   [657] = {["word"] = "tcaizesk", ["def"] = "wood."},
   [658] = {["word"] = "tcand", ["def"] = "gang."},
   [659] = {["word"] = "tcank", ["def"] = "noise. sound (aural)."},
   [660] = {["word"] = "tcar", ["def"] = "send (v)."},
   [661] = {["word"] = "tceb", ["def"] = "hammer."},
   [662] = {["word"] = "tcerk", ["def"] = "sweet."},
   [663] = {["word"] = "tcez", ["def"] = "mean (to signify; definition). signify."},
   [664] = {["word"] = "tcid", ["def"] = "learn."},
   [665] = {["word"] = "tcob", ["def"] = "morph. turn (to transform)."},
   [666] = {["word"] = "tein", ["def"] = "cook (v)."},
   [667] = {["word"] = "teineleva", ["def"] = "kitchen."},
   [668] = {["word"] = "teit", ["def"] = "six."},
   [669] = {["word"] = "teit-tudi", ["def"] = "sixty."},
   [670] = {["word"] = "tel", ["def"] = "dream."},
   [671] = {["word"] = "telb", ["def"] = "steal (v). stolen."},
   [672] = {["word"] = "teld", ["def"] = "inherit (to be inherited by; inheritance). pass (v)."},
   [673] = {["word"] = "telk", ["def"] = "cease. stop (v)."},
   [674] = {["word"] = "telm", ["def"] = "blue."},
   [675] = {["word"] = "telp", ["def"] = "hit (v). strike (v)."},
   [676] = {["word"] = "tib", ["def"] = "pea."},
   [677] = {["word"] = "tinf", ["def"] = "count. number."},
   [678] = {["word"] = "tintc", ["def"] = "wild (untamed; undomesticated)."},
   [679] = {["word"] = "tisk", ["def"] = "short."},
   [680] = {["word"] = "tisp", ["def"] = "mind (brain) (n)."},
   [681] = {["word"] = "tispxev", ["def"] = "understand."},
   [682] = {["word"] = "tist", ["def"] = "weave (v)."},
   [683] = {["word"] = "todx", ["def"] = "guard (n)."},
   [684] = {["word"] = "todxod", ["def"] = "guard (v)."},
   [685] = {["word"] = "tok", ["def"] = "jump. leap."},
   [686] = {["word"] = "tokaf", ["def"] = "ready."},
   [687] = {["word"] = "tolt", ["def"] = "stand (v)."},
   [688] = {["word"] = "tolx", ["def"] = "sleepy. tired (adj). weary."},
   [689] = {["word"] = "tolxpadi", ["def"] = "sloth."},
   [690] = {["word"] = "torb", ["def"] = "family."},
   [691] = {["word"] = "tord", ["def"] = "wear (erosion)."},
   [692] = {["word"] = "tork", ["def"] = "move."},
   [693] = {["word"] = "torx", ["def"] = "blind."},
   [694] = {["word"] = "toudx", ["def"] = "room (a chamber)."},
   [695] = {["word"] = "toul", ["def"] = "house."},
   [696] = {["word"] = "traz", ["def"] = "basket."},
   [697] = {["word"] = "trid", ["def"] = "urge (v)."},
   [698] = {["word"] = "triz", ["def"] = "swan."},
   [699] = {["word"] = "tud", ["def"] = "ten."},
   [700] = {["word"] = "tuliailkoln", ["def"] = "xix."},
   [701] = {["word"] = "tuligong", ["def"] = "fifteen."},
   [702] = {["word"] = "tulikarp", ["def"] = "fourteen."},
   [703] = {["word"] = "tulikoln", ["def"] = "eighteen."},
   [704] = {["word"] = "tulilam", ["def"] = "nineteen."},
   [705] = {["word"] = "tulined", ["def"] = "eleven."},
   [706] = {["word"] = "tumideg", ["def"] = "twelve."},
   [707] = {["word"] = "tumidxem", ["def"] = "seventeen."},
   [708] = {["word"] = "tumisem", ["def"] = "thirteen."},
   [709] = {["word"] = "tumiteit", ["def"] = "sixteen."},
   [710] = {["word"] = "tur", ["def"] = "tail."},
   [711] = {["word"] = "vaic", ["def"] = "complete. entire. whole."},
   [712] = {["word"] = "vaif", ["def"] = "harm (n)."},
   [713] = {["word"] = "vaifulp", ["def"] = "harm (v)."},
   [714] = {["word"] = "vais", ["def"] = "purpose. reason (n)."},
   [715] = {["word"] = "vang", ["def"] = "narrow."},
   [716] = {["word"] = "varb", ["def"] = "make."},
   [717] = {["word"] = "varg", ["def"] = "inform. tell (to inform)."},
   [718] = {["word"] = "vars", ["def"] = "ride (v)."},
   [719] = {["word"] = "varx", ["def"] = "mood."},
   [720] = {["word"] = "veb", ["def"] = "add (v)."},
   [721] = {["word"] = "ved", ["def"] = "post (station; guard). station."},
   [722] = {["word"] = "veda", ["def"] = "free, freedom."},
   [723] = {["word"] = "vedka", ["def"] = "snake."},
   [724] = {["word"] = "veg", ["def"] = "interrupt."},
   [725] = {["word"] = "veir", ["def"] = "possible."},
   [726] = {["word"] = "vest", ["def"] = "build."},
   [727] = {["word"] = "vic", ["def"] = "all. every."},
   [728] = {["word"] = "vilg", ["def"] = "satin."},
   [729] = {["word"] = "vind", ["def"] = "wear (to wear a garment)."},
   [730] = {["word"] = "visk", ["def"] = "roast (v)."},
   [731] = {["word"] = "vist", ["def"] = "real."},
   [732] = {["word"] = "vlan", ["def"] = "enter. entrance."},
   [733] = {["word"] = "vleim", ["def"] = "leg."},
   [734] = {["word"] = "vleix", ["def"] = "hope."},
   [735] = {["word"] = "vling", ["def"] = "serve (v)."},
   [736] = {["word"] = "vlingpormi", ["def"] = "tip (n)."},
   [737] = {["word"] = "vlod", ["def"] = "same."},
   [738] = {["word"] = "vlop", ["def"] = "report (v)."},
   [739] = {["word"] = "vlor", ["def"] = "north."},
   [740] = {["word"] = "vob", ["def"] = "look (to look at)."},
   [741] = {["word"] = "vond", ["def"] = "boat."},
   [742] = {["word"] = "vong", ["def"] = "bell."},
   [743] = {["word"] = "vour", ["def"] = "cause."},
   [744] = {["word"] = "vrim", ["def"] = "intend."},
   [745] = {["word"] = "vrin", ["def"] = "dig (v)."},
   [746] = {["word"] = "vulb", ["def"] = "depart (v). leave (depart)."},
   [747] = {["word"] = "vulm", ["def"] = "cloud."},
   [748] = {["word"] = "vur", ["def"] = "highest. supreme."},
   [749] = {["word"] = "xac", ["def"] = "know."},
   [750] = {["word"] = "xaid", ["def"] = "arrive."},
   [751] = {["word"] = "xeb", ["def"] = "desert (n). dry."},
   [752] = {["word"] = "xel", ["def"] = "surrender."},
   [753] = {["word"] = "xem", ["def"] = "exchange. give (to give up)."},
   [754] = {["word"] = "xen", ["def"] = "mouth."},
   [755] = {["word"] = "xer", ["def"] = "bear (to bear a child)."},
   [756] = {["word"] = "xev", ["def"] = "see (v). sight."},
   [757] = {["word"] = "xevkt", ["def"] = "seem (appearance)."},
   [758] = {["word"] = "xid", ["def"] = "speak (v)."},
   [759] = {["word"] = "xig", ["def"] = "shop (n)."},
   [760] = {["word"] = "xin", ["def"] = "star."},
   [761] = {["word"] = "xink", ["def"] = "mention."},
   [762] = {["word"] = "xird", ["def"] = "man."},
   [763] = {["word"] = "xor", ["def"] = "foot."},
   [764] = {["word"] = "xour", ["def"] = "walk (v)."},
   [765] = {["word"] = "xoz", ["def"] = "talon."},
   [766] = {["word"] = "yair", ["def"] = "gratitude."},
   [767] = {["word"] = "yarb", ["def"] = "ashamed."},
   [768] = {["word"] = "yarg", ["def"] = "damp."},
   [769] = {["word"] = "yarl", ["def"] = "absolve. pardon."},
   [770] = {["word"] = "yarm", ["def"] = "forgive."},
   [771] = {["word"] = "yarp", ["def"] = "hold (v)."},
   [772] = {["word"] = "yedx", ["def"] = "law."},
   [773] = {["word"] = "yein", ["def"] = "ice."},
   [774] = {["word"] = "yenz", ["def"] = "introduce."},
   [775] = {["word"] = "yep", ["def"] = "soon."},
   [776] = {["word"] = "yicak", ["def"] = "bald."},
   [777] = {["word"] = "yiderulp", ["def"] = "behead."},
   [778] = {["word"] = "yidxil", ["def"] = "dirty (figuratively). impure."},
   [779] = {["word"] = "yikindx", ["def"] = "lazy."},
   [780] = {["word"] = "yiklem", ["def"] = "weak."},
   [781] = {["word"] = "yin", ["def"] = "come."},
   [782] = {["word"] = "yinf", ["def"] = "boil (to boil)."},
   [783] = {["word"] = "yinilm", ["def"] = "disease. ill. illness."},
   [784] = {["word"] = "yinilmod", ["def"] = "sick, sickness (to become sick)."},
   [785] = {["word"] = "yink", ["def"] = "point (v)."},
   [786] = {["word"] = "yiril", ["def"] = "dull (lustre)."},
   [787] = {["word"] = "yirm", ["def"] = "open (v)."},
   [788] = {["word"] = "yirn", ["def"] = "soft."},
   [789] = {["word"] = "yisandx", ["def"] = "deaf."},
   [790] = {["word"] = "yisvilm", ["def"] = "fur (is made of)."},
   [791] = {["word"] = "yitand", ["def"] = "flawless. perfect."},
   [792] = {["word"] = "yitcank", ["def"] = "quiet (n). silent."},
   [793] = {["word"] = "yiveir", ["def"] = "impossible."},
   [794] = {["word"] = "yixev", ["def"] = "blind."},
   [795] = {["word"] = "yixour", ["def"] = "lame."},
   [796] = {["word"] = "yixourulp", ["def"] = "maim."},
   [797] = {["word"] = "yizdoc", ["def"] = "example (for example)."},
   [798] = {["word"] = "yob", ["def"] = "wind (n)."},
   [799] = {["word"] = "yolc", ["def"] = "difficult."},
   [800] = {["word"] = "yolm", ["def"] = "distant. far."},
   [801] = {["word"] = "yonk", ["def"] = "alter (v)."},
   [802] = {["word"] = "yonk. to change something", ["def"] = "change."},
   [803] = {["word"] = "yont", ["def"] = "early."},
   [804] = {["word"] = "yontkepi", ["def"] = "forenoon. morning."},
   [805] = {["word"] = "yorb", ["def"] = "amuse. entertain."},
   [806] = {["word"] = "yorn", ["def"] = "mistake."},
   [807] = {["word"] = "yort", ["def"] = "peace."},
   [808] = {["word"] = "yulp", ["def"] = "bath, bathe."},
   [809] = {["word"] = "yult", ["def"] = "amazed."},
   [810] = {["word"] = "zal", ["def"] = "shadow."},
   [811] = {["word"] = "zalb", ["def"] = "host."},
   [812] = {["word"] = "zarp", ["def"] = "color."},
   [813] = {["word"] = "zat", ["def"] = "result (n)."},
   [814] = {["word"] = "zatod", ["def"] = "result (v)."},
   [815] = {["word"] = "zeilp", ["def"] = "garden."},
   [816] = {["word"] = "zeilpesk", ["def"] = "vegetable."},
   [817] = {["word"] = "zeir", ["def"] = "search."},
   [818] = {["word"] = "zelb", ["def"] = "liver."},
   [819] = {["word"] = "zelm", ["def"] = "clever."},
   [820] = {["word"] = "zert", ["def"] = "key."},
   [821] = {["word"] = "zilt", ["def"] = "new."},
   [822] = {["word"] = "zimp", ["def"] = "salt."},
   [823] = {["word"] = "zind", ["def"] = "leaf. letter."},
   [824] = {["word"] = "zink", ["def"] = "lie (to tell an untruth; to lie down)."},
   [825] = {["word"] = "zinkesk", ["def"] = "lie (n)."},
   [826] = {["word"] = "zint", ["def"] = "bean."},
   [827] = {["word"] = "zorb", ["def"] = "sparkle (v)."},
   [828] = {["word"] = "zord", ["def"] = "bad."},
   [829] = {["word"] = "zun", ["def"] = "bread. loaf (of bread)."},
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>API</name>
					<packageName></packageName>
					<script>function vk.MakeReverseDefinition(entry)
	local word = vk.dictionary[entry].word
	local def = vk.dictionary[entry].def

	if def:sub(-1) ~= "." then def = def .. "." end

	local output = {}

	local s = def:gsub("%(([%w%s,;%:'%(%)]+)%) ([%w%s,'%-]+)%.", function (a, b)
		-- Multiple Ve'kahian words defined?
		if b:find(",") ~= nil then
			local wordlist = b:split(",")
			for i,v in ipairs(wordlist) do
				local w = v:trim()

				output[#output + 1] = {["word"] = w, ["def"] = word .. " (" .. a .. ")."}
			end
		else
			-- Just one.
			output[#output + 1] = {["word"] = b, ["def"] = word .. " (" .. a .. ")."}
			return ""
		end
	end)

	if table.size(output) &lt; 1 then
		-- Normal definition, no clarifiers.
		if word:sub(-1) ~= "." then
			word = word .. "."
		end

		-- Multiple Ve'kahian words found?
		if def:find(",") ~= nil then
			local wordlist = def:split(",")
			for i,v in ipairs(wordlist) do
				local w = v:trim()
				if w:sub(-1) == "." then
					w = w:sub(1, -2)
				end

				output[#output + 1] = {["word"] = w, ["def"] = word}
			end
		else
			if def:sub(-1) == "." then
				def = def:sub(1, -2)
			end

			output = {
				{["word"] = def, ["def"] = word}
			}
		end
	end

	return output
end

function vk.AddToReverseDictionary(entry)
	local parse = vk.MakeReverseDefinition(entry)
	local def_output = {}

	if parse == nil then
		return
	end

	for i, v in ipairs(parse) do
		local word = parse[i].word
		local def = parse[i].def

		if not vk.r_dictionary[word] then
			vk.r_dictionary[word] = def
		else
			vk.r_dictionary[word] = vk.r_dictionary[word] .. " " .. def
		end
	end
end

function vk.SortDictionary(myTable)
    local t = {}
    for word, def in pairsByKeys(myTable) do
        table.insert(t, {word = word, def = def})
    end
    myTable = t
    return myTable
end

function vk.MakeReverseDictionary()
	local time = os.clock()
	display("\nMaking reverse dictionary.")
	vk.r_dictionary = {}

	for i = 1, #vk.dictionary do
		vk.AddToReverseDictionary(i)
	end

	vk.r_dictionary = vk.SortDictionary(vk.r_dictionary)

	local newtime = os.clock() - time
	display("Reverse dictionary complete. Time took: " .. newtime .. "s.")
end

function vk.DisplayWord(i, reverse)
	if reverse ~= nil then reverse = true end

	local word, def
	if reverse == true then
		word = vk.r_dictionary[i].word
		def = vk.r_dictionary[i].def
	else
		word = vk.dictionary[i].word
		def = vk.dictionary[i].def
	end

	-- Add a period if there isn't one already.
	if not def:match("[%.%(%)]$") then
		def = def .. "."
	end

	-- Parse def and break the word into newlines if additional definitions
	-- or clauses are supplied.

	local count = 1
	def = def:gsub("%((%w)", function (a)
		local lbreak = ""
		if count ~= 1 then
			lbreak = "\n" .. string.space(22)
		end
		count = count + 1

		return lbreak .. "(" .. a
	end)

	echo("\n" .. word .. string.space(21 - word:len()) .. " " .. def)
end

function vk.ShowDictionary(reverse)
	if reverse ~= nil then
		for i = 1, #vk.r_dictionary do
			vk.DisplayWord(i, true)
		end
	else
		for i = 1, #vk.dictionary do
			vk.DisplayWord(i)
		end
	end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Blumenkranz</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>--[[

	Blumenkranz, for Aetolia, the Midnight Age.

	This module is written for Mudlet 2.1. It is not guaranteed to work
	with other versions of the client.

	A roleplaying module for vampires that inspires murderous frenzy,
	greedy lust, and lordly ambition.

	(c) Alexander Divine, April 22nd, 2014.

]]--

BK = BK or {}

BK.name = "Blumenkranz"
BK.author = "Lin"
BK.version = "0.1"
BK.description = "The rapture of blood."</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>API</name>
					<packageName></packageName>
					<script>-- Needed tasks:
--
--   Create random effects list
--   Create a UI
--   Create influences:
--     Time of day
--     Level of blood reserves
--     Usage of blood reserves
--     Recently seen players
--     Trigger words in various channels
--     Bleeding damage
--   Influence management timers
--   Create 'whims'
--   Player controls:
--     Volatility: How susceptible the player is to rapid change of whims.
--     

-- Additions to the Mudlet color table.
color_table.a_darkred = {128, 0, 0}
color_table.a_red = {255, 0, 0}
color_table.dead_red = {51, 0, 0}

-- Months with their associated names and influences.
local months = {
	["Variach"] = {},
	["Severin"] = {},
	["Ios"] = {},
	["Arios"] = {},
	["Chakros"] = {},
	["Khepary"] = {},
	["Midsummer"] = {},
	["Lleian"] = {},
	["Lanosian"] = {},
	["Niuran"] = {},
	["Slyphian"] = {},
	["Haernos"] = {},
}

BK.GetSeason = function ()
	if BK.Day == nil or BK.Day == 0 or BK.Month == nil or BK.Month == "Unknown" or BK.Year == nil or BK.Year == 0 then
		return "unknown"
	end

	local d = tonumber(BK.Day)
	local m = BK.Month

	if m == "Variach" or m == "Severin" or (m == "Haernos" and d &gt;= 10) or (m == "Ios" and d &lt;= 9) then
		return "winter"
	elseif m == "Arios" or m == "Chakros" or (m == "Ios" and d &gt;= 10) or (m == "Khepary" and d &lt;= 9) then
		return "spring"
	elseif m == "Midsummer" or m == "Lleian" or (m == "Khepary" and d &gt;= 10) or (m == "Lanosian" and d &lt;= 9) then
		return "summer"
	else
		return "autumn"
	end
end

local effects = {
}

BK.GetEffect = function (n)
	if n == "rand" or n == "random" or n == "r" then
		n = math.random(#effects)
	end

	if type(n) ~= "number" then
		error("BH.GetEffect() expects a number; passed a " .. type(n) .. ".")
		return
	elseif not effects[n] then
		error("BH.GetEffect() tried to pull an invalid effect from its list.")
		return
	end

	if type(effects[n]) == "function" then
		return effects[n]()
	else
		return effects[n]
	end
end

BK.Notify = function (msg, skip_prompt)
	local output = "&lt;slate_grey,dead_red&gt;" .. msg
	output = output:gsub("#([a-zA-Z0-9\-\'\"]+)", "&lt;white,dead_red&gt;%1&lt;slate_grey,dead_red&gt;")
	output = "\n&lt;a_red,dead_red&gt;[ " .. output .. "&lt;a_red,dead_red&gt; ]"
	cecho(output)

	if skip_prompt ~= false then
		send("\n")
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>BlumenkranzPollGMCP</name>
					<packageName></packageName>
					<script>local pollVitals = function ()
end

local pollChannel = function ()
end

local pollPlayers = function ()
end

local pollRoom = function ()
end

BlumenkranzPollGMCP = function (e, ...)
	-- A stupid name for a function, but polluting someone else's
	-- namespace should be virtually impossible this way.
	if e == "gmcp.Char.Vitals" then
		pollVitals(...)
	elseif e == "gmcp.Comm.Channel.Players" then
		pollChannel(...)
	elseif e == "gmcp.Room.Players" then
		pollPlayers(...)
	elseif e == "gmcp.Room.Info" then
		pollRoom(...)
	end
end</script>
					<eventHandlerList>
						<string>gmcp.Char.Vitals</string>
						<string>gmcp.Comm.Channel.Players</string>
						<string>gmcp.Room.Players</string>
						<string>gmcp.Room.Info</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Influences</name>
					<packageName></packageName>
					<script>-- Influences:
--   Lust
--   Greed
--   Power</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Syssin Code</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Translator Library</name>
					<packageName></packageName>
					<script>local translator = {
	[" "] = " ",
	["!"] = "-",
	["'"] = "k",
	["+"] = "+",
	[","] = "p",
	["-"] = "-",
	["."] = ".",
	[":"] = "g",
	["?"] = "a",
	["A"] = "w",
	["B"] = "c",
	["C"] = "E",
	["D"] = "J",
	["E"] = "X",
	["F"] = "K",
	["G"] = "L",
	["H"] = "H",
	["I"] = "S",
	["J"] = "N",
	["K"] = "o",
	["L"] = "P",
	["M"] = "A",
	["N"] = "B",
	["O"] = "R",
	["P"] = "t",
	["R"] = "W",
	["S"] = "I",
	["T"] = "v",
	["U"] = "T",
	["V"] = "D",
	["W"] = "Y",
	["X"] = "F",
	["Y"] = "U",
	["Z"] = "G",
	["a"] = "H",
	["b"] = "C",
	["c"] = ".",
	["d"] = "j",
	["e"] = "x",
	["f"] = "'",
	["g"] = "l",
	["h"] = "m",
	["i"] = "s",
	["j"] = "n",
	["k"] = "o",
	["l"] = ",",
	["m"] = "?",
	["n"] = "b",
	["o"] = "r",
	["q"] = "z",
	["r"] = "h",
	["s"] = "i",
	["t"] = "V",
	["u"] = "e",
	["v"] = "d",
	["w"] = "y",
	["x"] = "f",
	["y"] = "u",
	["z"] = "q",
}

local r_translator = {}
for k, v in pairs(translator) do
	r_translator[v] = k
end

function syssinTranslate(s)
	local translation = ""

	if s:sub(1) == "+" then
		s = s:sub(2, -1)
	end

	if s:sub(-1) == "." then
		s = s:sub(1, -2)
	end

	s:gsub("(.)", function (a)
		a = translator[a] or "*"
		translation = translation .. a
	end)

	return(translation)
end

function syssinEncode(s)
	local translation = ""

	s:gsub("(.)", function (a)
		a = r_translator[a] or a
		translation = translation .. a
	end)

	if translation:sub(1) ~= "+" then
		translation = "+" .. translation
	end

	return(translation)
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Ciphers</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Pontifex</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Script</name>
						<packageName></packageName>
						<script>-- Implementation of the Pontifex keystream cipher, as referenced by Neal
-- Stephenson's "Cryptonomicon." It's your classic Solitaire cipher, based
-- on an abstract deck of playing cards.

pfx = pfx or {}

pfx.chars = {
	[1]  = "A",  [2] = "B",  [3] = "C",  [4] = "D",  [5] = "E",
	[6]  = "F",  [7] = "G",  [8] = "H",  [9] = "I", [10] = "J",
	[11] = "K", [12] = "L", [13] = "M", [14] = "N", [15] = "O",
	[16] = "P", [17] = "Q", [18] = "R", [19] = "S", [20] = "T",
	[21] = "U", [22] = "V", [23] = "W", [24] = "X", [25] = "Y",
	[26] = "Z",
}

pfx.r_chars = {}
for i, c in ipairs(pfx.chars) do
	pfx.r_chars[c] = i
end

pfx.generateNewDeck = function ()
	-- Simple means of shuffling the deck.
	-- Since this is entirely random, we don't need to do any Joker-cutting nonsense.

	local d = pfx.deck

	return table.shuffle(d)
end

pfx.deck = {
	 [1] = "SA",   [2] = "S2",   [3] = "S3",   [4] = "S4",
	 [5] = "S5",   [6] = "S6",   [7] = "S7",   [8] = "S8",
	 [9] = "S9",  [10] = "S10", [11] = "SJ",  [12] = "SQ",
	[13] = "SK",  [14] = "HA",  [15] = "H2",  [16] = "H3",
	[17] = "H4",  [18] = "H5",  [19] = "H6",  [20] = "H7",
	[21] = "H8",  [22] = "H9",  [23] = "H10", [24] = "HJ",
	[25] = "HQ",  [26] = "HK",  [27] = "CA",  [28] = "C2",
	[29] = "C3",  [30] = "C4",  [31] = "C5",  [32] = "C6",
	[33] = "C7",  [34] = "C8",  [35] = "C9",  [36] = "C10",
	[37] = "CJ",  [38] = "CQ",  [39] = "CK",  [40] = "DA",
	[41] = "D2",  [42] = "D3",  [43] = "D4",  [44] = "D5",
	[45] = "D6",  [46] = "D7",  [47] = "D8",  [48] = "D9",
	[49] = "D10", [50] = "DJ",  [51] = "DQ",  [52] = "DK",
}

pfx.r_deck = {}
for i, c in ipairs(pfx.deck) do
	pfx.r_deck[c] = i
end

pfx.my_deck = pfx.my_deck or pfx.generateNewDeck()

pfx.sanitize = function (s)
	s = tostring(s)

	-- Make uppercase.
	s = s:upper()

	-- Strip punctuation.
	s = s:gsub("[^%w%s%d]", "")

	return s
end

pfx.encrypt = function (s, shuffle)
	if shuffle == true then
		pfx.my_deck = pfx.generateNewDeck()
	end

	-- Duplicate my deck. Don't link it, that does weird stuff!
	local deck = {}
	for i, v in ipairs(pfx.my_deck) do
		deck[i] = v
	end

	s = pfx.sanitize(s)

	s = s:gsub("(%w)", function (a)
		local card = table.remove(deck, 1)
		card = pfx.r_deck[card]

		-- Convert each character to its numeric value.
		a = pfx.r_chars[a]

		print("card = " .. card .. ". a = " .. a)

		a = (card + a) % 26

		return a
	end)

	return s
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Jeremiah</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Script</name>
						<packageName></packageName>
						<script>-- The Jeremiah Cipher, by Lin.

jfx = jfx or {}

jfx.chars = {
	[1] = "!", [2] = "\"", [3] = "#", [4] = "$", [5] = "%",
	[6] = "&amp;", [7] = "'", [8] = "(", [9] = ")", [10] = "*",
	[11] = "+", [12] = ",", [13] = "-", [14] = ".", [15] = "/",
	[16] = "0", [17] = "1", [18] = "2", [19] = "3", [20] = "4",
	[21] = "5", [22] = "6", [23] = "7", [24] = "8", [25] = "9",
	[26] = ":", [27] = ";", [28] = "&lt;", [29] = "=", [30] = "&gt;",
	[31] = "?", [32] = "@", [33] = "A", [34] = "B", [35] = "C",
	[36] = "D", [37] = "E", [38] = "F", [39] = "G", [40] = "H",
	[41] = "I", [42] = "J", [43] = "K", [44] = "L", [45] = "M",
	[46] = "N", [47] = "O", [48] = "P", [49] = "Q", [50] = "R",
	[51] = "S", [52] = "T", [53] = "U", [54] = "V", [55] = "W",
	[56] = "X", [57] = "Y", [58] = "Z", [59] = "[", [60] = "\\",
	[61] = "]", [62] = "^", [63] = "_", [64] = "`", [65] = "a",
	[66] = "b", [67] = "c", [68] = "d", [69] = "e", [70] = "f",
	[71] = "g", [72] = "h", [73] = "i", [74] = "j", [75] = "k",
	[76] = "l", [77] = "m", [78] = "n", [79] = "o", [80] = "p",
	[81] = "q", [82] = "r", [83] = "s", [84] = "t", [85] = "u",
	[86] = "v", [87] = "w", [88] = "x", [89] = "y", [90] = "z",
	[91] = "{", [92] = "|", [93] = "}", [94] = "~", [95] = " ",
}

jfx.r_chars = {}
for i, c in ipairs(jfx.chars) do
	jfx.r_chars[c] = i
end

jfx.sanitize = function (str)
	str = tostring(str)

	-- Strip unknown characters.
	str = str:gsub("(.)", function (a)
		if not jfx.r_chars[a] then
			return ""
		end

		return a
	end)

	return str
end

jfx.rotate = function (str, key)
	local x, i, key_table

	if str == nil or str == "" then return end
	if key == nil then key = "" end

	key_table = {}
	if key:len() &gt; 0 then
		key = jfx.sanitize(key)

		key = key:gsub("(.)", function (a)
			key_table[#key_table + 1] = jfx.r_chars[a]

			return a
		end)
	end

	i = 1
	x = str:len() + key:len()
	str = str:gsub("(.)", function (a)
		local b

		b = jfx.r_chars[a]
		b = b + x
		if #key_table &gt; 0 then
			b = b - key_table[i]
		end

		if b &lt; 1 then
			b = #jfx.chars + b
		elseif b &gt; #jfx.chars then
			b = b - #jfx.chars
		end

		i = i + 1

		if i &gt; key:len() then
			i = 1
		end

		return jfx.chars[b]
	end)

	return str
end

jfx.derotate = function (str, key)
	local x, i, key_table

	if str == nil or str == "" then return end
	if key == nil then key = "" end

	key_table = {}
	if key:len() &gt; 0 then
		key = jfx.sanitize(key)

		key = key:gsub("(.)", function (a)
			key_table[#key_table + 1] = jfx.r_chars[a]

			return a
		end)
	end

	i = 1
	x = str:len() + key:len()
	str = str:gsub("(.)", function (a)
		local b

		b = jfx.r_chars[a]
		if #key_table &gt; 0 then
			b = b + key_table[i]
		end
		b = b - x
		if b &lt; 1 then
			b = #jfx.chars + b
		elseif b &gt; #jfx.chars then
			b = b - #jfx.chars
		end

		i = i + 1

		if i &gt; key:len() then
			i = 1
		end

		return jfx.chars[b]
	end)

	return str
end

jfx.encode = function (str, key)
	if key == nil then
		key = ""
	end

	str = jfx.sanitize(str)
	str = jfx.rotate(str, key)

	return str
end

jfx.decode = function (str, key)
	if key == nil then
		key = ""
	end

	str = jfx.derotate(str, key)

	return str
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Chumhandle Generator</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>--[[

	Chumnandle Generator, for Aetolia, the Midnight Age.

	This module is written for Mudlet 3.0.0-delta. It is not guaranteed to work
	with other versions of the client.

	(c) Alexander Divine, November 25th, 2016.

	(Note: This is designed for Aetolia but there's no reason it shouldn't
	 work for other IRE games, or even other text games entirely.)

]]--

chg = chg or {}

chg.name = "Chumhandle Generator"
chg.author = "Lin"
chg.version = "0.1"
chg.description = "Creates silly chumhandles, like the ones from Homestuck."</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Module</name>
					<packageName></packageName>
					<script>local handlePrefixes = {
	-- Homestuck prefixes.
	"ecto", "ghosty", "tentacle", "turntech", "garden", "gutsy", "tipsy", "timaeus", "golgothas",
	"apocalypse", "adios", "twin", "carcino", "arsenic", "grim", "gallows", "arachnids", "centaurs",
	"terminally", "caligulas", "cuttlefish", "uranian", "undying",

	-- Custom prefixes.
	"notorious", "fates", "unusual", "cheeky", "terminal", "reactive", "homosexual", "haunted",
	"immortal", "vicarious", "vicious", "violent", "magical", "macro", "automatic", "aberrant",
	"arise", "torn", "outlaw", "chronic", "amusing", "sly", "goth", "arthropod", "caballus",
	"casanova", "tyrannical", "crawfish", "zoom", "zip", "odious", "toxic", "noxious", "joyful",
	"mourning", "opeth", "osiris", "xanadu", "mechanic", "steam", "electric", "electronic", "cyber",
	"worldwide", "global", "continental", "galactic", "timely", "extreme", "cool", "dope", "rad",
	"phat", "possible", "professed", "proscribed", "double", "funky", "musical", "unearthly",
	"erstwhile", "winters", "ringing", "vale", "lordly", "kingly", "queenly", "damaged", "standing",
	"rising", "sitting", "walking", "running", "stepping", "timely", "crazy", "effortless", "temporary",
	"special", "vishnu", "krishna", "amaterasu", "buddha", "buddhist",
}

local handleSuffixes = {
	-- Homestuck suffixes.
	"Biologist", "Trickster", "Therapist", "Godhead", "Gnostic", "Gumshoe", "Gnostalgic", "Testified",
	"Terror", "Arisen", "Toreador", "Armageddons", "Geneticist", "Catnip", "Auxiliatrix", "Calibrator",
	"Grip", "Testicle", "Capricious", "Aquarium", "Culler",

	-- Custom suffixes.
	"Theory", "Lasers", "Notation", "Squid", "Atlantean", "Visionary", "Beacon", "Catalyst", "Narrator",
	"Gunslinger", "Runner", "Extremist", "Militant", "Revolutionary", "Slave", "Master", "Profaned",
	"Naiad", "Sprinter", "Leaper", "Indomitable", "Cosmic", "Fist", "Sword", "Technocrat", "Razor",
	"Big", "Monkey", "Hacked", "Laughter", "Chemical", "Advocate", "House", "Technique", "Tool", "Attack",
	"Outlook", "Girl", "Boy", "Cosm", "Revolver", "Behavior", "Awakened", "Outlaw", "Dank", "Duck",
	"Comedy", "Cicero", "Visible", "Scorpion", "Constellation", "Casino", "Dictator", "Festival",
	"Function", "Line", "Aroma", "Wasted", "Fumes", "Noise", "Glorious", "Goddess", "God", "Garden",
	"Dome", "Engine", "Machination", "Machine", "Powered", "Furnace", "Space", "Notoriety", "Agenda",
	"Breakfast", "Blaster", "Event", "Reaction", "Spot", "Rhymes", "Tricks", "Loot", "Tower", "Loving",
	"Cabal", "Cult", "Mason", "Blanco", "Negro", "Music", "Numbers", "Desire", "Memories", "Raging",
	"Vale", "Lore", "Caliber", "Decree", "Edict", "Vehicle", "Rock", "Dragon", "Bull", "Man", "Woman",
	"Fella", "Razor", "Sunrise", "Cloak", "Uncontested", "Incomplete", "Complete", "Senator", "Chieftain",
	"President", "Crackpot", "Theoretical", "Hypothetical", "Claws"
}

local classes = {
	-- Homestuck classes.
	"Rogue", "Thief", "Heir", "Maid", "Page", "Knight", "Seer", "Mage", "Sylph", "Witch", "Bard", "Prince",
	"Muse", "Lord",

	-- Custom classes.
	"Sheriff", "Constable", "Thug", "Mercenary", "Brigand", "Executioner", "Judge", "Clerk", "Master",
	"Runner", "Herald", "Jailor", "Eunuch", "Sultan", "Vizier", "MC", "DJ", "Lyricist", "Star", "Wrestler",
	"Baller", "Progenitor", "Agent", "Slayer", "Cutthroat", "Pirate", "Corsair", "Puppeteer", "Dancer",
	"Warrior", "Barbarian", "Smith", "Forger", "Outcast", "Hierophant", "Ninja", "Samurai", "Priest",
	"Dame", "Mute", "Fool", "Queen", "King", "Doll", "Nurse", "Host", "Ward", "Scout", "Spy", "Foe",
	"Guard", "Fae", "Belle", "Monk", "Son", "Daughter", "Soldier"
}

local aspects = {
	-- Homestuck aspects.
	"Time", "Space", "Void", "Light", "Mind", "Heart", "Rage", "Hope", "Doom", "Life", "Blood", "Breath",

	-- Custom aspects.
	"Rhyme", "Death", "Skulls", "Peace", "Doom", "Glory", "Terror", "Fear", "Bones", "Fury", "Sorrow",
	"Sadness", "Joy", "Happiness", "Brilliance", "Brightness", "Luminance", "Heat", "Warmth", "Flame",
	"Fire", "Might", "Muscle", "Strength", "Speed", "Darkness", "Shade", "Shadow", "Destiny", "Fame",
	"Fortune", "Money", "Cashflow", "Power", "Dope Beats", "Seas", "Oceans", "Tides", "Earth", "Stars",
	"Galaxies", "Nebulas", "Dimensions", "Desire", "Lust", "Gold", "Silver", "Platinum", "Diamond",
}

local planetQualities = {
	-- Homestuck qualities.
	"Wind", "Shade", "Light", "Rain", "Heat", "Clockwork", "Frost", "Frogs", "Crypts", "Helium", "Pyramids",
	"Neon", "Tombs", "Krypton", "Mounds", "Xenon", "Quartz", "Melody", "Sand", "Zephyrs", "Brains", "Fire",
	"Pulse", "Haze", "Little Cubes", "Tea", "Rays", "Frogs", "Thought", "Flow", "Maps", "Treasure", "Caves",
	"Silence", "Tents", "Mirth", "Wrath", "Angels", "Dew", "Glass", "Colors", "Mayhem",

	-- Custom qualities.
	"Darkness",
}

chg.GenerateHandle = function ()
	local pre, suf = handlePrefixes[math.random(#handlePrefixes)], handleSuffixes[math.random(#handleSuffixes)]
	return pre .. suf
end

chg.GenerateClass = function ()
	local class, aspect = classes[math.random(#classes)], aspects[math.random(#aspects)]
	return class .. " of " .. aspect
end

chg.GeneratePlanet = function ()
	local qual1, qual2 = planetQualities[math.random(#planetQualities)], planetQualities[math.random(#planetQualities)]

	while qual1 == qual2 do
		qual2 = planetQualities[math.random(#planetQualities)]
	end

	return qual1 .. " and " .. qual2
end

chg.MakeHandle = function ()
	local r, g, b = math.random(35, 255), math.random(35, 255), math.random(35, 255)
	local neutral_string = "&lt;180,180,180&gt;"
	local color_string = "&lt;" .. r .. "," .. g .. "," .. b .. "&gt;"

	local handle = chg.GenerateHandle()
	local class = chg.GenerateClass()
	local planet = chg.GeneratePlanet()

	decho("\n" .. string.format(
		"%sYour chumhandle is the %s%s%s. In the Land of %s%s%s, you are the %s%s%s. It's you.",
		neutral_string, color_string, handle,
		neutral_string, color_string, planet,
		neutral_string, color_string, class,
		neutral_string
	))
	send("\n")
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Discord Bot</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>--[[

	Discord Bot, for Mudlet.

	This module is written for Mudlet 3.0.0-delta. It is not guaranteed to
	work with other versions of the client.

	(c) Alexander Divine, January 10th, 2017.

]]--

discord = discord or {}

discord.info = {}
discord.info.name = "Discord Bot"
discord.info.author = "Lin"
discord.info.version = "0.1"
discord.info.description = "An integrated set of functions and controls for Discord."</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Discord API Integration</name>
					<packageName></packageName>
					<script></script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Shamanic Ritual Generator</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>--[[

	Shamanic Ritual Generator, for Mudlet.

	This module is written for Mudlet 3.0.0. It is not guaranteed to
	work with other versions of the client.

	(c) Alexander Divine, March 30th, 2017.

]]--

srg = srg or {}

srg.info = {}
srg.info.name = "Shamanic Ritual Generator"
srg.info.author = "Lin"
srg.info.version = "0.1"
srg.info.description = "Creates elaborate rituals to facilitate Shamanic roleplaying."</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Ritual Components</name>
					<packageName></packageName>
					<script>local beast_parts = {
	"ovary", "bladder", "lung", "spleen", "heart", "appendix", "liver", "eye",
	"stomach", "tongue", "testicle", "kidney", "bone", "pancreas", "brain"
}
local mammal_parts = {
	"fur", "tail", "claw"
}
local reptile_parts = {
	"scale", "claw", "tail"
}
local avian_parts = {
	"beak", "talon", "wing", "feather"
}
local fish_parts = {
	"scale", "gill", "tail", "fin"
}
local swine_parts = {
	"hoof", "snout"
}
local cervidae_parts = {
	"hoof", "horn", "antler"
}
local primate_parts = {
	"hand", "foot"
}

local get_parts = {}

get_parts.mammal = function (g)
	return mammal_parts
end

get_parts.reptile = function (g)
	return reptile_parts
end

get_parts.bird = function (g)
	return avian_parts
end

get_parts.fish = function (a)
	return fish_parts
end

get_parts.swine = function (a)
	return table.n_union(mammal_parts, swine_parts)
end

get_parts.cervidae = function (a)
	return table.n_union(mammal_parts, cervidae_parts)
end

get_parts.primate = function (a)
	return table.n_union(mammal_parts, primate_parts)
end

srg.GetAnimalParts = function (a, g)
	local p = table.n_union(beast_parts, get_parts[g]())
	return p
end

-- Beasts ----------------------------------------------------------------------

srg.beasts = {
	["mammal"] = {
		"rat", "mouse", "squirrel", "beaver", "lemming", "gopher",
		"polar bear", "grizzly bear", "black bear", "brown bear",
		"possum", "wombat", "badger",
		"cheetah", "lion", "dog", "cat", "leopard", "hyena", "jaguar", "wolf", "fox", "tiger", "cougar", "weasel", "mongoose"
	},
	["reptile"] = {
		"snake", "turtle", "lizard", "chameleon", "crocodile", "gecko", "bajibi"
	},
	["bird"] = {
		"raven", "gull", "swallow", "jackdaw", "bluejay", "condor", "eagle", "parrot", "chicken", "hummingbird", "owl", "crane", "toucan", "sparrow", "heron", "stork", "woodpecker",
		"albatross", "goose", "tizapez", "mesia", "rooster"
	},
	["fish"] = {
		"guppy", "carp", "goldfish", "catfish", "haddock", "shark", "bream", "pike", "salmon", "bluefish", "swordfish", "cod", "angelfish", "sunfish", "perch", "angler", "eel",
		"bluegill"
	},
	["swine"] = {
		"pig", "boar"
	},
	["cervidae"] = {
		"moose", "elk", "deer", "stag", "eland", 
	},
	["primate"] = {
		"chimpanzee", "gorilla", "ape", "orangutan", "lemur", "baboon"
	},
}

-- Generic ---------------------------------------------------------------------

srg.components = {}

srg.components.incense = {
	"acacia", "allspice", "aloes", "althea", "amber", "ambergris", "angelica", "anise seeds", "basil", "bay", "bayberry", "benzoin", "bergamont", "bistort", "bracken",
	"cardamom", "carnation", "cedar", "cedarwood", "chamomile", "cinnamon", "citron", "citronella", "clove", "coconut", "copal", "cypress", "damiana", "elecampane", "eucalyptus",
	"fern", "frankincense", "fumitory", "galangal", "gardenia", "ginger", "ginseng root", "gotu kola", "heather", "hibiscus flowers", "honeysuckle", "horehound", "hyacinth",
	"jasmine", "juniper", "lavender", "lemon", "lemongrass", "lilac", "lotus", "mace", "mastic", "mesquite", "mint", "musk", "myrrh", "nutmeg", "oakmoss", "orange", "patchouli",
	"peppermint", "pine", "poppy seeds", "rose", "rose geranium", "rosemary", "rue", "sage", "sagebrush", "sandalwood", "star anise seeds", "strawberry", "sweetgrass", "sweet pea",
	"thyme", "vanilla", "vervain", "vetivert", "violet", "willow", "wisteria", "wormwood", "yarrow"
}

-- Misc ------------------------------------------------------------------------

srg.races = {
	"arqeshi", "atavian", "dwarf", "grecht", "grook", "human", "horkval", "imp", "kelki", "mhun", "nazetu", "ogre", "orc", "rajamala", "troll", "tsol'aa", "xoran",
	"djeirani", "centaur", "goblin", "harpy", "kobold", "minotaur", "drakt", "nazetu", "chiav", "tsinkin", "pixie", "ophidian", "nymph", "faun", "faerie", "waldgeist",
	"utari", "golba", "caentoi", "ursal", "tarpen", "praexi", "aslinn", "dreikathi", "haekathi", "vierkathi"
}</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Crafting Convenience</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Initialize</name>
					<packageName></packageName>
					<script>--[[

	Crafting Convenience, for Mudlet.

	This module is written for Mudlet 3.0.0. It is not guaranteed to
	work with other versions of the client.

	(c) Brendon Hollesen, May 10th, 2017.

]]--

-- Primary table.
ccv = ccv or {}

-- Module information.
ccv.info = {}
ccv.info.name = "Crafting Convenience"
ccv.info.author = "Lin"
ccv.info.version = "1.0"
ccv.info.description = "Greatly facilitates the design and crafting process by hooking into commonly-used commands, extending their functionality and ease-of-use."

-- Colors used by the various displays.
ccv.color_secondary = "dark_green"
ccv.color_primary = "spring_green"
ccv.dark = "dim_grey"

-- Default values.
ccv.working_design = ccv.working_design or nil

-- In-game command separator used by the player. You will need to change this
-- if you use a different character or series of characters!
ccv.separator = "|"</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Design and Identity Database</name>
					<packageName></packageName>
					<script>-- A complete list of designs and every identity they are linked to. This list is
-- then used to create a reverse list that can be easily referred to.
ccv.designs = {
	["tailoring"] = {
		["323"] = {"handkerchief"},
		["2884"] = {"costume"},
		["2887"] = {"napkin"},
		["3469"] = {"shortskirt", "skirt"},
		["3470"] = {"longskirt", "skirt"},
		["3471"] = {"shirt", "top"},
		["3472"] = {"dress", "sundress"},
		["3473"] = {"shoes"},
		["3474"] = {"boots", "jackboots"},
		["3475"] = {"trousers", "pants", "breeches", "leggings", "knickers", "slacks"},
		["3476"] = {"tunic"},
		["3477"] = {"cloak", "burnoose"},
		["3478"] = {"hat", "cap", "headdress", "bonnet", "turban", "coif"},
		["3479"] = {"belt", "hipscarf", "cummerbund", "garterbelt"},
		["3480"] = {"gloves", "gauntlets", "glove", "mitten", "mittens", "sleeve"},
		["3481"] = {"vest", "waistcoat", "doublet"},
		["3482"] = {"surcoat", "coat", "jerkin"},
		["3483"] = {"panties", "underwear"},
		["3484"] = {"kilt"},
		["3485"] = {"doll"},
		["3486"] = {"shortcape", "cape", "poncho"},
		["3487"] = {"underpants", "underwear", "briefs", "underskirt"},
		["3488"] = {"bra", "brassiere"},
		["3489"] = {"longcape", "cape"},
		["3490"] = {"longcoat", "overcoat", "coat", "sherwani", "justacorps"},
		["3491"] = {"tapestry", "hanging"},
		["3492"] = {"sweater", "shirt", "pullover"},
		["3493"] = {"gown", "bliaut", "dress"},
		["3494"] = {"mask"},
		["3495"] = {"undershirt", "shirt"},
		["3496"] = {"bandana", "kerchief"},
		["3497"] = {"rug", "carpet", "mat"},
		["3498"] = {"toga", "stola", "kehrta"},
		["3499"] = {"blouse"},
		["3500"] = {"sandals", "shoes"},
		["3501"] = {"shortcoat", "jacket", "coat"},
		["3502"] = {"veil", "headscarf"},
		["3503"] = {"stockings", "hosen"},
		["3504"] = {"socks"},
		["3505"] = {"satchel"},
		["3506"] = {"chemise"},
		["3507"] = {"bodice", "corset"},
		["3508"] = {"quiver"},
		["3509"] = {"sash"},
		["3510"] = {"thong", "underwear", "underpants", "panties"},
		["3511"] = {"towel"},
		["3512"] = {"hood", "cowl"},
		["3513"] = {"slip"},
		["3514"] = {"shawl", "wrap", "mantle"},
		["3515"] = {"quilt", "blanket", "throw"},
		["3516"] = {"pouch", "purse"},
		["3517"] = {"headband"},
		["3518"] = {"cushion", "pillow"},
		["3519"] = {"corset"},
		["3520"] = {"weaponbelt", "belt", "bandolier", "baldric"},
		["3521"] = {"apron", "smock"},
		["3522"] = {"kimono"},
		["3523"] = {"cap", "coif"},
		["3524"] = {"collar", "gorget"},
		["3525"] = {"nightgown"},
		["3526"] = {"slippers"},
		["3527"] = {"kitbag", "bag"},
		["3528"] = {"scarf", "stole"},
		["3529"] = {"eyepatch", "patch", "eye-patch"},
		["3530"] = {"robe", "robes", "kisamoro"},
		["3531"] = {"negligee"},
		["3532"] = {"boxers", "shorts", "underwear", "underpants"},
		["3533"] = {"wineskin", "skin", "waterskin"},
		["3534"] = {"teddy"},
		["3535"] = {"armband", "band", "armlet"},
		["3536"] = {"pack", "backpack", "rucksack"},
		["3537"] = {"loincloth"},
		["3538"] = {"bandage"},
		["3539"] = {"bracers", "bracer", "wristguard", "wristguards", "vambrace", "cuff", "sleeves"},
		["3540"] = {"blanket", "throw"},
		["5442"] = {"mittens"},
		["7234"] = {"garland"},
		["7415"] = {"sari"},
		["7749"] = {"gaiter"},
		["7925"] = {"glove", "gauntlet", "glove"},
		["8838"] = {"flag", "banner"},
		["8862"] = {"gambeson", "coat"},
		["9035"] = {"hairribbon", "hairribbons", "ribbons", "ribbon", "hairtie"},
		["9427"] = {"tablecloth", "tablerunner"},
		["9694"] = {"mattress"},
		["10008"] = {"sheets", "sheet", "bedsheets"},
		["10020"] = {"tabard"},
		["10024"] = {"prayermat", "mat"},
		["10025"] = {"camisole"},
		["10122"] = {"cravat", "necktie", "tie"},
		["10506"] = {"suspenders"},
		["10507"] = {"overalls", "coveralls"},
		["10513"] = {"blindfold"},
		["11418"] = {"bedroll"},
		["11421"] = {"garters"},
		["13209"] = {"curtains", "curtain", "drapes"},
		["14226"] = {"wig"},
		["16186"] = {"uniform", "suit"},
		["18154"] = {"scabbard", "sheath"},
		["18350"] = {"leotard", "bodysuit"},
		["22654"] = {"wraps"},
	},

	["cooking"] = {
		["1456"] = {"plate", "dish", "platter"},
		["1457"] = {"slice"},
		["1462"] = {"hotpot", "tagine"},
		["1947"] = {"biscuit", "biscuits"},
		["2746"] = {"yam", "dish", "candied"},
		["3237"] = {"custard"},
		["3541"] = {"stew", "bowl"},
		["3542"] = {"sandwich", "roll", "wrap"},
		["3543"] = {"bread", "cornbread", "loaf", "flatbread", "tortilla"},
		["3544"] = {"steak"},
		["3545"] = {"porridge", "oatmeal", "bowl", "gruel"},
		["3546"] = {"pudding", "dessert"},
		["3547"] = {"sausage"},
		["3548"] = {"soup", "bowl", "pottage", "chowder", "broth"},
		["3549"] = {"cake", "cupcake", "cheesecake"},
		["3550"] = {"frosting", "icing"},
		["3551"] = {"lobster"},
		["3552"] = {"cookie"},
		["3553"] = {"candy", "chocolate"},
		["3554"] = {"casserole", "meatloaf"},
		["3555"] = {"tart", "tartlette"},
		["3556"] = {"omelet", "omelette"},
		["3557"] = {"pancake", "pancakes", "waffle", "waffles"},
		["3558"] = {"salad"},
		["3559"] = {"pizza"},
		["3560"] = {"pie", "pastry", "cobbler", "empanada"},
		["3561"] = {"paste"},
		["3563"] = {"snack"},
		["6322"] = {"cup"},
		["7414"] = {"dressing"},
		["9283"] = {"fish"},
		["10259"] = {"crepe", "crepes"},
		["10277"] = {"bar", "dessert"},
		["15283"] = {"noodles", "bowl", "pasta"},
		["16744"] = {"roll", "rolls", "pastry", "bun", "bagel"},
		["18910"] = {"muffin"},
		["19513"] = {"pinch", "blend"},
		["19516"] = {"roast"},
		["19574"] = {"kebab", "kebabs", "skewer"},
		["19604"] = {"ration", "waybread"},
	},

	["furniture"] = {
		["975"] = {"podium", "pedestal", "dais", "stage"},
		["3233"] = {"buffet", "bar", "counter"},
		["3234"] = {"bookcase", "bookshelf"},
		["3235"] = {"bed"},
		["3236"] = {"frame", "painting", "mural", "portrait", "mosaic", "plaque"},
		["3238"] = {"fireplace", "hearth", "firepit"},
		["3239"] = {"tub", "bathtub", "basin", "bath"},
		["3240"] = {"hammock"},
		["3241"] = {"couch", "sofa", "seat", "divan"},
		["3242"] = {"stool", "footstool"},
		["3243"] = {"bench", "pew", "slab"},
		["3244"] = {"workbench", "bench"},
		["3245"] = {"rockingchair"},
		["3246"] = {"shelf", "shelves"},
		["3247"] = {"table", "altar"},
		["3248"] = {"desk"},
		["3250"] = {"cabinet"},
		["3253"] = {"mirror"},
		["3254"] = {"fountain", "fountains"},
		["3255"] = {"ottoman"},
		["3256"] = {"chaise"},
		["3257"] = {"vanity"},
		["3258"] = {"cupboard"},
		["3259"] = {"wardrobe", "closet", "chest", "clothespress"},
		["3260"] = {"armchair"},
		["3263"] = {"coatrack"},
		["3264"] = {"armoire"},
		["3269"] = {"loveseat", "seat", "seats"},
		["3270"] = {"chair", "seat", "throne"},
		["8650"] = {"planter", "pot"},
		["9690"] = {"hookah"},
		["10006"] = {"stand"},
		["10023"] = {"cot", "crib"},
		["10081"] = {"statue", "monument", "sculpture", "idol", "headstone"},
		["10508"] = {"screen", "divider", "partition"},
		["10514"] = {"swing"},
		["10515"] = {"rack", "stand"},
		["10520"] = {"perch", "roost"},
		["11504"] = {"trellis"},
		["12366"] = {"cabinet", "display", "shelf"},
		["14278"] = {"cabinet"},
		["15406"] = {"trough"},
		["17956"] = {"decoration", "ornament", "knick-knack"},
	},

	["jewelcrafting"] = {
		["1074"] = {"birdcage", "cage", "pen", "birdhouse"},
		["2379"] = {"cufflinks"},
		["2759"] = {"dish", "bowl", "plate"},
		["2881"] = {"piercing", "barbell"},
		["2888"] = {"charm", "trinket", "token"},
		["3564"] = {"choker"},
		["3565"] = {"spectacles", "glasses", "spectacle", "goggles"},
		["3566"] = {"anklet", "sandal", "sandals"},
		["3567"] = {"sceptre", "scepter", "rod"},
		["3568"] = {"hairpin", "pin", "hairclip", "hairpiece", "haircoil"},
		["3569"] = {"needle"},
		["3570"] = {"necklace", "torc"},
		["3571"] = {"prayerbeads", "beads"},
		["3572"] = {"earring", "earrings", "hoop", "hoops", "stud", "studs"},
		["3573"] = {"bracelet", "bracelets", "bangle", "bangles", "wristband"},
		["3574"] = {"band", "ring"},
		["3575"] = {"pendant", "necklace", "locket", "amulet", "pectoral"},
		["3576"] = {"medal", "medallion", "badge", "insignia"},
		["3577"] = {"circlet", "crown", "headband", "diadem", "tikka", "coronet"},
		["3578"] = {"ring"},
		["3579"] = {"nosering"},
		["5506"] = {"teapot", "pot", "kettle"},
		["5507"] = {"pitcher", "jug", "ewer", "bottle", "decanter"},
		["5509"] = {"shaker", "mixer", "cocktail"},
		["7246"] = {"cup", "chalice", "goblet"},
		["8840"] = {"chime", "windchime"},
		["8957"] = {"phial"},
		["9132"] = {"brooch", "pin", "buckle"},
		["9845"] = {"armband", "torc"},
		["9855"] = {"syringe"},
		["10080"] = {"bust", "figurine", "paperweight"},
		["10121"] = {"box", "bin", "case", "musicbox"},
		["10123"] = {"monocle", "eyeglass"},
		["10504"] = {"candleholder", "lantern", "candelabra", "sconce", "incenseholder", "incense holder"},
		["10672"] = {"flask"},
		["11497"] = {"hourglass"},
		["13210"] = {"handmirror", "compact"},
		["13214"] = {"vase"},
		["13217"] = {"chain", "chains"},
		["14232"] = {"bottle"},
		["14279"] = {"fan"},
		["15108"] = {"shotglass", "glass"},
		["15140"] = {"glass", "flute", "tumbler"},
		["15869"] = {"jar", "jars"},
		["17954"] = {"whistle"},
		["18155"] = {"scabbard", "sheath"},
		["18156"] = {"tray"},
		["18175"] = {"handbell"},
		["22948"] = {"utensil", "fork", "spoon", "knife", "scoop", "whisk"},
	},

	["woodcrafting"] = {
		["797"] = {"pike"},
		["798"] = {"vial"},
		["799"] = {"pot"},
		["800"] = {"shovel", "spade"},
		["801"] = {"pipe"},
		["802"] = {"coffin", "sarcophagus"},
		["803"] = {"basket"},
		["804"] = {"toy"},
		["805"] = {"scroll"},
		["806"] = {"tinderbox"},
		["808"] = {"parasol"},
		["809"] = {"cane", "staff"},
		["810"] = {"puppet"},
		["811"] = {"book", "tome", "diary", "grimoire", "ledger", "manual", "sketchbook", "notebook", "calendar", "pamphlet"},
		["812"] = {"bucket"},
		["813"] = {"tankard", "flagon", "mug"},
		["814"] = {"statuette", "figurine", "trophy"},
		["815"] = {"totem", "totems"},
		["816"] = {"box", "bin", "case", "kit", "musicbox"},
		["817"] = {"chest", "locker", "trunk"},
		["818"] = {"dice", "die"},
		["2325"] = {"tarot deck", "deck"},
		["2758"] = {"birdfeeder"},
		["2883"] = {"easel"},
		["3601"] = {"comb", "brush"},
		["5248"] = {"bowl"},
		["5440"] = {"practicesword", "sword"},
		["8837"] = {"gourd", "watergourd"},
		["8854"] = {"crop", "ridingcrop"},
		["9134"] = {"fan"},
		["10022"] = {"coasters", "coaster"},
		["10026"] = {"wand"},
		["15285"] = {"crate", "barrel"},
		["25448"] = {"bag", "paperbag"},
	},
}

-- Now we build the design identity table in reverse, to make lookup much easier.
ccv.r_designs = {}

for trade, _ in pairs(ccv.designs) do
	for id, t in pairs(ccv.designs[trade]) do
		for _, identity in ipairs(ccv.designs[trade][id]) do
			if ccv.r_designs[identity] == nil then
				ccv.r_designs[identity] = {}
			end

			table.insert(ccv.r_designs[identity], id)
		end
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Utilities</name>
					<packageName></packageName>
					<script>ccv.Notify = function (str)
	cecho("\n&lt;" .. ccv.color_secondary .. "&gt;[&lt;" .. ccv.color_primary .. "&gt;CCV&lt;" .. ccv.color_secondary .. "&gt;]: &lt;grey&gt;" .. str)
	send("\n", false)
end

ccv.ValidWorkingDesign = function ()
	if ccv.working_design == nil then return false end
	if ccv.working_design == 0 then return false end
	if ccv.working_design == "" then return false end

	return true
end

ccv.NoDesignWarning = function ()
	ccv.Notify("You do not have a working design set. Use any DESIGN-based command to set one!")
end

ccv.NoPatternWarning = function ()
	ccv.Notify("That is not a valid design pattern.")
end

ccv.Replace = function (str)
	deleteLine()
	cecho(str)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>handleCCVEvents</name>
					<packageName></packageName>
					<script>local SetWorkingDesign = function (id)
	ccv.working_design = id
	ccv.Notify("Default working design set to &lt;cyan&gt;" .. ccv.working_design .. "&lt;grey&gt;.")
end

local RequestedNewDesignHandler = function (id)
	SetWorkingDesign(id)
end

local UpdateWorkingDesignHandler = function (id)
	if ccv.working_design ~= id then
		SetWorkingDesign(id)
	end
end

handleCCVEvents = function (e, ...)
	if e == "ccv.requested_new_design" then
		-- Player has just entered "DESIGN REQUEST".
		RequestedNewDesignHandler(...)
	elseif e == "ccv.update_working_design" then
		-- Player is using any DESIGN-based verb.
		UpdateWorkingDesignHandler(...)
	end
end</script>
					<eventHandlerList>
						<string>ccv.requested_new_design</string>
						<string>ccv.update_working_design</string>
					</eventHandlerList>
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Breakdown</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>BD: Initialization</name>
					<packageName></packageName>
					<script>--[[

	Breakdown, for Mudlet.

	This module is written for Mudlet 4.8.0. It is not guaranteed to
	work with other versions of the client.

	(c) Earthcrusher, May 8th, 2020.

]]--

-- Primary table.
bd = bd or {}

-- Module information.
bd.info = {}
bd.info.name = "Breakdown"
bd.info.author = "Earthcrusher"
bd.info.version = "0.1"
bd.info.description = "An enemy/ally handling suite. Takes the busywork out of the enemying/allying process, and aids with target calling in group fights."

-- Colors used by the various displays.
bd.color_secondary = "ansi_red"
bd.color_primary = "indian_red"
bd.dark = "dim_grey"

-- Default values.
bd.enemies = bd.enemies or {}
bd.allies = bd.allies or {}
bd.targets = bd.targets or {}

-- In-game command separator used by the player. You will need to change this
-- if you use a different character or series of characters!
bd.separator = "|"</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>BD: Utilities</name>
					<packageName></packageName>
					<script>bd.notify = function (str)
	cecho("\n&lt;" .. bd.color_secondary .. "&gt;[&lt;" .. bd.color_primary .. "&gt;BD&lt;" .. bd.color_secondary .. "&gt;]: &lt;grey&gt;" .. str)
	send("\n", false)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>BDEventHandler</name>
					<packageName></packageName>
					<script>local function AddEnemyHandler(e)
end

local function RemoveEnemyHandler(e)
end

local function AddAllyHandler(a)
end

local function RemoveAllyHandler(a)
end

local function ClearEnemiesHandler()
  bd.enemies = {}
  bd.notify("All enemies removed.")
end

local function ClearAlliesHandler()
  bd.allies = {}
  bd.notify("All allies removed.")
end


function BDEventHandler(e, ...)
  if e == "bd.add_enemy" then AddEnemyHandler(...)
  elseif e == "bd.remove_enemy" then RemoveEnemyHandler(...)
  elseif e == "bd.add_ally" then AddAllyHandler(...)
  elseif e == "bd.remove_ally" then RemoveAllyHandler(...)
  elseif e == "bd.clear_enemies" then ClearEnemiesHandler(...)
  elseif e == "bd.clear_allies" then ClearAlliesHandler(...)
  end
end</script>
					<eventHandlerList>
						<string>bd.add_enemy</string>
						<string>bd.remove_enemy</string>
						<string>bd.add_ally</string>
						<string>bd.remove_ally</string>
						<string>bd.clear_enemies</string>
						<string>bd.clear_allies</string>
					</eventHandlerList>
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Trawler</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>GetFishingHoles</name>
					<packageName></packageName>
					<script>function get_fishing_holes(search_string, display_results, display_full_results)

	if not fishing_holes then
		load_fishing_db()
	end

	search_string = search_string:lower()
	local results = {}
	local result_strings = {}

	for k,v in pairs(fishing_holes) do 

		v.fish = v.fish or {}
		local matched_room = false
		-- Look for typetext.
		if v.type:lower():find(search_string) then
			table.insert(results, v) 
			result_strings[v.name] = v.type
			matched_room = true
		end

		-- Look for nametext.
		if not matched_room and k:lower():find(search_string) then
			table.insert(results, v) 
			result_strings[v.name] = k
			matched_room = true
		end
	
		-- Look for fish.
		if not matched_room then
			for _, fishtype in pairs(v.fish) do
				if fishtype:lower():find(search_string) then
					local found = false
					for _, j in pairs(results) do
						if j.name == v.name and j.fish == fishtype then 
							found = true
							break
						end
					end
					if not found then 
						table.insert(results, v) 
						result_strings[v.name] = fishtype
					end
				end
			end
		end
	end

	if display_results then
		if #results == 0 then
			hecho("|cccccccNo results for '" .. search_string .. "'.\n")
		else
	
			for k,v in pairs(result_strings) do
				local startstr, endstr = result_strings[k]:lower():find(search_string)
				result_strings[k] = result_strings[k]:sub(1, startstr-1) .. "|cff0000" .. result_strings[k]:sub(startstr, endstr) .. "|ccccccc" .. result_strings[k]:sub(endstr+1)
			end

			hecho("|cccccccResults for '" .. search_string .. "':\n")
			for k,v in pairs(results) do
				if display_full_results then
					hecho("   " .. v.name:title() .. string.rep(" ", 30 - v.name:len()) .. "(" .. result_strings[v.name] .. ")\n")
					hecho("     " .. v.type:title() .. ", " .. #v.fish .. " type(s) of fish, fishing vnum v" .. v.rooms[1] .. ".\n\n")
				else
					hecho("   " .. v.name:title() .. string.rep(" ", 30 - v.name:len()) .. "(" .. result_strings[v.name] .. ")\n")
				end
			end
			echo("\n")
		end
	end

	return results
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>SaveLoad</name>
					<packageName></packageName>
					<script>function load_fishing_db()
	local path = getMudletHomeDir().."/aetoliaFishingDB.sav"
	fishing_holes = {}
	if io.exists(path) then
		table.load(path,fishing_holes)
	end
end

function save_fishing_db()
  if not fishing_holes then return false end
  table.save(getMudletHomeDir().."/aetoliaFishingDB.sav", fishing_holes)
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Tutorials, Requests</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<Script isActive="no" isFolder="no">
				<name>Stutter System for Edric</name>
				<packageName></packageName>
				<script>--[[
	Generic Stutter Function.

	A simple function that accepts text and creates a stuttering effect
	for use in roleplaying.

	by Lin, November 25, 2013
]]--

local stutter = function (word)
	-- This function, available only in this script (s'why it's local),
	-- draws out any word given to it.
	-- Ex: gods --&gt; g- gods
	--     leyline --&gt; l- leyline

	word = tostring(word) -- Make sure the word is a string, just in case
								-- you pass any weirdness to it.

	return word:sub(1, 1) .. "- " .. word
end

local plosives = {						-- Hard plosive sounds. Not perfect.
											-- See notes below.
	"b", "d", "g", "k", "p", "t", "x",
	"B", "D", "G", "K", "P", "T", "X"
}

local stutterWords = {				-- Your guaranteed stutter words. These
											-- are words you always want to check for
											-- stuttering.
	"gods", "focus", "boobies"
}

local stutterChance = 75				-- Chance (in percentage) of how likely
											-- stuttering will occur.

local stuttersPerLine = 2			-- Hard limit for how many words to use
											-- for generating stutter.

local stutterPlosives = true			-- true: Will try to stutter words beginning
											-- in plosive sounds (hard d, g, t, etc.).
											-- false: only uses the stutterWords.

StutterText = function (str)
	if type(str) ~= "string" then
		error("Passed a non-string value to StutterText()!")
		return
	end

	local splCount = 0 -- Number to check against stuttersPerLine.

	str = str:gsub("(%w+)", function (word)
		-- Using gsub, we'll run over every word in the string and check to see if we
		-- should stutter it. Each word is run through this instanced function, with
		-- the word object itself named (appropriately) "word".

		if splCount &lt;= stuttersPerLine then -- Only generate stutter if within the limit.
			if table.contains(stutterWords, string.lower(word)) then -- Check our stutterWords first.
				if math.random(100) &lt;= stutterChance then
					word = stutter(word)
					-- Stuttered a word, so make sure to increment how many stutters we've used.
					splCount = splCount + 1
				end

			elseif stutterPlosives == true then -- If allowed, try to stutter plosive sounds.
				if table.contains(plosives, word:sub(1, 1)) then
					if math.random(100) &lt;= stutterChance then
						word = stutter(word)
						splCount = splCount + 1
					end
				end
			end
		end

		return word
	end)

	return str -- Return the modified text.
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Mana Engine Testing</name>
				<packageName></packageName>
				<script>mana = {}

mana.map = {}
for i = 1, 30 do
   mana.map[i] = {}

   for g = 1, 70 do
      table.insert(mana.map[i], ".")
   end
end

mana.overMap = [[
ggggw.....................
.wgggg....................
.wwwggg...................
..wwwggg..................
.wwwggw...................
wwwggw....................
.wwgwgg...................
...gwggg..................
....ggg...................
]]

mana.mergeMap = function ()
   local merge = mana.overMap:split("\n")

   local x = 0
   for i, line in ipairs(merge) do
      local y = i
      if line ~= "" then
         line:gsub("(.)", function (char)
            x = x + 1
            mana.map[y][x] = char
         end)
      end
   end
end

--mergeMap()

--for k, v in pairs(map) do
--	echo("\n" .. table.concat(map[k]))
--end

mana.displayMap = function ()
	cecho("\n&lt;a_brown&gt;" .. string.rep("-", 70) .. "\n")

	for row, _ in pairs(mana.map) do
		echo("\n")

		local tilecolor = "a_darkgrey"
		for i, tile in ipairs(mana.map[row]) do
			if tile == "g" then tilecolor = "a_green"
			elseif tile == "w" then tilecolor = "a_darkblue" end

			fg(tilecolor)
			echo(tile)
		end
	end
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Text Gradient Generator</name>
				<packageName></packageName>
				<script>gradientText = function (text, sr, sg, sb, er, eg, eb)
	-- Sort and organize our color values.
  local start_color = {["r"] = sr, ["g"] = sg, ["b"] = sb}
  local end_color = {["r"] = er, ["g"] = eg, ["b"] = eb}
  local inc = {["r"] = 0, ["g"] = 0, ["b"] = 0}
  
	-- A simple means to determine how many steps to get from one color to the other.
  local steps = text:len()
  
  -- For each color, figure out how many incremental steps we'll need to take to get from the start value to the end value.
  for _, color in ipairs({"r", "g", "b"}) do
  	local s, e = start_color[color], end_color[color]
  	if s &gt; e then
  		inc[color] = 0 - ((s - e) / steps)
  	else
  		inc[color] = (e - s) / steps
  	end
		
		-- Cap it off nicely. Mudlet's color functions don't like non-whole numbers!
  	inc[color] = math.round(inc[color])
  end
  
  -- Process the text.
  local r, g, b = start_color.r, start_color.g, start_color.b
  local init = true
  local color_code
  text = text:gsub("(.)", function (a)
		-- Inc/decrement the color, step by step.
		if init ~= true then
  		r = r + inc.r
  		g = g + inc.g
  		b = b + inc.b
		end
		
		init = nil
  	
		-- Fix values that are somehow too high or low.
  	if r &lt; 0 then r = 0 elseif r &gt; 255 then r = 255 end
  	if g &lt; 0 then g = 0 elseif g &gt; 255 then g = 255 end
  	if b &lt; 0 then b = 0 elseif b &gt; 255 then b = 255 end
		
		-- Rudimentary formatting, then we alter the text.
  	color_code = "&lt;" .. r .. "," .. g .. "," .. b .. "&gt;"
		return color_code .. a
  end)
  
  return text
end

hgradientText = function (text, str1, str2)
	local r1 = tonumber(str1:match("^(..)....$"), 16)
	local g1 = tonumber(str1:match("^..(..)..$"), 16)
	local b1 = tonumber(str1:match("^....(..)$"), 16)
	local r2 = tonumber(str2:match("^(..)....$"), 16)
	local g2 = tonumber(str2:match("^..(..)..$"), 16)
	local b2 = tonumber(str2:match("^....(..)$"), 16)
	return gradientText(text, r1, g1, b1, r2, g2, b2)
end</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>System Updating and Synchronization</name>
			<packageName></packageName>
			<script>-- Called shortly after startup, and once an hour thereafter to check for updates
-- to the main system. Also manages the updating of code from the main Github repo.
local slash = (string.char(getMudletHomeDir():byte()) == "/") and "/" or "\\"
local path = getMudletHomeDir()
local profiles = path .. slash .. "current"
local distro = path .. slash .. "distro"

-- Create the "distro" folder if it doesn't already exist.
CheckForDistroFolder = function ()
	if lfs.attributes(distro) ~= nil and lfs.attributes(distro).mode == "directory" then
		return
	end
	
	local origin_dir = lfs.currentdir()
	lfs.chdir(path)
	lfs.mkdir("distro")
	lfs.chdir(origin_dir)
end

-- Find the most recent profile .xml.
GetNewestProfile = function ()
	if lfs.attributes(profiles) == nil then
		return
	end
	
	local profile_table = {}

	-- Collect files in the profile folder and store their modification date.
	for filename in lfs.dir(profiles) do
		if filename ~= "." and filename ~= ".." then
			profile_table[#profile_table + 1] = {name = filename, last_mod = lfs.attributes(profiles .. slash .. filename, "modification")}
		end
	end

	-- Sort these files by newest to oldest.
	table.sort(profile_table, function (a, b) return b.last_mod &lt; a.last_mod end)

	return profile_table[1]
end

-- Copy the newest profile and send it to the folder containing the repo.</script>
			<eventHandlerList />
		</Script>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Movement</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>-1</keyModifier>
			<Key isActive="yes" isFolder="no">
				<name>LOOK</name>
				<packageName></packageName>
				<script>cd.Move("look")</script>
				<command></command>
				<keyCode>53</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>SW</name>
				<packageName></packageName>
				<script>cd.Move("sw")</script>
				<command></command>
				<keyCode>49</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>S</name>
				<packageName></packageName>
				<script>cd.Move("s")</script>
				<command></command>
				<keyCode>50</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>SE</name>
				<packageName></packageName>
				<script>cd.Move("se")</script>
				<command></command>
				<keyCode>51</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>W</name>
				<packageName></packageName>
				<script>cd.Move("w")</script>
				<command></command>
				<keyCode>52</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>NW</name>
				<packageName></packageName>
				<script>cd.Move("nw")</script>
				<command></command>
				<keyCode>55</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>N</name>
				<packageName></packageName>
				<script>cd.Move("n")</script>
				<command></command>
				<keyCode>56</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>NE</name>
				<packageName></packageName>
				<script>cd.Move("ne")</script>
				<command></command>
				<keyCode>57</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>UP</name>
				<packageName></packageName>
				<script>cd.Move("up")</script>
				<command></command>
				<keyCode>45</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>DN</name>
				<packageName></packageName>
				<script>cd.Move("down")</script>
				<command></command>
				<keyCode>43</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>IN</name>
				<packageName></packageName>
				<script>cd.Move("in")</script>
				<command></command>
				<keyCode>47</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>OUT</name>
				<packageName></packageName>
				<script>cd.Move("out")</script>
				<command></command>
				<keyCode>42</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>E</name>
				<packageName></packageName>
				<script>cd.Move("e")</script>
				<command></command>
				<keyCode>54</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>MAP</name>
				<packageName></packageName>
				<script></script>
				<command>map</command>
				<keyCode>48</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>CTRL Modifier</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>-1</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>SW</name>
					<packageName></packageName>
					<script>cd.Move("sw", "control")</script>
					<command></command>
					<keyCode>49</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>S</name>
					<packageName></packageName>
					<script>cd.Move("s", "control")</script>
					<command></command>
					<keyCode>50</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>SE</name>
					<packageName></packageName>
					<script>cd.Move("se", "control")</script>
					<command></command>
					<keyCode>51</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>W</name>
					<packageName></packageName>
					<script>cd.Move("w", "control")</script>
					<command></command>
					<keyCode>52</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>NW</name>
					<packageName></packageName>
					<script>cd.Move("nw", "control")</script>
					<command></command>
					<keyCode>55</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>N</name>
					<packageName></packageName>
					<script>cd.Move("n", "control")</script>
					<command></command>
					<keyCode>56</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>NE</name>
					<packageName></packageName>
					<script>cd.Move("ne", "control")</script>
					<command></command>
					<keyCode>57</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>E</name>
					<packageName></packageName>
					<script>cd.Move("e", "control")</script>
					<command></command>
					<keyCode>54</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>UP</name>
					<packageName></packageName>
					<script>cd.Move("up", "control")</script>
					<command></command>
					<keyCode>45</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>DN</name>
					<packageName></packageName>
					<script>cd.Move("down", "control")</script>
					<command></command>
					<keyCode>43</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>IN</name>
					<packageName></packageName>
					<script>cd.Move("in", "control")</script>
					<command></command>
					<keyCode>47</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>OUT</name>
					<packageName></packageName>
					<script>cd.Move("out", "control")</script>
					<command></command>
					<keyCode>42</keyCode>
					<keyModifier>603979776</keyModifier>
				</Key>
			</KeyGroup>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>ALT Modifier</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>-1</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>SW</name>
					<packageName></packageName>
					<script>cd.Move("southwest", "alt")</script>
					<command></command>
					<keyCode>49</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>S</name>
					<packageName></packageName>
					<script>cd.Move("south", "alt")</script>
					<command></command>
					<keyCode>50</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>SE</name>
					<packageName></packageName>
					<script>cd.Move("southeast", "alt")</script>
					<command></command>
					<keyCode>51</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>W</name>
					<packageName></packageName>
					<script>cd.Move("west", "alt")</script>
					<command></command>
					<keyCode>52</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>NW</name>
					<packageName></packageName>
					<script>cd.Move("northwest", "alt")</script>
					<command></command>
					<keyCode>55</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>N</name>
					<packageName></packageName>
					<script>cd.Move("north", "alt")</script>
					<command></command>
					<keyCode>56</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>NE</name>
					<packageName></packageName>
					<script>cd.Move("northeast", "alt")</script>
					<command></command>
					<keyCode>57</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>E</name>
					<packageName></packageName>
					<script>cd.Move("east", "alt")</script>
					<command></command>
					<keyCode>54</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>UP</name>
					<packageName></packageName>
					<script>cd.Move("up", "alt")</script>
					<command></command>
					<keyCode>45</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>DN</name>
					<packageName></packageName>
					<script>cd.Move("down", "alt")</script>
					<command></command>
					<keyCode>43</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>IN</name>
					<packageName></packageName>
					<script>cd.Move("in", "alt")</script>
					<command></command>
					<keyCode>47</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>OUT</name>
					<packageName></packageName>
					<script>cd.Move("out", "alt")</script>
					<command></command>
					<keyCode>42</keyCode>
					<keyModifier>671088640</keyModifier>
				</Key>
			</KeyGroup>
			<Key isActive="yes" isFolder="no">
				<name>Special</name>
				<packageName></packageName>
				<script>cd.Move("special")</script>
				<command></command>
				<keyCode>53</keyCode>
				<keyModifier>603979776</keyModifier>
			</Key>
		</KeyGroup>
		<Key isActive="yes" isFolder="no">
			<name>(F1) Bash Attack / PK Attack</name>
			<packageName></packageName>
			<script>cd.initiateBashing()</script>
			<command></command>
			<keyCode>16777264</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
		<Key isActive="yes" isFolder="no">
			<name>(F2) PK Utility</name>
			<packageName></packageName>
			<script>local c = cd.player.class

if cd.modules.pk == true then
	notify("PK is &lt;a_green&gt;enabled&lt;a_grey&gt;, setting up defenses.")
	cd.class[c].prepare()
else
	notify("PK is &lt;a_red&gt;disabled&lt;a_grey&gt;, returning to standby.")
	cd.class[c].unprepare()
end</script>
			<command></command>
			<keyCode>16777265</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
		<Key isActive="yes" isFolder="no">
			<name>(F3) [!!!] Reuse me!</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>16777266</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
		<Key isActive="yes" isFolder="no">
			<name>(F4) Evaluate</name>
			<packageName></packageName>
			<script></script>
			<command>eval</command>
			<keyCode>16777267</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
		<Key isActive="yes" isFolder="no">
			<name>(F6) Gold</name>
			<packageName></packageName>
			<script></script>
			<command>gold</command>
			<keyCode>16777269</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
		<Key isActive="yes" isFolder="no">
			<name>(F9) Toggle Curing</name>
			<packageName></packageName>
			<script>expandAlias("autocure")</script>
			<command></command>
			<keyCode>16777272</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
		<Key isActive="yes" isFolder="no">
			<name>(F12) Emergency Escape</name>
			<packageName></packageName>
			<script>-- This hotkey is designed to cancel out of various system modes, including
-- curing/input pauses, special prompts, and more.

local halted = function (name)
	cecho("&lt;a_darkgrey&gt;\n      " .. name .. " halted.")
end

notify("Emergency escape activated.", false)

queue_override = true
send("queue clear", false)

if cd.bashing.currentlyAttacking == true then
	cd.bashing.currentlyAttacking = false
	halted("Bashing")
end

if autoCollection == true then
	autoCollectPart = nil
	autoCollectionNeedScalpel = nil
	autoCollection = nil
	halted("Apothecary auto-collection")
end

if classDefenseQueue ~= nil then
	classDefenseQueue = nil
	halted("Defensive script")
end

temp_clear_queue_timer = tempTimer(5, clearQueue)</script>
			<command></command>
			<keyCode>16777275</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
		<KeyGroup isActive="no" isFolder="yes">
			<name>Action Bar</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>-1</keyModifier>
			<Key isActive="no" isFolder="no">
				<name>1 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(1)</script>
				<command></command>
				<keyCode>49</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>1 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(1)</script>
				<command></command>
				<keyCode>49</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="no" isFolder="no">
				<name>2 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(2)</script>
				<command></command>
				<keyCode>50</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>2 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(2)</script>
				<command></command>
				<keyCode>50</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="no" isFolder="no">
				<name>3 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(3)</script>
				<command></command>
				<keyCode>51</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>3 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(3)</script>
				<command></command>
				<keyCode>51</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="no" isFolder="no">
				<name>4 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(4)</script>
				<command></command>
				<keyCode>52</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>4 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(4)</script>
				<command></command>
				<keyCode>52</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="no" isFolder="no">
				<name>5 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(5)</script>
				<command></command>
				<keyCode>53</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>5 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(5)</script>
				<command></command>
				<keyCode>53</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="no" isFolder="no">
				<name>6 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(6)</script>
				<command></command>
				<keyCode>54</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>6 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(6)</script>
				<command></command>
				<keyCode>54</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="no" isFolder="no">
				<name>7 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(7)</script>
				<command></command>
				<keyCode>55</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>7 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(7)</script>
				<command></command>
				<keyCode>55</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="no" isFolder="no">
				<name>8 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(8)</script>
				<command></command>
				<keyCode>56</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>8 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(8)</script>
				<command></command>
				<keyCode>56</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="no" isFolder="no">
				<name>9 (hotkey)</name>
				<packageName></packageName>
				<script>hotKey(9)</script>
				<command></command>
				<keyCode>57</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>9 (toggle)</name>
				<packageName></packageName>
				<script>cd.toggleKey(9)</script>
				<command></command>
				<keyCode>57</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
		</KeyGroup>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Save Text</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>-1</keyModifier>
			<Key isActive="yes" isFolder="no">
				<name>Store Text</name>
				<packageName></packageName>
				<script>cmd_line_history = cmd_line_history or {}

local text = getCmdLine()
cmd_line_history[#cmd_line_history + 1] = text

notify("Command line snippet saved. Press &lt;a_red&gt;CTRL + PgDn&lt;a_grey&gt; to cycle through saved snippets.")</script>
				<command></command>
				<keyCode>16777238</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>Recall Text</name>
				<packageName></packageName>
				<script>cmd_line_history = cmd_line_history or {}
cmd_line_index = cmd_line_index or 1

printCmdLine(cmd_line_history[cmd_line_index])

cmd_line_index = cmd_line_index + 1
if cmd_line_index &gt; #cmd_line_history then
  cmd_line_index = 1
end</script>
				<command></command>
				<keyCode>16777239</keyCode>
				<keyModifier>67108864</keyModifier>
			</Key>
		</KeyGroup>
		<Key isActive="yes" isFolder="no">
			<name>(F5) Survey</name>
			<packageName></packageName>
			<script></script>
			<command>survey</command>
			<keyCode>16777268</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
	</KeyPackage>
	<VariablePackage>
		<HiddenVariables />
	</VariablePackage>
</MudletPackage>
